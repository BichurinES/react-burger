{"version":3,"sources":["components/loader/loader.module.css","components/modal-overlay/modal-overlay.module.css","components/error-popup/error-popup.module.css","components/info-tooltip/info-tooltip.module.css","components/success-popup/success-popup.module.css","components/bun-constructor-element/bun-constructor-element.module.css","components/orders/orders.module.css","pages/profile.module.css","components/orders-status/orders-status.module.css","reportWebVitals.ts","utils/constants.ts","services/norma-api.ts","services/token.ts","components/protected-route/protected-route.tsx","components/protected-from-auth-route/protected-from-auth-route.tsx","components/header-button/header-button.tsx","services/hooks.ts","components/app-header/app-header.tsx","components/loader/loader.tsx","components/main/main.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done-animation.gif","components/order-details/order-details.tsx","components/ingredient-details/ingredient-details.tsx","components/info-tooltip/info-tooltip.tsx","components/error-popup/error-popup.tsx","services/actions/action-types.ts","services/actions/popups.ts","utils/utils.ts","services/actions/ws-actions.ts","components/past-order-details/past-order-details.tsx","components/success-popup/success-popup.tsx","components/popups/popups.tsx","services/actions/burger-ingredients.ts","services/actions/profile.ts","components/ingredient/ingredient.tsx","components/ingredients-category/ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","components/bun-constructor-element/bun-constructor-element.tsx","components/main-constructor-element/main-constructor-element.tsx","services/actions/burger-constructor.ts","components/modal-loader/modal-loader.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","components/password-placeholder-input/password-placeholder-input.tsx","components/credentials-form/credentials-form.tsx","services/actions/login.ts","pages/login.tsx","services/actions/register.ts","pages/register.tsx","services/actions/forgot-password.ts","pages/forgot-password.tsx","services/actions/reset-password.ts","pages/reset-password.tsx","components/edit-user/edit-user.tsx","components/order-card-ingredients/order-card-ingredients.tsx","components/order-card/order-card.tsx","components/orders/orders.tsx","pages/profile.tsx","pages/ingredients.tsx","components/orders-status/orders-status.tsx","pages/feed.tsx","pages/not-found.tsx","pages/order-page.tsx","components/app/app.tsx","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/popups.ts","services/reducers/profile.ts","services/reducers/register.ts","services/reducers/login.ts","services/reducers/forgot-password.ts","services/reducers/reset-password.ts","services/reducers/ws-reducer.ts","services/reducers/index.ts","services/middleware/socket-middleware.ts","services/store.ts","index.tsx","components/past-order-details/past-order-details.module.css","components/burger-constructor/burger-constructor.module.css","components/ingredient-details/ingredient-details.module.css","components/order-card/order-card.module.css","components/order-card-ingredients/order-card-ingredients.module.css","components/credentials-form/credentials-form.module.css","pages/feed.module.css","components/app-header/app-header.module.css","components/ingredient/ingredient.module.css","components/modal/modal.module.css","components/burger-ingredients/burger-ingredients.module.css","components/main-constructor-element/main-constructor-element.module.css","components/header-button/header-button.module.css","components/main/main.module.css","components/order-details/order-details.module.css","components/ingredients-category/ingredients-category.module.css","components/edit-user/edit-user.module.css","pages/not-found.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NORMA_API_URL","USER_URL","MAIN_PATH","FEED_PATH","FEED_ID_PATH","PROFILE_PATH","PROFILE_ORDERS_PATH","PROFILE_ORDERS_ID_PATH","LOGIN_PATH","REGISTER_PATH","FORGOT_PASSWORD_PATH","RESET_PASSWORD_PATH","INGREDIENTS_PATH","INGREDIENTS_ID_PATH","TOKEN_ERR_MSG","createRequest","url","method","body","token","headers","Authorization","isRequestFailed","fetch","JSON","stringify","mode","cache","credentials","redirect","referrerPolicy","res","ok","json","Error","message","refreshTokenRequest","refreshToken","useToken","Cookies","get","accessToken","addTokens","addedAccessToken","addedRefreshToken","split","set","expires","getToken","a","data","clearAllTokens","remove","ProtectedRoute","children","rest","render","location","to","pathname","state","from","ProtectedFromAuthRoute","HeaderButton","path","text","exact","className","styles","button","activeClassName","link_active","useDispatch","dispatchHook","useLocation","locationHook","useSelector","selectorHook","AppHeader","header","container","menu","type","logo","Loader","loader","Main","isLoading","main","main_loader","ModalOverlay","isLockApp","handleClosePopup","overlay","onMouseDown","e","target","currentTarget","defaultProps","Modal","title","useEffect","closeByEscape","key","document","addEventListener","removeEventListener","ReactDOM","createPortal","modal","onClick","getElementById","OrderDetails","orderDetailsContent","popups","order","number","src","donePath","alt","image","IngredientDetails","id","useParams","ingredients","find","_id","image_large","name","calories","proteins","fat","carbohydrates","nutrition","component","InfoTooltip","ErrorPopup","errorPopupContent","error","ADD_INGREDIENT_TO_CONSTRUCTOR","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","REPLACE_BUN_IN_CONSTRUCTOR","UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER","COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER","REPLACE_ITEMS_IN_DRAGGING_CONTAINER","RESET_DRAGGING_CONTAINER","RESET_CONSTRUCTOR","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","INCREASE_INGREDIENT","DECREASE_INGREDIENT","RESET_INGREDIENTS_COUNT","GET_ORDER_DETAILS_REQUEST","GET_ORDER_DETAILS_SUCCESS","GET_ORDER_DETAILS_FAILED","CLOSE_ORDER_DETAILS","OPEN_ERROR_POPUP","CLOSE_ERROR_POPUP","OPEN_SUCCESS_POPUP","CLOSE_SUCCESS_POPUP","UPDATE_TOKEN","SET_USER","CLEAR_USER","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","WS_FEED_CONNECTION_START","WS_FEED_CONNECTION_STOP","WS_FEED_CONNECTION_SUCCESS","WS_FEED_CONNECTION_ERROR","WS_FEED_CONNECTION_CLOSED","WS_GET_FEED","WS_USER_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_STOP","WS_USER_ORDERS_CONNECTION_SUCCESS","WS_USER_ORDERS_CONNECTION_ERROR","WS_USER_ORDERS_CONNECTION_CLOSED","WS_GET_USER_ORDERS","FEED_REQUEST","FEED_SUCCESS","FEED_FAILED","openErrorPopupAction","payload","openSuccessPopupAction","successData","getOrderDetails","dispatch","ingredientsId","sendOrderRequest","catch","err","formatDate","dateString","date","Date","dateDay","getDate","today","dayName","toLocaleString","month","day","time","hour","minute","timeOffset","getTimezoneOffset","getCardData","card","updatedCard","totalPrice","updatedIngredients","forEach","ingredient","fullIngredientData","price","push","image_mobile","createdAt","wsUserOrdersConnectionStartAction","wsUserOrdersConnectionStopAction","getFeed","getState","feedData","orders","map","PastOrderDetails","useRouteMatch","ws","profile","useMemo","feed","feedOrder","userOrders","userOrder","formatedIngredients","length","foundIngredientIndex","findIndex","redIngredient","qty","status","list","ingrName","bottom","SuccessPopup","successPopupContent","success","Popups","history","useHistory","background","isOrderDetailsOpen","isErrorPopupOpen","isSuccessPopupOpen","handleCloseRoutePopup","useCallback","replace","isPopupOpen","increaseIngredientAction","decreaseIngredientAction","getIngredients","updateTokenAction","setUserAction","user","getUser","getUserRequest","getUserSuccessAction","editUser","form","editUserRequest","editUserSuccessAction","signOut","cb","logoutRequest","Ingredient","useDrag","item","dragRef","ref","count","size","IngredientsCategory","forwardRef","cards","BurgerIngredients","filterIngredients","bun","sauce","useState","current","setCurrent","bunRef","useRef","sauceRef","mainRef","contentRef","handleScroll","window","requestAnimationFrame","closestCategory","top","getBoundingClientRect","category","index","array","Number","handleTabClick","value","currentCategory","scrollIntoView","tab","active","content","BunConstructorElement","thumbnail","isLocked","MainConstructorElement","_cartId","draggingMainIngredients","burgerConstructor","collect","monitor","isDragging","end","didDrop","drag","useDrop","accept","hover","ingred","hoverIndex","hoverBoundingRect","hoverBottomBound","hoverTopBound","clientOffset","getClientOffset","hoverClientY","y","initialIndex","targetIndex","drop","icon","handleClose","ModalLoader","BurgerConstructor","mainIngredients","store","orderRequest","isOver","onDropBunHandler","onDropMainHandler","dropTarget","replaceBunAction","uniqid","targetList","constructor","constructor_active","constructor_epmty","ingr","Home","PasswordPlaceholderInput","placeholder","onChange","passwordRef","passwordIcon","setPasswordIcon","isValid","setIsValid","minLength","validity","valid","onIconClick","focus","errorText","CredentialsForm","inputs","buttonText","navs","onSubmit","captionText","linkTo","linkText","nav","link","signIn","loginRequest","Login","login","email","setEmail","password","setPassword","formConfig","preventDefault","signUp","registerRequest","Register","register","setName","sendResetEmail","forgotPasswordRequest","ForgotPassword","forgotPassword","evt","resetPassword","resetPasswordRequest","ResetPassword","passwordResetAccess","setToken","EditUser","isFieldsEdit","setIsFieldsEdit","formValues","setFormValues","previousElementSibling","cancelEditingForm","handleEscPress","editedInputs","Object","keys","values","includes","disabled","controls","OrderCardIngredients","i","arr","isLast","MAX_INGREDIETNS_IN_CARD","style","zIndex","OrderCard","Orders","ordersData","Profile","onLogoutBtnClick","section","caption","reverse","Ingredients","OrdersStatus","filteredOrders","done","pending","numbers","column","orderNumber","total","totalToday","Feed","NotFound","goBack","code","OrderPage","App","ingredientsRequest","feedRequest","DndProvider","backend","HTML5Backend","initState","ingredientsFailed","getUserFailed","editUserFailed","logoutFailed","registerFailed","loginFailed","forgotPasswordFailed","resetPasswordFailed","wsRequest","wsFeedConnected","wsUserOrdersConnected","feedFailed","rootReducer","combineReducers","action","filter","newDrraggingMain","splice","forgotPasswordSuccess","feedError","userOrdersError","socketMiddleware","wsUrl","wsActions","isToken","socket","next","wsInit","wsStop","onOpen","onClose","onError","onMessage","WebSocket","close","onopen","onerror","onclose","onmessage","event","parse","Event","wsFeedActionNames","wsUserOrdersActionNames","enchancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,6B,oBCA1BD,EAAOC,QAAU,CAAC,MAAQ,8B,oBCA1BD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,YAAY,6C,oBCA9BD,EAAOC,QAAU,CAAC,KAAO,uB,yCCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,sBAAsB,KAAO,sBAAsB,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,kBAAkB,mC,mBCA3QD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,8BAA8B,KAAO,4BAA4B,YAAY,iCAAiC,iBAAiB,sCAAsC,MAAQ,+B,qGCelOC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mFCXDQ,EAAgB,wCAUhBC,EAAW,aAEXC,EAAY,gBACZC,EAAS,UAAMD,EAAN,SACTE,EAAY,UAAMF,EAAN,aACZG,EAAY,UAAMH,EAAN,YACZI,EAAmB,UAAMJ,EAAN,mBACnBK,EAAsB,UAAML,EAAN,uBACtBM,EAAU,UAAMN,EAAN,UACVO,EAAa,UAAMP,EAAN,aACbQ,EAAoB,UAAMR,EAAN,oBACpBS,EAAmB,UAAMT,EAAN,mBACnBU,EAAgB,UAAMV,EAAN,gBAChBW,EAAmB,UAAMX,EAAN,oBAMnBY,EAAgB,oVCE7B,SAASC,EAAcC,EAAvB,GAA8F,IAAxDC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAC5CC,EAAU,CACd,eAAgB,mBAChBC,cAAe,WAEbC,GAAkB,EAClBH,IACFC,EAAQC,cAAR,iBAAkCF,IAWpC,OAAOI,MAAMP,EAAD,aACVC,SACAC,KAAMM,KAAKC,UAAUP,GACrBE,WAXsC,CACtCM,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SAAU,SACVC,eAAgB,iBASfpC,MAAK,SAACqC,GAIL,OAHKA,EAAIC,KACPV,GAAkB,GAEbS,EAAIE,UAEZvC,MAAK,SAACqC,GACL,GAAIT,EACF,MAAM,IAAIY,MAAMH,EAAII,SAEtB,OAAOJ,KAgCN,SAASK,EAAoBC,GAClC,OAAOtB,EAAc,GAAD,OAAIf,GAAJ,ODzFW,eCyF8B,CAAEiB,OAAQ,OAAQC,KAAMmB,IC/CxEC,MA3Cf,WACE,MAAsCC,IAAQC,MAAtCC,EAAR,EAAQA,YAAaJ,EAArB,EAAqBA,aAOfK,EAAY,SAAC,GAEE,IADNC,EACK,EADlBF,YAA6CG,EAC3B,EADaP,aAEzBlB,EAAQwB,EAAiBE,MAAM,WAAW,GAGhD,OAFAN,IAAQO,IAAI,cAAe3B,EAAO,CAAE4B,QAAS,EAAI,GAAK,IACtDR,IAAQO,IAAI,eAAgBF,EAAmB,CAAEG,QAAS,IACnD5B,GAGH6B,EAAQ,uCAAG,4BAAAC,EAAA,0DACXR,EADW,yCAENA,GAFM,UAKVJ,EALU,yCAMN,MANM,uBASID,EAAoB,CAAEjB,MAAOkB,IATjC,YASTa,EATS,QAUNT,YAVM,yCAWNC,EAAU,CAAED,YAAaS,EAAKT,YAAaJ,aAAca,EAAKb,gBAXxD,gCAcR,MAdQ,4CAAH,qDAiBd,MAAO,CACLW,WACAG,eAjCqB,WACrBZ,IAAQa,OAAO,eACfb,IAAQa,OAAO,iBAgCfV,YACAD,cACAJ,iB,sBCvBWgB,EAlBwB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBACxDlB,EAAiBC,IAAjBD,aACR,OACE,cAAC,IAAD,2BACMkB,GADN,IAEEC,OACE,gBAAGC,EAAH,EAAGA,SAAH,OAAmBpB,EACdiB,EACA,cAAC,IAAD,CAAUI,GAAI,CAAEC,SAAUnD,EAAYoD,MAAO,CAAEC,KAAMJ,W,eCUnDK,EAlBgC,SAAC,GAA2B,IAAzBR,EAAwB,EAAxBA,SAAaC,EAAW,iBAChElB,EAAiBC,IAAjBD,aACR,OACE,cAAC,IAAD,2BACMkB,GADN,IAEEC,OACE,kBAAQnB,EAEH,cAAC,IAAD,CAAUqB,GAAIxD,IADdoD,O,wBCGES,EAPyB,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAUU,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAAnB,OACtC,eAAC,IAAD,CAASC,OAAK,EAACR,GAAIM,EAAMG,UAAS,UAAKC,IAAOC,OAAZ,wEAA0FC,gBAAiBF,IAAOG,YAApJ,UACGjB,EACD,sBAAMa,UAAU,OAAhB,SAAwBF,Q,iBCDfO,EAAc,kBAAMC,eACpBC,EAAc,kBAAMC,eACpBC,EAA+CC,ICgC7CC,EA5BG,WAChB,IAAQnB,EAAae,IAAbf,SAER,OACE,wBAAQQ,UAAS,UAAKC,IAAOW,OAAZ,cAAjB,SACE,sBAAKZ,UAAWC,IAAOY,UAAvB,UACE,8BACE,qBAAIb,UAAWC,IAAOa,KAAtB,UACE,oBAAId,UAAU,OAAd,SACE,cAAC,EAAD,CAAcH,KAAM9D,EAAW+D,KPKC,qEOLhC,SAAqE,cAAC,aAAD,CAAYiB,KAAMvB,IAAazD,EAAY,UAAY,kBAE9H,6BACE,cAAC,EAAD,CAAc8D,KAAM7D,EAAW8D,KPGJ,4EOH3B,SAAgE,cAAC,WAAD,CAAUiB,KAAMvB,IAAaxD,EAAY,UAAY,uBAI3H,qBAAKgE,UAAWC,IAAOe,KAAvB,SACE,cAAC,IAAD,CAAMzB,GAAIxD,EAAV,SACE,cAAC,OAAD,QAIJ,cAAC,EAAD,CAAc8D,KAAM3D,EAAc4D,KPNA,kFOMlC,SAAoE,cAAC,cAAD,CAAaiB,KAAMvB,IAAatD,EAAe,UAAY,sB,uCC7BxH+E,GAPA,kBACb,sBAAKjB,UAAWC,KAAOiB,OAAvB,UACE,wBACA,4BCIWC,GAN0B,SAAC,GAAD,IAAGhC,EAAH,EAAGA,SAAUiC,EAAb,EAAaA,UAAb,OACvC,sBAAMpB,UAAS,UAAKC,KAAOoB,KAAZ,YAAoBD,GAAanB,KAAOqB,YAAxC,cAAf,SACGF,EAAY,cAAC,GAAD,IAAajC,K,yCCGxBoC,GAAkC,SAAC,GAA+C,IAA7CpC,EAA4C,EAA5CA,SAAUqC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBAO9D,OACE,qBAAKzB,UAAWC,KAAOyB,QAASC,YAPP,SAACC,GACtBA,EAAEC,SAAWD,EAAEE,gBAAkBN,GAAaC,GAChDA,KAKF,SACGtC,KAKPoC,GAAaQ,aAAe,CAC1BP,WAAW,EACXC,iBAAkB,cAGLF,UCUAS,GA3BW,SAAC,GAA2C,IAAzC7C,EAAwC,EAAxCA,SAAU8C,EAA8B,EAA9BA,MAAOR,EAAuB,EAAvBA,iBAa5C,OAZAS,qBAAU,WACR,IAAMC,EAA4C,SAACP,GACnC,WAAVA,EAAEQ,KACJX,KAIJ,OADAY,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,MAEzC,IAEIK,IAASC,aACd,cAAC,GAAD,CAAchB,iBAAkBA,EAAhC,SACE,sBAAKzB,UAAS,UAAKC,KAAOyC,MAAZ,sBAAd,UACE,yBAAQ1C,UAAS,UAAKC,KAAOW,QAA7B,UACE,oBAAIZ,UAAS,UAAKC,KAAOgC,MAAZ,8BAAb,SAA6DA,IAC7D,cAAC,YAAD,CAAWlB,KAAK,UAAU4B,QAASlB,OAEpCtC,OAGLkD,SAASO,eAAe,kB,oBClCb,OAA0B,2CCmB1BC,GAdM,WAAO,IAAD,EACnBC,EAAsBrC,GAAY,SAAChB,GAAD,OAAWA,EAAMsD,OAAOD,uBAEhE,OACE,qCACE,mBAAG9C,UAAS,UAAKC,KAAO,YAAZ,0CAAZ,gBAA8E6C,QAA9E,IAA8EA,GAA9E,UAA8EA,EAAqBE,aAAnG,aAA8E,EAA4BC,SAC1G,mBAAGjD,UAAU,6BAAb,iIACA,qBAAKkD,IAAKC,GAAUC,IAAI,4MAAuCpD,UAAS,UAAKC,KAAOoD,MAAZ,kBACxE,mBAAGrD,UAAU,mCAAb,qJACA,mBAAGA,UAAU,wDAAb,gQ,oBCiCSsD,GAzCW,WACxB,IAAQC,EAAOC,cAAPD,GAKR,EAJmB9C,GAAY,SAAChB,GAAD,OAC7BA,EAAMgE,YAAYA,YAAYC,MAAK,gBAAGC,EAAH,EAAGA,IAAH,OAAaJ,IAAOI,SAUvC,GANhBC,EADF,EACEA,YACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,IACAC,EANF,EAMEA,cAGF,OACE,qCACE,qBAAKf,IAAKU,EAAaR,IAAKS,EAAM7D,UAAWC,KAAOoD,QACpD,oBAAIrD,UAAS,UAAKC,KAAOgC,MAAZ,yCAAb,SAAwE4B,IACxE,qBAAI7D,UAAS,UAAKC,KAAOiE,UAAZ,0DAAb,UACE,qBAAIlE,UAAWC,KAAOkE,UAAtB,UACE,sBAAMnE,UAAU,OAAhB,iFACA,sBAAMA,UAAU,gCAAhB,SAAiD8D,OAEnD,qBAAI9D,UAAWC,KAAOkE,UAAtB,UACE,sBAAMnE,UAAU,OAAhB,oDACA,sBAAMA,UAAU,gCAAhB,SAAiD+D,OAEnD,qBAAI/D,UAAWC,KAAOkE,UAAtB,UACE,sBAAMnE,UAAU,OAAhB,8CACA,sBAAMA,UAAU,gCAAhB,SAAiDgE,OAEnD,qBAAIhE,UAAWC,KAAOkE,UAAtB,UACE,sBAAMnE,UAAU,OAAhB,sEACA,sBAAMA,UAAU,gCAAhB,SAAiDiE,c,0CC9B5CG,GAP8B,SAAC,GAAD,IAAGpG,EAAH,EAAGA,QAASmB,EAAZ,EAAYA,SAAZ,OAC3C,qCACGA,EACD,oBAAIa,UAAS,UAAKC,KAAOgC,MAAZ,2CAAb,SAA0EjE,QCa/DqG,GAZI,WACjB,IAAMC,EAAoB7D,GAAY,SAAChB,GAAD,OAAWA,EAAMsD,OAAOuB,qBAE9D,OACE,cAAC,GAAD,CAAatG,QAASsG,EAAoBA,EAAkBtG,QhBcjC,kFgBd3B,SACE,qBAAKgC,UAAWC,KAAOsE,MAAvB,SACE,cAAC,YAAD,CAAWxD,KAAK,e,oBCZXyD,GAAiE,gCACjEC,GAAyE,mCACzEC,GAA2D,6BAC3DC,GAA2F,6CAC3FC,GAAmF,yCACnFC,GAA6E,sCAC7EC,GAAuD,2BACvDC,GAAyC,oBAGzCC,GAAqD,0BACrDC,GAAqD,0BACrDC,GAAmD,yBACnDC,GAA6C,sBAC7CC,GAA6C,sBAC7CC,GAAqD,0BAGrDC,GAAyD,4BACzDC,GAAyD,4BACzDC,GAAuD,2BACvDC,GAA6C,sBAC7CC,GAAuC,mBACvCC,GAAyC,oBACzCC,GAA2C,qBAC3CC,GAA6C,sBAG7CC,GAA+B,eAC/BC,GAAuB,WACvBC,GAA2B,aAC3BC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBACrCC,GAAyC,oBACzCC,GAAyC,oBACzCC,GAAuC,mBACvCC,GAAmC,iBACnCC,GAAmC,iBACnCC,GAAiC,gBAGjCC,GAAiC,gBACjCC,GAAiC,gBACjCC,GAA+B,eAG/BC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBAGrCC,GAAqD,0BACrDC,GAAqD,0BACrDC,GAAmD,yBAGnDC,GAAmD,yBACnDC,GAAmD,yBACnDC,GAAiD,wBAGjDC,GAAuD,2BACvDC,GAAqD,0BACrDC,GAA2D,6BAC3DC,GAAuD,2BACvDC,GAAyD,4BACzDC,GAAkC,mBAClCC,GAAqE,kCACrEC,GAAmE,iCACnEC,GAAyE,oCACzEC,GAAqE,kCACrEC,GAAuE,mCACvEC,GAAyC,mBACzCC,GAA+B,eAC/BC,GAA+B,eAC/BC,GAA6B,cCG7BC,GAAuB,SAAC9D,GAAD,MAA0C,CAC5ExD,KAAM2E,GACN4C,QAAS/D,IAOEgE,GAAyB,SACpCC,GADoC,MAEP,CAC7BzH,KAAM6E,GACN0C,QAASE,IAOEC,GAA4B,SAAChF,GAAD,OAAwC,SAC/EiF,GAEAA,EA1CkE,CAClE3H,KAAMuE,MA2CNzG,EADqBV,IAAbU,YAELtD,MAAK,SAACyB,GACL,GAAIA,EACF,OjBnCD,SAA0B2L,EAA+B3L,GAC9D,OAAOJ,EAAc,GAAD,OAAIf,GAAJ,ODxEI,WCwE8B,CAAEiB,OAAQ,OAAQC,KAAM4L,EAAe3L,UiBkChF4L,CAAiB,CAAEnF,eAAezG,GAE3C,MAAM,IAAIe,MAAMpB,MAEjBpB,MAAK,SAACqC,GACL8K,EA9C+B,CACnC3H,KAAMwE,GACN+C,QA4C0C1K,OAEvCiL,OAAM,SAACC,GACNJ,EA5C0E,CAC9E3H,KAAMyE,KA4CFkD,EAASL,GAAqBS,S,SCjHvBC,GAAa,SAACC,GACzB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAU,IAAID,KAAKF,GAAYI,UAC/BC,GAAQ,IAAIH,MAAOE,UACnBE,EAAUH,IAAYE,EACxB,6CAAYF,IAAYE,EAAQ,EAC9B,iCAAUF,GAAWE,EAAQ,EAAnB,UACLA,EAAQF,EADH,sDACyBF,EAAKM,eAAe,KAAM,CAAEC,MAAO,OAAQC,IAAK,YACnFC,EAAOT,EAAKM,eAAe,KAAM,CAAEI,KAAM,UAAWC,OAAQ,YAC5DC,GAAcZ,EAAKa,oBAAsB,GAC/C,MAAM,GAAN,OAAUR,EAAV,aAAsBI,EAAtB,iBAAmCG,EAAa,EAAb,WAAqBA,GAAeA,IAG5DE,GAAc,SAACC,EAAkBvG,GAE5C,IAAMwG,EAAW,2BAAQD,GAAR,IAAcE,WAAY,IACrCC,EAA6C,GAkBnD,OAhBA,aAAIF,EAAYxG,aAAa2G,SAAQ,SAACC,GACpC,IAAMC,EAAqB7G,EAAYC,MAAK,qBAAGC,MAAkB0G,KAE7DC,IACFL,EAAYC,YAA0C,QAA5BI,EAAmBvJ,KACd,EAA3BuJ,EAAmBC,MAAYD,EAAmBC,MACtDJ,EAAmBK,KAAK,CACtB7G,IAAK0G,EACLE,MAAOD,EAAmBC,MAC1B1G,KAAMyG,EAAmBzG,KACzB4G,aAAcH,EAAmBG,aACjC1J,KAAMuJ,EAAmBvJ,WAKxB,2BACFkJ,GADL,IAEExG,YAAY,GAAD,OAAM0G,GACjBO,UAAW3B,GAAWkB,EAAYS,cC8FzBC,GAAoC,iBAA2C,CAC1F5J,KAAM6G,KAGKgD,GAAmC,iBAA0C,CACxF7J,KAAM8G,KAsCKgD,GAAoB,kBAAM,SAACnC,EAAUoC,GnBpEzClO,EAAc,GAAD,OAAIf,GAAJ,OD3GE,eC2G8B,CAAEiB,OAAQ,QmBsE3DvB,MAAK,SAACwD,GACL,IAZ4BgM,EAYpBtH,EAAgBqH,IAAhBrH,YACRiF,GAb4BqC,EAaD,2BACtBhM,GADqB,IAExBiM,OAAQjM,EAAKiM,OAAOC,KAAI,SAACjB,GAAD,OAAsBD,GAAYC,EAAMvG,EAAYA,kBAfF,CAChF1C,KAAMoH,GACNG,QAASyC,QAgBNlC,OAAM,SAACtE,GAAD,OAAWmE,EAASL,GAAqB9D,SC5ErC2G,GAtGU,WACvB,IAAQrL,EAASsL,cAATtL,KACA0D,EAAOC,cAAPD,GACFmF,EAAWrI,IACjB,EAAwBI,GAAY,SAAChB,GAAD,OAAWA,KAAvC2L,EAAR,EAAQA,GACA9M,EADR,EAAY+M,QACJ/M,YAEF0E,EAAQsI,mBACZ,WAC8B,IAAD,EAGU,EAHrC,OAAIzL,IAAS5D,EACX,UAAOmP,EAAGG,YAAV,aAAO,EAASP,OAAOtH,MAAK,SAAC8H,GAAD,OAAeA,EAAU7H,MAAQJ,KAE3D1D,IAASzD,EACX,UAAOgP,EAAGK,kBAAV,aAAO,EAAeT,OAAOtH,MAAK,SAACgI,GAAD,OAAeA,EAAU/H,MAAQJ,KAE9D,OAET,CAAC6H,EAAIvL,IAGPqC,qBAAU,WACR,GAAI5D,GAAeuB,IAASzD,EAK5B,OAJEsM,EAASiC,MAIJ,WACLjC,EAASkC,SAEV,CAACtM,IAEJ,IAAMqN,EAAsBL,mBAC1B,WACE,IAAKtI,EACH,MAAO,GAET,IAAMpF,EAAgD,GAkBtD,OAjBAoF,EAAMS,YAAY2G,SAAQ,SAACC,GACzB,GAAwB,QAApBA,EAAWtJ,OAAkBnD,EAAIgO,OAGrC,GAAwB,QAApBvB,EAAWtJ,KAAf,CAIA,IAAM8K,EAAuBjO,EAC1BkO,WAAU,SAACC,GAAD,OAAoBA,EAAcpI,MAAQ0G,EAAW1G,QAEpC,IAA1BkI,EAIJjO,EAAI4M,KAAJ,2BAAcH,GAAd,IAA0B2B,IAAK,KAH7BpO,EAAIiO,GAAsBG,KAAO,OAPjCpO,EAAI4M,KAAJ,2BAAcH,GAAd,IAA0B2B,IAAK,QAY5BpO,IAET,CAACoF,IAGH,IAAKA,EACH,OAAO,KAGT,IACE0H,EACE1H,EADF0H,UAAW7G,EACTb,EADSa,KAAMZ,EACfD,EADeC,OAAQgJ,EACvBjJ,EADuBiJ,OAAQ/B,EAC/BlH,EAD+BkH,WAGnC,OACE,sBAAKlK,UAAWC,KAAOY,UAAvB,UACE,mBAAGb,UAAS,UAAKC,KAAOgD,OAAZ,kCAAZ,oBAAqEA,KACrE,oBAAIjD,UAAU,wCAAd,SAAuD6D,IACvD,mBAAG7D,UAAS,UAAKC,KAAOgM,OAAZ,gCAAZ,SAA0E,SAAXA,EAAoB,mDAAa,2DAChG,mBAAGjM,UAAU,wCAAb,mDACA,oBAAIA,UAAS,UAAKC,KAAOiM,KAAZ,SAAb,SACGP,EAAoBV,KAAI,gBACvBtH,EADuB,EACvBA,IAAK8G,EADkB,EAClBA,aAAoB0B,EADF,EACJtI,KAAgB0G,EADZ,EACYA,MAAOyB,EADnB,EACmBA,IADnB,OAGvB,qBAAchM,UAAWC,KAAOoK,WAAhC,UACE,qBAAKrK,UAAWC,KAAO,qBAAvB,SACE,qBACED,UAAWC,KAAO,oBAClBiD,IAAKuH,EACLrH,IAAK+I,MAGT,mBAAGnM,UAAS,UAAKC,KAAO,mBAAZ,qCAAZ,SACGkM,IAEH,sBAAMnM,UAAU,qCAAhB,mBAAyDgM,EAAzD,cAAkEzB,KAClE,cAAC,eAAD,CAAcxJ,KAAK,cAZZ4C,QAgBb,sBAAK3D,UAAS,UAAKC,KAAOmM,OAAZ,gBAAd,UACE,sBAAMpM,UAAU,kDAAhB,SAAmE0K,IACnE,sBAAM1K,UAAS,UAAKC,KAAO,eAAZ,uCAAf,SAAiFiK,IACjF,cAAC,eAAD,CAAcnJ,KAAK,mB,qBCtFZsL,GAZM,WACnB,IAAMC,EAAsB7L,GAAY,SAAChB,GAAD,OAAWA,EAAMsD,OAAOuJ,uBAEhE,OACE,cAAC,GAAD,CAAatO,QAASsO,EAAsBA,EAAoBtO,QtBejC,+IsBf/B,SACE,qBAAKgC,UAAWC,KAAOsM,QAAvB,SACE,cAAC,gBAAD,CAAexL,KAAK,iBCgEbyL,GA/DA,WACb,IAAMC,EAAUC,cACVhE,EAAWrI,IACXf,EAAWiB,IACXoM,EAAarN,EAASG,MAAQH,EAASG,MAAMkN,WAAa,KAChE,EAEIlM,GAAY,SAAChB,GAAD,OAAWA,EAAMsD,UAD/B6J,EADF,EACEA,mBAAoBC,EADtB,EACsBA,iBAAkBC,EADxC,EACwCA,mBAGlCC,EAAwBC,uBAC5B,WACEP,EAAQQ,QAAR,2BAAqBN,GAArB,IAAiClN,MAAO,UAE1C,CAACgN,EAASE,IAGNlL,EAAmBuL,uBACvB,WACEtE,EL4CkE,CACtE3H,KAAM0E,KK5CFiD,ELoD8D,CAClE3H,KAAM4E,KKpDF+C,EL8DkE,CACtE3H,KAAM8E,OK7DJ,IAGIqH,EAAc5B,mBAClB,kBAAMsB,GAAsBC,GAAoBC,IAChD,CAACF,EAAoBC,EAAkBC,IAGzC,OAAIH,EAEA,qCACE,cAAC,IAAD,CAAO9M,KAAMnD,EAAb,SACE,cAAC,GAAD,CAAOuF,MAAM,0GAAqBR,iBAAkBsL,EAApD,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAOlN,KAAM5D,EAAc8D,OAAK,EAAhC,SACE,cAAC,GAAD,CAAO0B,iBAAkBsL,EAAzB,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAOlN,KAAMzD,EAAwB2D,OAAK,EAA1C,SACE,cAAC,GAAD,CAAO0B,iBAAkBsL,EAAzB,SACE,cAAC,GAAD,WAOHG,EAEH,eAAC,GAAD,CAAOzL,iBAAkBA,EAAzB,UACGmL,GAAsB,cAAC,GAAD,IACtBC,GAAoB,cAAC,GAAD,IACpBC,GAAsB,cAAC,GAAD,OAGzB,MCXOK,GAA2B,SAAC9C,GAAD,MAA2D,CACjGtJ,KAAMoE,GACNmD,QAAS+B,IAGE+C,GAA2B,SAAC/C,GAAD,MAA2D,CACjGtJ,KAAMqE,GACNkD,QAAS+B,IAOEgD,GAA2B,kBAAM,SAAC3E,GAC7CA,EA9BgE,CAChE3H,KAAMiE,KvBqBCpI,EAAc,GAAD,OAAIf,GAAJ,ODrES,gBCqE8B,CAAEiB,OAAQ,QuBUlEvB,MAAK,SAACqC,GA5BgC,IACzC6F,EA4BIiF,GA5BJjF,EA4ByC7F,EAAImB,KA3BX,CAClCgC,KAAMkE,GACNqD,QAAS7E,QA2BNoF,OAAM,SAACC,GACNJ,EAzBwE,CAC5E3H,KAAMmE,KAyBFwD,EAASL,GAAqBS,SCGvBwE,GAAoB,SAACtQ,GAAD,MAAwC,CACvE+D,KAAM+E,GACNwC,QAAStL,IAGEuQ,GAAgB,SAACC,GAAD,MAAkC,CAC7DzM,KAAMgF,GACNuC,QAASkF,IA6CEC,GAAoB,kBAAM,SAAC/E,GAGtC,OAFAA,EAvCkD,CAClD3H,KAAMkF,MAwCCpH,EADcV,IAAbU,YAELtD,MAAK,SAACyB,GACL,GAAIA,EAEF,OADA0L,EAAS4E,GAAkBtQ,IxB7C5B,SAAwBA,GAC7B,OAAOJ,EAAc,GAAD,OAAIf,GAAJ,OAAoBC,GAAY,CAAEgB,OAAQ,MAAOE,UwB6CxD0Q,CAAe1Q,GAExB,MAAM,IAAIe,MAAMpB,MAEjBpB,MAAK,YAAe,IAAZiS,EAAW,EAAXA,KAEP,OADA9E,EA9C8B,SAAC8E,GAAD,MAAyC,CAC3EzM,KAAMmF,GACNoC,QAASkF,GA4CIG,CAAqBH,IACvBA,KAER3E,OAAM,SAACC,GACNJ,EA7C0D,CAC9D3H,KAAMoF,KA6CFuC,EAASL,GAAqBS,SAIvB8E,GAAqB,SAACC,GAAD,OAAwB,SAACnF,GACzDA,EA/CoD,CACpD3H,KAAMqF,MAgDNvH,EADqBV,IAAbU,YAELtD,MAAK,SAACyB,GACL,GAAIA,EACF,OxB9DD,SAAyB6Q,EAAoB7Q,GAClD,OAAOJ,EAAc,GAAD,OAAIf,GAAJ,OAAoBC,GAAY,CAAEgB,OAAQ,QAASC,KAAM8Q,EAAM7Q,UwB6DtE8Q,CAAgBD,EAAM7Q,GAE/B,MAAM,IAAIe,MAAMpB,MAEjBpB,MAAK,YAAe,IAAZiS,EAAW,EAAXA,KACP9E,EArD+B,SAAC8E,GAAD,MAA0C,CAC7EzM,KAAMsF,GACNiC,QAASkF,GAmDIO,CAAsBP,OAEhC3E,OAAM,SAACC,GACNJ,EAnD4D,CAChE3H,KAAMuF,KAmDFoC,EAASL,GAAqBS,SAIvBkF,GAAoB,SAACC,GAAD,OAAmB,SAACvF,GACnDA,EArDgD,CAChD3H,KAAMwF,KAqDN,MAAyCpI,IAAjCD,EAAR,EAAQA,aAAcc,EAAtB,EAAsBA,gBxBzFjB,SAAuBd,GAC5B,OAAOtB,EAAc,GAAD,OAAIf,GAAJ,ODtFI,gBCsF8B,CAAEiB,OAAQ,OAAQC,KAAMmB,KwByF9EgQ,CAAc,CAAElR,MAAOkB,IACpB3C,MAAK,WACJyD,IACA0J,EAxFkD,CACtD3H,KAAMiF,KAwFF0C,EAvD0D,CAC9D3H,KAAMyF,KAuDFyH,OAEDpF,OAAM,SAACC,GACNJ,EAvDwD,CAC5D3H,KAAM0F,KAuDFiC,EAASL,GAAqBS,S,0DCzJrBqF,GA9B+B,SAAC,GAAc,IAAZnE,EAAW,EAAXA,KACzC1K,EAAWiB,IACjB,EAAoB6N,aAAQ,CAC1BrN,KAAM,cACNsN,KAAMrE,IAFCsE,EAAT,qBAKA,OACE,oBAAIC,IAAKD,EAAT,SACE,eAAC,IAAD,CAAMtO,UAAWC,KAAO+J,KAAMzK,GAAI,CAAEC,SAAS,GAAD,OAAK/C,EAAL,YAAyBuN,EAAKrG,KAAOlE,MAAO,CAAEkN,WAAYrN,EAAUiE,GAAIyG,EAAKrG,MAAzH,UACE,qBAAKT,IAAK8G,EAAK3G,MAAOD,IAAK4G,EAAKnG,KAAM7D,UAAWC,KAAOoD,QACxD,oBAAGrD,UAAS,UAAKC,KAAOsK,MAAZ,4CAAZ,UACE,sBAAMvK,UAAU,OAAhB,SAAwBgK,EAAKO,QAC7B,cAAC,eAAD,CAAcxJ,KAAK,eAErB,mBAAGf,UAAS,UAAKC,KAAO4D,KAAZ,gCAAZ,SAA6DmG,EAAKnG,OAEhEmG,EAAKgC,IAED,qBAAKhM,UAAU,uCAAf,SACE,cAAC,UAAD,CAASwO,MAAOxE,EAAKgC,IAAKyC,KAAK,cAGjC,W,oBCPCC,GAfaC,sBAC1B,WAAmBJ,GAAnB,IAAGK,EAAH,EAAGA,MAAO3M,EAAV,EAAUA,MAAV,OACE,sBAAKjC,UAAWC,KAAOY,UAAvB,UACE,oBAAIb,UAAU,6BAA6BuO,IAAKA,EAAhD,SAAsDtM,IAEpD2M,GACE,oBAAI5O,UAAS,UAAKC,KAAOiM,KAAZ,yBAAb,SACG0C,EAAM3D,KAAI,SAACjB,GAAD,OAAU,cAAC,GAAD,CAA2BA,KAAMA,GAAhBA,EAAKrG,gBC0FxCkL,GAlGW,WACxB,IAAQpL,EAAgBhD,GAAY,SAAChB,GAAD,OAAWA,EAAMgE,eAA7CA,YAcR,MAA6B6H,mBAC3B,kBAbF,SAA2BvM,GACzB,IAAMnB,EAAyC,GAQ/C,OAPAmB,EAAKqL,SAAQ,SAACiE,GACRzQ,EAAIyQ,EAAKtN,MACXnD,EAAIyQ,EAAKtN,MAAMyJ,KAAK6D,GAEpBzQ,EAAIyQ,EAAKtN,MAAQ,CAACsN,MAGfzQ,EAIDkR,CAAkBrL,KACxB,CAACA,IAFKsL,EAAR,EAAQA,IAAKC,EAAb,EAAaA,MAAO3N,EAApB,EAAoBA,KAIpB,EAA8B4N,mBAAS,OAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAASC,iBAAuB,MAChCC,EAAWD,iBAAuB,MAClCE,EAAUF,iBAAuB,MACjCG,EAAaH,iBAAuB,MAEpCI,EAAe,WACnBC,OAAOC,uBAAsB,WAAO,IAAD,MAgB3BC,EAfgB,CACpB,CACE7O,KAAM,MACN8O,IAAG,UAAET,EAAOF,eAAT,aAAE,EAAgBY,wBAAwBD,KAE/C,CACE9O,KAAM,QACN8O,IAAG,UAAEP,EAASJ,eAAX,aAAE,EAAkBY,wBAAwBD,KAEjD,CACE9O,KAAM,OACN8O,IAAG,UAAEN,EAAQL,eAAV,aAAE,EAAiBY,wBAAwBD,MAIZnM,MAAK,SAACqM,EAAUC,EAAOC,GAAlB,OACzCC,OAAOH,EAASF,MAAQ,GAAKG,IAAUC,EAAMrE,OAAS,KAEpDgE,GAAiBT,EAAWS,EAAgB7O,UAIpDmB,qBAAU,WAAO,IAAD,EAEd,OADA,UAAAsN,EAAWN,eAAX,SAAoB5M,iBAAiB,SAAUmN,GACxC,kCAAMD,EAAWN,eAAjB,aAAM,EAAoB3M,oBAAoB,SAAUkN,MAC9D,IAEH,IAAMU,EAAiB,SAACC,GACtB,IAAIC,EAAkB,KAEtB,OADAlB,EAAWiB,GACHA,GACN,IAAK,MACHC,EAAkBjB,EAAOF,QACzB,MACF,IAAK,QACHmB,EAAkBf,EAASJ,QAC3B,MACF,IAAK,OACHmB,EAAkBd,EAAQL,QAC1B,MACF,QACEmB,EAAkB,KAGtB,OAAOA,GAAmBA,EAAgBC,kBAG5C,OACE,0BAAStQ,UAAS,UAAKC,KAAOY,UAAZ,UAAlB,UACE,oBAAIb,UAAU,4BAAd,mGACA,sBAAKA,UAAS,UAAKC,KAAOsQ,IAAZ,eAAd,UACE,cAAC,MAAD,CAAKH,MAAM,MAAMI,OAAoB,QAAZtB,EAAmBvM,QAASwN,EAArD,4CAGA,cAAC,MAAD,CAAKC,MAAM,QAAQI,OAAoB,UAAZtB,EAAqBvM,QAASwN,EAAzD,4CAGA,cAAC,MAAD,CAAKC,MAAM,OAAOI,OAAoB,SAAZtB,EAAoBvM,QAASwN,EAAvD,2DAIF,sBAAKnQ,UAAWC,KAAOwQ,QAASlC,IAAKiB,EAArC,UACE,cAAC,GAAD,CAAqBvN,MAAM,iCAAQ2M,MAAOG,GAAO,GAAIR,IAAKa,IAC1D,cAAC,GAAD,CAAqBnN,MAAM,iCAAQ2M,MAAOI,GAAS,GAAIT,IAAKe,IAC5D,cAAC,GAAD,CAAqBrN,MAAM,6CAAU2M,MAAOvN,GAAQ,GAAIkN,IAAKgB,W,+BC9F/DmB,GAAoD,SAAC,GAAD,IACxD1Q,EADwD,EACxDA,UACAe,EAFwD,EAExDA,KACAjB,EAHwD,EAGxDA,KACAyK,EAJwD,EAIxDA,MACAoG,EALwD,EAKxDA,UALwD,OAOxD,oBAAI3Q,UAAS,UAAKA,EAAL,YAAkBC,KAAO,cAAtC,SACE,cAAC,qBAAD,CACEc,KAAMA,EACN6P,UAAQ,EACR9Q,KAAMA,GAAiB,QAATiB,EAAiB,8BAAY,yBAC3CwJ,MAAOA,EACPoG,UAAWA,OAKjBD,GAAsB3O,aAAe,CACnC/B,UAAW,MAGE0Q,U,yCCkEAG,GA3E6C,SAAC,GAEtD,IADL/Q,EACI,EADJA,KAAMyK,EACF,EADEA,MAAOoG,EACT,EADSA,UAAWG,EACpB,EADoBA,QAASnN,EAC7B,EAD6BA,IAEzBoN,EAA4BtQ,GAAY,SAAChB,GAAD,OAAWA,EAAMuR,qBAAzDD,wBACFxC,EAAMc,iBAAsB,MAC5B3G,EAAWrI,IAEjB,EAA+B+N,aAAQ,CACrCrN,KAAM,cACNsN,KAAM,WAEJ,OADA3F,ECwDwC,CAC5C3H,KAAM6D,KDxDK,CAAEkM,YAEXG,QAAS,SAACC,GAAD,MAAc,CAAEC,WAAYD,EAAQC,eAC7CC,IAPqC,SAOjC/C,EAAM6C,GACQA,EAAQG,WAEtB3I,EC4C0C,CAChD3H,KAAM4D,KD3CF+D,EC0D4E,CAChF3H,KAAM+D,QDvEN,oBAASqM,EAAT,KAASA,WAAcG,EAAvB,KAgBA,EAAiBC,aAAQ,CACvBC,OAAQ,cACRC,MAFuB,SAEjBpD,EAA2B6C,GAC/B,GAAK3C,EAAIW,SAIL4B,IAAYzC,EAAKyC,QAArB,CAIA,IAAMd,EAAQe,EAAwBjF,WAAU,SAAC4F,GAAD,OAAYA,EAAOZ,UAAYzC,EAAKyC,WAC9Ea,EAAaZ,EAAwBjF,WAAU,SAAC4F,GAAD,OAAYA,EAAOZ,UAAYA,KAE9Ec,EAAoBrD,EAAIW,QAAQY,wBAChC+B,EAAwE,IAApDD,EAAkBxF,OAASwF,EAAkB/B,KACjEiC,EAAqE,IAApDF,EAAkBxF,OAASwF,EAAkB/B,KAC9DkC,EAAeb,EAAQc,kBACvBC,EAAeF,EAAeA,EAAaG,EAAIN,EAAkB/B,IAAM,GAG1EG,EAAQ2B,GAAcM,GAAgBJ,GACnC7B,EAAQ2B,GAAcM,GAAgBH,IAE1CpJ,ECyBsC,CAC5C3H,KAAM8D,GACNyD,QD3BqD,CAC7C6J,aAAcnC,EACdoC,YAAaT,SAYrB,OAFAL,GAAKe,EApCL,sBAoCU9D,IAGR,qBAAIvO,UAAS,UAAKC,KAAO,aAAZ,YAA4BkR,GAAclR,KAAO,sBAAjD,SAA+EsO,IAAKA,EAAjG,UACE,sBAAMvO,UAAS,UAAKC,KAAOqS,KAAZ,SAAf,SAAwC,cAAC,WAAD,CAAUvR,KAAK,cACvD,cAAC,qBAAD,CACE6P,UAAU,EACV9Q,KAAMA,EACNyK,MAAOA,EACPoG,UAAWA,EACX4B,YAdsB,WAC1B7J,ECN2B,CAC7B3H,KAAM0D,GACN6D,QDIkC,CAAEwI,UAASvG,WAC3C7B,EAAS0E,GAAyB,CAAEzJ,gB,oBEjEzB6O,GAPK,kBAAMhQ,IAASC,aACjC,cAAC,GAAD,CAAcjB,WAAS,EAAvB,SACE,cAAC,GAAD,MAEFa,SAASO,eAAe,kBC8IX6P,GA/HW,WACxB,IAAQvU,EAAiBC,IAAjBD,aACFuO,EAAUC,cAChB,EAEIjM,GAAY,SAAChB,GAAD,OAAWA,EAAMuR,qBAD/B0B,EADF,EACEA,gBAAiB3B,EADnB,EACmBA,wBAAyBhC,EAD5C,EAC4CA,IAAK7E,EADjD,EACiDA,WAEjD,EAA8CzJ,GAAY,SAACkS,GAAD,OAAWA,EAAM5P,UAAnE6P,EAAR,EAAQA,aAAc9P,EAAtB,EAAsBA,oBAChB4F,EAAWrI,IACjB,EAAiCkR,aAAQ,CACvCC,OAAQ,cACRP,QAAS,SAACC,GAAD,MAAc,CACrB2B,OAAQ3B,EAAQ2B,WAElBR,KALuC,SAKlCrI,GACe,QAAdA,EAAKjJ,KACP+R,EAAiB9I,GAEjB+I,EAAkB/I,MATxB,oBAAS6I,EAAT,KAASA,OAAUG,EAAnB,KAcMF,EAAmB,SAACzE,GACxB,OAAIU,GAAOV,EAAK1K,MAAQoL,EAAIpL,IACnB,MAELoL,GACFrG,EAAS0E,GAAyB2B,IAEpCrG,EFsB4B,SAACqG,GAAD,MAA0C,CACxEhO,KAAM2D,GACN4D,QAASyG,GExBEkE,CAAiB5E,IAC1B3F,EAASyE,GAAyB,CAAExJ,IAAK0K,EAAK1K,OACvC0K,IAGH0E,EAAoB,SAAC1E,GACzB,OAAKU,GAILrG,EAASyE,GAAyB,CAAExJ,IAAK0K,EAAK1K,OAC9C+E,GFFF2B,EEE+BgE,EFDL,CAC1BtN,KAAMyD,GACN8D,QAAQ,2BAAM+B,GAAP,IAAmByG,QAASoC,YEA1B7E,IALL3F,EAASL,GAAqB,IAAItK,MjChCJ,obiCiCvB,MFAsB,IACjCsM,GEMAnI,qBAAU,WACHY,IAGL4F,EF6BkE,CACpE3H,KAAMgE,KE7BJ2D,ETA0E,CAC5E3H,KAAMsE,QSAH,CAACvC,IAEJ,IAOMqQ,EAAapC,EAAwBnF,OAASmF,EAA0B2B,EAE9E,OACE,yBACE1S,UAAS,UACJC,KAAOmT,YADH,qBAELP,GAAU5S,KAAOoT,mBAFZ,sBAGJtE,GAAO9O,KAAOqT,kBAHV,yCAMT/E,IAAKyE,EAPP,SAUIjE,EAEI,qCACE,qBAAI/O,UAAS,UAAKC,KAAO,eAAzB,UACE,cAAC,GAAD,CACED,UAAU,OACVe,KAAK,MACLjB,KAAMiP,EAAIlL,KACV0G,MAAOwE,EAAIxE,MACXoG,UAAW5B,EAAItE,eAGfiI,EAAgB9G,OACd,oBAAI5L,UAAS,UAAKC,KAAO,cAAZ,YAA6BA,KAAO,mBAApC,SAAb,SACGkT,EAAWlI,KAAI,SAACjB,GAAD,OACd,cAAC,GAAD,CAEErG,IAAKqG,EAAKrG,IACVmN,QAAS9G,EAAK8G,QACdhR,KAAMkK,EAAKnG,KACX0G,MAAOP,EAAKO,MACZoG,UAAW3G,EAAKS,cALXT,EAAK8G,cASd,KAEN,cAAC,GAAD,CACE9Q,UAAU,OACVe,KAAK,SACLjB,KAAMiP,EAAIlL,KACV0G,MAAOwE,EAAIxE,MACXoG,UAAW5B,EAAItE,kBAGnB,sBAAKzK,UAAS,UAAKC,KAAO,kBAAZ,eAAd,UACE,oBAAGD,UAAS,UAAKC,KAAOsK,MAAZ,uCAAZ,UACE,sBAAMvK,UAAU,OAAhB,SAAwBkK,IACxB,cAAC,eAAD,CAAcnJ,KAAK,eAErB,cAAC,SAAD,CAAQA,KAAK,UAAU0N,KAAK,QAAQ9L,QA5D5B,WACpB,OAAIzE,GAAgB6Q,EACXrG,EAASD,GAAgB,CAACsG,GAAD,oBAAS2D,IAAiBzH,KAAI,SAACsI,GAAD,OAAUA,EAAK5P,SAExE8I,EAAQjC,KAAKnO,IAwDR,SACGuW,EjCrG4B,4DADR,uFiCyGxBA,GAAgB,cAAC,GAAD,OAInB,mBAAG5S,UAAS,UAAKC,KAAO,mBAAZ,+BAAZ,SjC9G4B,ySkCvBzBuT,GAPF,kBACX,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,oBCyCWC,GA1C8B,SAAC,GAEvC,IADL1S,EACI,EADJA,KAAM2S,EACF,EADEA,YAAatD,EACf,EADeA,MAAOvM,EACtB,EADsBA,KAAM4K,EAC5B,EAD4BA,KAAMkF,EAClC,EADkCA,SAEhCC,EAAcvE,iBAAyB,MAC7C,EAAwCJ,mBAAiB,YAAzD,oBAAO4E,EAAP,KAAqBC,EAArB,KACA,EAA8B7E,oBAAS,GAAvC,oBAAO8E,EAAP,KAAgBC,EAAhB,KAiBA,OAfA9R,qBAAU,WACJ0R,GAAeA,EAAY1E,UAC7B0E,EAAY1E,QAAQ+E,UAAY,KAEjC,CAACL,IAYF,cAAC,QAAD,CACE7S,KAAMA,EACN2S,YAAaA,EACbtD,MAAOA,EACPvM,KAAMA,EACNU,OAAQwP,EACRzB,KAAMuB,EACNpF,KAAMA,EACNkF,SAAU,SAAC/R,GACT+R,EAAS/R,GACToS,EAAWpS,EAAEE,cAAcoS,SAASC,QAEtCC,YAAa,kBApBfN,EAD8B,aAAjBD,EAA8B,WAAa,iBAEpDD,GAAeA,EAAY1E,UAC7B0E,EAAY1E,QAAQnO,KAAwB,aAAjB8S,EAA8B,OAAS,WAClED,EAAY1E,QAAQmF,WAkBpB9F,IAAKqF,EACLU,UAAU,mHCWDC,GA9C+B,SAAC,GAAD,IAC5CtS,EAD4C,EAC5CA,MAAOuS,EADqC,EACrCA,OAAQC,EAD6B,EAC7BA,WAAYC,EADiB,EACjBA,KAAMC,EADW,EACXA,SAAUvT,EADC,EACDA,UADC,OAG5C,0BAASpB,UAAWC,KAAOY,UAA3B,UACE,oBAAIb,UAAS,UAAKC,KAAOgC,MAAZ,+BAAb,SAA8DA,IAC9D,uBAAMjC,UAAS,UAAKC,KAAO4N,KAAZ,eAA+B8G,SAAUA,EAAxD,UACGH,EAAOvJ,KAAI,gBACVlK,EADU,EACVA,KAAM2S,EADI,EACJA,YAAatD,EADT,EACSA,MAAOvM,EADhB,EACgBA,KAAMyO,EADtB,EACsBA,KAAM7D,EAD5B,EAC4BA,KAAMkF,EADlC,EACkCA,SAAUS,EAD5C,EAC4CA,YAAa7F,EADzD,EACyDA,IADzD,MAEI,aAAT1K,EAEH,cAAC,GAAD,CAEE9C,KAAMA,EACN2S,YAAaA,EACbtD,MAAOA,EACPvM,KAAMA,EACN4K,KAAMA,EACNkF,SAAUA,GANL9P,GAUP,cAAC,QAAD,CAEE9C,KAAMA,EACN2S,YAAaA,EACbtD,MAAOA,EACPvM,KAAMA,EACNyO,KAAMA,EACN7D,KAAMA,EACNkF,SAAUA,EACVS,YAAaA,EACb7F,IAAKA,GATA1K,MAYX,cAAC,SAAD,CAAQ9C,KAAK,UAAU0N,KAAK,SAA5B,SAAsCgG,OAEvCC,EAAKzJ,KAAI,gBAAG2J,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,SAAxB,OACR,oBAAkB9U,UAAS,UAAKC,KAAO8U,IAAZ,oDAA3B,UACE,+BAAOH,IACP,cAAC,IAAD,CAAM5U,UAAS,UAAKC,KAAO+U,KAAZ,SAAyBzV,GAAIsV,EAA5C,SAAqDC,MAF/CA,MAKT1T,GAAa,cAAC,GAAD,QCTL6T,GAAmB,SAACpH,EAAkBI,GAAnB,OAAqC,SAACvF,GACpEA,EAb8C,CAC9C3H,KAAM2F,KAaN,IAAQnI,EAAcJ,IAAdI,WpC8CH,SAAsBsP,GAC3B,OAAOjR,EAAc,GAAD,OAAIf,GAAJ,ODnFG,eCmF8B,CAAEiB,OAAQ,OAAQC,KAAM8Q,KoC9C7EqH,CAAarH,GACVtS,MAAK,SAACwD,GACL,IAAQyO,EAAoCzO,EAApCyO,KAAMlP,EAA8BS,EAA9BT,YAAaJ,EAAiBa,EAAjBb,aAC3BK,EAAU,CAAED,cAAaJ,iBACzBwK,EAAS6E,GAAcC,IACvB9E,EAAS4E,GAAkBhP,EAAYI,MAAM,WAAW,KACxDgK,EAjBwD,CAC5D3H,KAAM4F,KAiBFsH,OAEDpF,OAAM,SAACC,GACNJ,EAjBsD,CAC1D3H,KAAM6F,KAiBF8B,EAASL,GAAqBS,SCArBqM,GA/CD,WACZ,IAAMzM,EAAWrI,IACjB,EAAyBI,GAAY,SAAChB,GAAD,OAAWA,EAAM2V,SAA9CF,EAAR,EAAQA,aACFzI,EAAUC,cACRjN,EAAUc,IAAVd,MACR,EAA0BwP,mBAAS,IAAnC,oBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAgCrG,mBAAS,IAAzC,oBAAOsG,EAAP,KAAiBC,EAAjB,KAOA,IAAMC,EAA+B,CACnCxT,MAAO,2BACPuS,OAAQ,CACN,CACEzT,KAAM,QACN2S,YAAa,QACbtD,MAAOiF,EACPxR,KAAM,QACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B0T,EAAS1T,EAAEC,OAAOuO,SAExD,CACErP,KAAM,WACN2S,YAAa,uCACbtD,MAAOmF,EACP1R,KAAM,WACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B4T,EAAY5T,EAAEC,OAAOuO,UAG7DqE,WAAY,iCACZC,KAAM,CACJ,CAAEE,YAAa,+HAA4BC,OAAQvY,EAAewY,SAAU,gHAC5E,CAAEF,YAAa,6EAAkBC,OAAQtY,EAAsBuY,SAAU,kHAE3EH,SA9BF,SAAkB/S,GAChBA,EAAE8T,iBACFhN,EAASuM,GAAO,CAAEI,QAAOE,aAAY,kBAAM9I,EAAQQ,SAAa,OAALxN,QAAK,IAALA,OAAA,EAAAA,EAAOC,OAAQ3D,QA6B1EqF,UAAW8T,GAGb,OACE,cAAC,GAAD,eAAqBO,KCVZE,GAAmB,SAAC9H,EAAqBI,GAAtB,OAAwC,SAACvF,GACvEA,EAboD,CACpD3H,KAAM8F,KAaN,IAAQtI,EAAcJ,IAAdI,WtC0CH,SAAyBsP,GAC9B,OAAOjR,EAAc,GAAD,OAAIf,GAAJ,ODhFM,kBCgF8B,CAAEiB,OAAQ,OAAQC,KAAM8Q,KsC1ChF+H,CAAgB/H,GACbtS,MAAK,SAACwD,GACL,IAAQyO,EAAoCzO,EAApCyO,KAAMlP,EAA8BS,EAA9BT,YAAaJ,EAAiBa,EAAjBb,aAC3BK,EAAU,CAAED,cAAaJ,iBACzBwK,EAAS6E,GAAcC,IACvB9E,EAAS4E,GAAkBhP,EAAYI,MAAM,WAAW,KACxDgK,EAjB8D,CAClE3H,KAAM+F,KAiBFmH,OAEDpF,OAAM,SAACC,GACNJ,EAjB4D,CAChE3H,KAAMgG,KAiBF2B,EAASL,GAAqBS,SCQrB+M,GAvDE,WACf,IAAMnN,EAAWrI,IACjB,EAA4BI,GAAY,SAAChB,GAAD,OAAWA,EAAMqW,YAAjDF,EAAR,EAAQA,gBACFnJ,EAAUC,cACRjN,EAAUc,IAAVd,MACR,EAAwBwP,mBAAS,IAAjC,oBAAOpL,EAAP,KAAakS,EAAb,KACA,EAA0B9G,mBAAS,IAAnC,oBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAgCrG,mBAAS,IAAzC,oBAAOsG,EAAP,KAAiBC,EAAjB,KAOA,IAAMC,EAA+B,CACnCxT,MAAO,qEACPuS,OAAQ,CACN,CACEzT,KAAM,OACN2S,YAAa,qBACbtD,MAAOvM,EACPA,KAAM,OACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0BmU,EAAQnU,EAAEC,OAAOuO,SAEvD,CACErP,KAAM,QACN2S,YAAa,QACbtD,MAAOiF,EACPxR,KAAM,QACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B0T,EAAS1T,EAAEC,OAAOuO,SAExD,CACErP,KAAM,WACN2S,YAAa,uCACbtD,MAAOmF,EACP1R,KAAM,WACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B4T,EAAY5T,EAAEC,OAAOuO,UAG7DqE,WAAY,+GACZC,KAAM,CACJ,CAAEE,YAAa,uHAAyBC,OAAQxY,EAAYyY,SAAU,mCAExEH,SArCF,SAAkB/S,GAChBA,EAAE8T,iBACFhN,EAASiN,GAAO,CAAE9R,OAAMwR,QAAOE,aAAY,kBAAM9I,EAAQQ,SAAa,OAALxN,QAAK,IAALA,OAAA,EAAAA,EAAOC,OAAQ3D,QAoChFqF,UAAWwU,GAGb,OACE,cAAC,GAAD,eAAqBH,KCnBZO,GACX,SAACnI,EAA2BI,GAA5B,OAA8C,SAACvF,GAG7C,OAFAA,EAd8D,CAChE3H,KAAMiG,KxCgDD,SAA+B6G,GACpC,OAAOjR,EAAc,GAAD,OAAIf,GAAJ,OD1Ea,mBC0E8B,CAAEiB,OAAQ,OAAQC,KAAM8Q,IwClC9EoI,CAAsBpI,GAC1BtS,MAAK,SAACwD,GACL2J,EAdwE,CAC9E3H,KAAMkG,KAcAyB,EAASH,GAAuBxJ,IAChCX,IAAQO,IAAI,sBAAuB,OAAQ,CAAEC,QAAS,EAAI,GAAK,KAC/DqP,OAEDpF,OAAM,SAACC,GACNJ,EAhBsE,CAC5E3H,KAAMmG,KAgBAwB,EAASL,GAAqBS,SCNvBoN,GAvCQ,WACrB,IAAMxN,EAAWrI,IACT4V,EAA0BxV,GAAY,SAAChB,GAAD,OAAWA,EAAM0W,kBAAvDF,sBACFxJ,EAAUC,cAChB,EAA0BuC,mBAAS,IAAnC,oBAAOoG,EAAP,KAAcC,EAAd,KAUA,IAAMG,EAA+B,CACnCxT,MAAO,4HACPuS,OAAQ,CACN,CACEzT,KAAM,QACN2S,YAAa,oDACbtD,MAAOiF,EACPxR,KAAM,QACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B0T,EAAS1T,EAAEC,OAAOuO,UAG1DqE,WAAY,2EACZC,KAAM,CACJ,CAAEE,YAAa,+FAAqBC,OAAQxY,EAAYyY,SAAU,mCAEpEH,SAxBF,SAAkByB,GAChBA,EAAIV,iBACJhN,EAASsN,GACP,CAAEX,UACF,kBAAM5I,EAAQjC,KAAK,CAAEhL,SAAUhD,EAAqBiD,MAAO,CAAEC,KAAM+M,EAAQnN,iBAqB7E8B,UAAW6U,GAGb,OACE,cAAC,GAAD,eAAqBR,KCJZY,GACX,SAACxI,EAA0BI,GAA3B,OAA6C,SAACvF,GAC5CA,EAd4D,CAC9D3H,KAAMoG,K1CqDD,SAA8B0G,GACnC,OAAOjR,EAAc,GAAD,OAAIf,GAAJ,OD7EY,yBC6E8B,CAAEiB,OAAQ,OAAQC,KAAM8Q,I0CxCpFyI,CAAqBzI,GAClBtS,MAAK,SAACwD,GACL2J,EAbsE,CAC5E3H,KAAMqG,KAaAsB,EAASH,GAAuBxJ,IAChCkP,OAEDpF,OAAM,SAACC,GACNJ,EAdoE,CAC1E3H,KAAMsG,KAcAqB,EAASL,GAAqBS,SCMvByN,GAhDO,WAAO,IAAD,IACpB7N,EAAWrI,IACTiW,EAAyB7V,GAAY,SAAChB,GAAD,OAAWA,EAAM4W,iBAAtDC,qBACF7J,EAAUC,cAEV8J,GAAsB,UADXjW,IACoBd,aAAT,mBAAgBC,YAAhB,eAAsBF,YAAajD,EAE/D,EAA0B0S,mBAAS,IAAnC,oBAAOjS,EAAP,KAAcyZ,EAAd,KACA,EAAgCxH,mBAAS,IAAzC,oBAAOsG,EAAP,KAAiBC,EAAjB,KAOA,IAAMC,EAA+B,CACnCxT,MAAO,4HACPuS,OAAQ,CACN,CACEzT,KAAM,WACN2S,YAAa,iHACbtD,MAAOmF,EACP1R,KAAM,WACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B4T,EAAY5T,EAAEC,OAAOuO,SAE3D,CACErP,KAAM,OACN2S,YAAa,kHACbtD,MAAOpT,EACP6G,KAAM,QACN4K,KAAM,UACNkF,SAAU,SAAC/R,GAAD,OAA0B6U,EAAS7U,EAAEC,OAAOuO,UAG1DqE,WAAY,yDACZC,KAAM,CACJ,CAAEE,YAAa,+FAAqBC,OAAQxY,EAAYyY,SAAU,mCAEpEH,SA7BF,SAAkB/S,GAChBA,EAAE8T,iBACFhN,EAAS2N,GAAc,CAAErZ,QAAOuY,aAAY,kBAAM9I,EAAQQ,QAAQ5Q,QA4BlE+E,UAAWkV,GAGb,OAAOE,EACF,cAAC,GAAD,eAAqBf,IACrB,cAAC,IAAD,CAAUlW,GAAIhD,K,iDC6FNma,GAlIE,WACf,IAAMhO,EAAWrI,IACjB,EAAiDI,GAAY,SAAChB,GAAD,OAAWA,EAAM4L,WAAtEmC,EAAR,EAAQA,KAAMM,EAAd,EAAcA,gBAAiBI,EAA/B,EAA+BA,cAC/B,EAAwCe,mBAA6B,IAArE,oBAAO0H,EAAP,KAAqBC,EAArB,KACA,EAAoC3H,mBAA2B,CAC7DpL,KAAM,GACNwR,MAAO,GACPE,SAAU,WAHZ,oBAAOsB,EAAP,KAAmBC,EAAnB,KAMA5U,qBAAU,WACJsL,GACFsJ,EAAc,2BAAKD,GAAerJ,MAEnC,CAACA,IAEJ,IAAM4G,EAAcpH,uBAClB,SAACoJ,GACC,IACQvS,EADOuS,EAAItU,cAAciV,uBACzBlT,KACFuM,GAASuG,EAAa9S,GACxB2J,IACFsJ,EAAc,2BACTD,GADQ,mBAEVhT,EAAO2J,EAAK3J,MAEf+S,EAAgB,2BACXD,GADU,mBAEZ9S,EAAOuM,QAId,CAACuG,EAAcE,EAAYrJ,IAGvBwJ,EAAoBhK,uBACxB,WACE4J,EAAgB,IAChBE,EAAc,2BAAKD,GAAerJ,MAEpC,CAACqJ,EAAYrJ,IAGTyJ,EAAiBjK,uBACrB,SAACoJ,GAAD,MAAqB,WAAZA,EAAIhU,KAAoB4U,MACjC,CAACA,IAGGrD,EAAW3G,uBACf,SAACoJ,GACC,MAAwBA,EAAIvU,OAApBgC,EAAR,EAAQA,KAAMuM,EAAd,EAAcA,MACd0G,EAAc,2BACTD,GADQ,mBAEVhT,EAAOuM,OAGZ,CAACyG,IAGGlC,EAAW3H,uBACf,SAACoJ,GACCA,EAAIV,iBACJ,IAAMwB,EAA2C,GACjDC,OAAOC,KAAKT,GACTvM,SAAQ,SAAChI,GACJuU,EAAavU,KAAM8U,EAAa9U,GAAOyU,EAAWzU,OAE1DsG,EAASkF,GAASsJ,IAClBN,EAAgB,MAElB,CAACD,EAAcE,IAYjB,OATA3U,qBAAU,WAIR,OAHIiV,OAAOE,OAAOV,GAAcW,UAAS,IACvCjV,SAASC,iBAAiB,UAAW2U,GAEhC,WACL5U,SAASE,oBAAoB,UAAW0U,MAEzC,CAACN,EAAcM,IAGhB,qCACE,uBAAMjX,UAAWC,KAAO4N,KAAM8G,SAAUA,EAAxC,UACE,cAAC,QAAD,CACE5T,KAAK,OACL2S,YAAY,qBACZtD,MAAOyG,EAAWhT,KAClBA,KAAK,OACLyO,KAAOqE,EAAa9S,KAAoB,YAAb,WAC3B4K,KAAK,UACL2F,YAAa,SAACxS,GAAD,OAAOwS,EAAYxS,IAChC+R,SAAU,SAAC/R,GAAD,OAAO+R,EAAS/R,IAC1B2V,UAAWZ,EAAa9S,OAE1B,cAAC,QAAD,CACE9C,KAAK,OACL2S,YAAY,iCACZtD,MAAOyG,EAAWxB,MAClBxR,KAAK,QACLyO,KAAOqE,EAAatB,MAAqB,YAAb,WAC5B5G,KAAK,UACL2F,YAAa,SAACxS,GAAD,OAAOwS,EAAYxS,IAChC+R,SAAU,SAAC/R,GAAD,OAAO+R,EAAS/R,IAC1B2V,UAAWZ,EAAatB,QAE1B,cAAC,QAAD,CACEtU,KAAK,WACL2S,YAAY,uCACZtD,MAAOyG,EAAWtB,SAClB1R,KAAK,WACLyO,KAAOqE,EAAapB,SAAwB,YAAb,WAC/B9G,KAAK,UACL2F,YAAa,SAACxS,GAAD,OAAOwS,EAAYxS,IAChC+R,SAAU,SAAC/R,GAAD,OAAO+R,EAAS/R,IAC1B2V,UAAWZ,EAAapB,WAEzB4B,OAAOE,OAAOV,GAAcW,UAAS,GACpC,sBAAKtX,UAAWC,KAAOuX,SAAvB,UACE,cAAC,SAAD,CAAQzW,KAAK,UAAU0N,KAAK,SAA5B,oEACA,cAAC,SAAD,CAAQ1N,KAAK,YAAY0N,KAAK,SAAS9L,QAASqU,EAAhD,qDAEA,SAEJlJ,GAAmBI,IAAkB,cAAC,GAAD,Q,6DCvG9BuJ,GA3ByC,SAAC,GAA4B,IAA1BpN,EAAyB,EAAzBA,WAAYqN,EAAa,EAAbA,EAAGC,EAAU,EAAVA,IAClEC,EAAStM,mBACb,kBAAcuM,IAAPH,GAAyCC,EAAI/L,O9C2BjB,I8C1BnC,CAAC8L,EAAGC,IAGN,OACED,GAAK,EAAI,KACP,sBAAK1X,UAAWC,KAAOoK,WAAYyN,MAAO,CAAEC,OAAQF,EAA8BH,GAAlF,UACE,qBAAK1X,UAAS,UAAKC,KAAO,yBAAZ,YAAwC2X,EAAS3X,KAAO,8BAAgC,IAAtG,SACE,qBACED,UAAS,UAAKC,KAAO,oBAAZ,YAAmC2X,EAAS3X,KAAO,yBAA2B,IACvFiD,IAAKmH,EAAWI,aAChBrH,IAAKiH,EAAWxG,SAGnB+T,EAEG,sBAAM5X,UAAS,UAAKC,KAAO,eAAZ,gCAAf,oBACO0X,EAAI/L,O9CUgB,K8CP3B,SCUGoM,GA/BmB,SAAC,GAAc,IAAZhO,EAAW,EAAXA,KAC7B1K,EAAWiB,IAEjB,OACE,oBAAIP,UAAWC,KAAO+J,KAAtB,SACE,eAAC,IAAD,CAAMhK,UAAWC,KAAO+U,KAAMzV,GAAI,CAAEC,SAAS,GAAD,OAAKF,EAASE,SAAd,YAA0BwK,EAAKrG,KAAOlE,MAAO,CAAEkN,WAAYrN,IAAvG,UACE,sBAAKU,UAAWC,KAAO,eAAvB,UACE,sBAAMD,UAAU,gCAAhB,oBACOgK,EAAK/G,UAEZ,sBAAMjD,UAAU,kDAAhB,SACGgK,EAAKU,eAGV,oBAAI1K,UAAU,YAAd,SAA2BgK,EAAKnG,OAChC,sBAAK7D,UAAWC,KAAO,eAAvB,UACE,qBAAKD,UAAWC,KAAOwD,YAAvB,SACGuG,EAAKvG,YAAYwH,KAAI,SAACZ,EAAYqN,EAAGC,GAAhB,OACpB,cAAC,GAAD,CAAwDtN,WAAYA,EAAYqN,EAAGA,EAAGC,IAAKA,GAA3F,UAA8BtN,EAAW1G,KAAzC,OAAmD,EAAJ+T,SAGnD,sBAAK1X,UAAS,UAAKC,KAAOsK,MAAZ,kCAAd,UACE,sBAAMvK,UAAWC,KAAO,eAAxB,SAAyC+J,EAAKE,aAC9C,cAAC,eAAD,CAAcnJ,KAAK,wBChBhBkX,GARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OAC1B,oBAAIlY,UAAWC,KAAOiM,KAAtB,SACGgM,EAAWjN,KAAI,SAACjB,GAAD,OACd,cAAC,GAAD,CAA0BA,KAAMA,GAAhBA,EAAKrG,WC6EZwU,GA/EC,WACd,IAAM1L,EAAUC,cACVhE,EAAWrI,IACjB,EAAwBI,GAAY,SAAChB,GAAD,OAAWA,KAAvC2L,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,QACJI,EAAeL,EAAfK,WACAnN,EAAgB+M,EAAhB/M,YAEF8Z,EAAmBpL,uBACvB,SAACoJ,GACCA,EAAIV,iBACJhN,EAASsF,IAAQ,kBAAMvB,EAAQQ,QAAQ5Q,SAEzC,CAACoQ,IAYH,OATAvK,qBAAU,WAIR,OAHI5D,GACFoK,EAASiC,MAEJ,WACLjC,EAASkC,SAEV,IAGD,0BAAS5K,UAAWC,KAAOoY,QAA3B,UACE,sBAAKrY,UAAWC,KAAO8U,IAAvB,UACE,qBAAI/U,UAAWC,KAAOiM,KAAtB,UACE,6BACE,cAAC,IAAD,CACE3M,GAAIrD,EACJ6D,OAAK,EACLC,UAAS,UAAKC,KAAO+U,KAAZ,mDACT7U,gBAAiBF,KAAOG,YAJ1B,0DASF,6BACE,cAAC,IAAD,CACEb,GAAIpD,EACJ4D,OAAK,EACLC,UAAS,UAAKC,KAAO+U,KAAZ,mDACT7U,gBAAiBF,KAAOG,YAJ1B,qGAUF,6BACE,cAAC,IAAD,CACEb,GAAIlD,EACJ2D,UAAS,UAAKC,KAAO+U,KAAZ,mDACT7U,gBAAiBF,KAAOG,YACxBuC,QAASyV,EAJX,iDAUJ,mBAAGpY,UAAS,UAAKC,KAAOqY,QAAZ,0DAAZ,qUAKF,eAAC,IAAD,CAAOzY,KAAM3D,EAAc6D,OAAK,EAAhC,UACE,cAAC,GAAD,IACA,qBAAKC,UAAWC,KAAO,wBAEzB,cAAC,IAAD,CAAOJ,KAAM1D,EAAqB4D,OAAK,EAAvC,SACE,qBAAKC,UAAWC,KAAO+K,OAAvB,SACE,cAAC,GAAD,CAAQkN,WAAYzM,EAAa,aAAIA,EAAWT,QAAQuN,UAAY,SAGtE9M,EAA+B,KAAlB,cAAC,GAAD,QC7EN+M,GANK,kBAClB,yBAASxY,UAAU,QAAnB,SACE,cAAC,GAAD,O,oBCmEWyY,GApEM,WACnB,IAAQlN,EAAS9K,GAAY,SAAChB,GAAD,OAAWA,EAAM2L,MAAtCG,KAEFmN,EAAiBpN,mBACrB,WACE,IAAKC,EACH,MAAO,CAAEoN,KAAM,GAAIC,QAAS,IAG9B,IAAMD,EAAsB,GACtBC,EAAyB,GAQ/B,OAPArN,EAAKP,OAAOZ,SAAQ,SAACpH,GACE,SAAjBA,EAAMiJ,QAAqB0M,EAAK/M,OAAS,GAC3C+M,EAAKnO,KAAKxH,EAAMC,QACU,YAAjBD,EAAMiJ,QAAwB2M,EAAQhN,OAAS,IACxDgN,EAAQpO,KAAKxH,EAAMC,WAGhB,CAAE0V,OAAMC,aAEjB,CAACrN,IAGH,OACE,qCACE,sBAAKvL,UAAWC,KAAO4Y,QAAvB,UACE,sBAAK7Y,UAAS,UAAKC,KAAO6Y,OAAZ,SAAd,UACE,mBAAG9Y,UAAU,kCAAb,mDACA,oBAAIA,UAAS,UAAKC,KAAOiM,KAAZ,YAAoBjM,KAAO,cAAxC,SACGyY,EAAeC,KAAK1N,KAAI,SAAC8N,GAAD,OACvB,oBAEE/Y,UAAS,8BACLC,KAAO,aADF,+BAELA,KAAO,kBAFF,qDAFX,SAOG8Y,GANIA,WAWb,sBAAK/Y,UAAWC,KAAO6Y,OAAvB,UACE,mBAAG9Y,UAAU,kCAAb,0DACA,oBAAIA,UAAWC,KAAOiM,KAAtB,SACGwM,EAAeE,QAAQ3N,KAAI,SAAC8N,GAAD,OAC1B,oBAEE/Y,UAAS,UAAKC,KAAO,aAAZ,kCAFX,SAIG8Y,GAHIA,cASf,sBAAK/Y,UAAU,QAAf,UACE,mBAAGA,UAAU,6BAAb,oIACA,mBAAGA,UAAS,UAAKC,KAAO+Y,MAAZ,gCAAZ,SAA8DzN,EAAOA,EAAKyN,MAAQ,OAEpF,sBAAKhZ,UAAU,QAAf,UACE,mBAAGA,UAAU,6BAAb,6HACA,mBAAGA,UAAS,UAAKC,KAAO+Y,MAAZ,gCAAZ,SAA8DzN,EAAOA,EAAK0N,WAAa,W,oBC3BhFC,GA/BF,WACX,IAAMxQ,EAAWrI,IACjB,EAAwBI,GAAY,SAAChB,GAAD,OAAWA,KAAvC2L,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,QACJE,EAASH,EAATG,KACAjN,EAAgB+M,EAAhB/M,YAWR,OATA4D,qBAAU,WAIR,OAHI5D,GACFoK,EhCyF0E,CAC9E3H,KAAMuG,KgCxFG,WACLoB,EhC0FwE,CAC5E3H,KAAMwG,QgCzFH,CAACjJ,IAGF,0BAAS0B,UAAS,UAAKC,KAAOY,UAAZ,UAAlB,UACE,oBAAIb,UAAS,UAAKC,KAAOgC,MAAZ,mCAAb,uFACA,sBAAKjC,UAAWC,KAAOwQ,QAAvB,UACE,qBAAKzQ,UAAS,UAAKC,KAAO,eAAZ,UAAd,SACE,cAAC,GAAD,CAAQiY,WAAY3M,EAAOA,EAAKP,OAAS,OAE3C,qBAAKhL,UAAWC,KAAO,iBAAvB,SACE,cAAC,GAAD,SAGFsL,EAAyB,KAAlB,cAAC,GAAD,Q,oBCfA4N,GAdE,WACf,IAAQC,EAAW1M,cAAX0M,OAER,OACE,0BAASpZ,UAAWC,KAAOY,UAA3B,UACE,mBAAGb,UAAS,UAAKC,KAAOoZ,KAAZ,gCAAZ,iBACA,mBAAGrZ,UAAU,uCAAb,4bAGA,cAAC,SAAD,CAAQe,KAAK,YAAY0N,KAAK,QAAQ9L,QAAS,kBAAMyW,KAArD,gDCLSE,GANG,kBAChB,yBAAStZ,UAAU,QAAnB,SACE,cAAC,GAAD,OCqGWuZ,GAnEH,WACV,IAAM7Q,EAAWrI,IACjB,EAAqCI,GAAY,SAAChB,GAAD,OAAWA,KAApDgE,EAAR,EAAQA,YAAa4H,EAArB,EAAqBA,QAASD,EAA9B,EAA8BA,GACtBoO,EAAuB/V,EAAvB+V,mBACAhM,EAAyBnC,EAAzBmC,KAAME,EAAmBrC,EAAnBqC,eACN+L,EAAsBrO,EAAtBqO,YAAalO,EAASH,EAATG,KACfjM,EAAWiB,IACXoM,EAAarN,EAASG,MAAQH,EAASG,MAAMkN,WAAa,KAahE,OAZAzK,qBAAU,WACRwG,EAAS2E,QACR,IACHnL,qBAAU,WACiB/D,IAAjBD,eACasP,GACnB9E,EAAS+E,MAENlC,GACH7C,EAASmC,QAEV,CAAC2C,IAEF,qCACE,cAAC,EAAD,IACA,eAAC,GAAD,CAAMpM,UAAWoY,GAAsB9L,GAAkB+L,EAAzD,UACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACE,eAAC,IAAD,CAAQta,SAAUqN,GAAcrN,EAAhC,UACE,cAAC,IAAD,CAAOO,KAAM9D,EAAWgE,OAAK,EAA7B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOF,KAAM7D,EAAW+D,OAAK,EAA7B,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAwBF,KAAMxD,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAwBwD,KAAMvD,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAwBuD,KAAMtD,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAwBsD,KAAMrD,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAgBqD,KAAMzD,EAAwB2D,OAAK,EAAnD,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAgBF,KAAM3D,EAAtB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO2D,KAAMnD,EAAb,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOmD,KAAM5D,EAAb,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,WAIN,cAAC,GAAD,W,mBCnFF4d,GAAqC,CACzCpW,YAAa,GACb+V,oBAAoB,EACpBM,mBAAmB,GCArB,IAAMD,GAAqC,CACzCnH,gBAAiB,GACjB3B,wBAAyB,GACzBhC,IAAK,KACL7E,WAAY,GCDd,IAAM2P,GAA0B,CAC9BjH,cAAc,EACdhG,oBAAoB,EACpB9J,oBAAqB,KACrB+J,kBAAkB,EAClBvI,kBAAmB,KACnBwI,oBAAoB,EACpBR,oBAAqB,MCFvB,IAAMuN,GAA4B,CAChCrM,KAAM,KACNlP,YAAa,GACboP,gBAAgB,EAChBqM,eAAe,EACfjM,iBAAiB,EACjBkM,gBAAgB,EAChB9L,eAAe,EACf+L,cAAc,GCxBhB,IAAMJ,GAA4B,CAChCjE,iBAAiB,EACjBsE,gBAAgB,GCFlB,IAAML,GAAyB,CAC7B3E,cAAc,EACdiF,aAAa,GCFf,IAAMN,GAAkC,CACtC5D,uBAAuB,EACvBmE,sBAAsB,GCFxB,IAAMP,GAAiC,CACrCvD,sBAAsB,EACtB+D,qBAAqB,GCkBvB,IAAMR,GAAsB,CAC1BS,WAAW,EACXC,iBAAiB,EACjBhP,KAAM,KACNiP,uBAAuB,EACvB/O,WAAY,KACZgO,aAAa,EACbgB,YAAY,GC5BP,IAAMC,GAAcC,aAAgB,CACzClX,YTWa,WAAmF,IAAjDhE,EAAgD,uDAAxCoa,GAAWe,EAA6B,uCAC/F,OAAQA,EAAO7Z,MACb,KAAKoE,GACH,OAAO,2BACF1F,GADL,IAEEgE,YAAahE,EAAMgE,YAAYwH,KAAI,SAACZ,GAIlC,OAHIA,EAAW1G,MAAQiX,EAAOtS,QAAQ3E,MACpC0G,EAAW2B,IAAO3B,EAAW2B,IAAU3B,EAAW2B,IAAM,EAArB,GAE9B3B,OAIb,KAAKjF,GACH,OAAO,2BACF3F,GADL,IAEEgE,YAAahE,EAAMgE,YAAYwH,KAAI,SAACZ,GAIlC,OAHIA,EAAW1G,MAAQiX,EAAOtS,QAAQ3E,MACpC0G,EAAW2B,IAAO3B,EAAW2B,IAAU3B,EAAW2B,IAAM,EAArB,GAE9B3B,OAIb,KAAKhF,GACH,OAAO,2BACF5F,GADL,IAEEgE,YAAahE,EAAMgE,YAAYwH,KAAI,SAACZ,GAElC,OADIA,EAAW2B,MAAK3B,EAAW2B,IAAM,GAC9B3B,OAIb,KAAKrF,GACH,OAAO,2BACFvF,GADL,IAEE+Z,oBAAoB,EACpBM,mBAAmB,IAGvB,KAAK7U,GACH,OAAO,2BACFxF,GADL,IAEE+Z,oBAAoB,EACpB/V,YAAamX,EAAOtS,UAGxB,KAAKpD,GACH,OAAO,2BACFzF,GADL,IAEE+Z,oBAAoB,EACpBM,mBAAmB,IAGvB,QACE,OAAOra,ISjEXuR,kBRca,WACc,IADoBvR,EACrB,uDAD6Boa,GAAWe,EACxC,uCAC1B,OAAQA,EAAO7Z,MACb,KAAKyD,GACH,OAAO,2BACF/E,GADL,IAEEiT,gBAAgB,GAAD,oBAAMjT,EAAMiT,iBAAZ,CAA6BkI,EAAOtS,UACnD4B,WAAYzK,EAAMyK,WAAa0Q,EAAOtS,QAAQiC,QAGlD,KAAK9F,GACH,OAAO,2BACFhF,GADL,IAEEiT,gBAAiBjT,EAAMiT,gBAAgBmI,QAAO,SAACxQ,GAAD,OAC5CA,EAAWyG,UAAY8J,EAAOtS,QAAQwI,WAExC5G,WAAYzK,EAAMyK,WAAa0Q,EAAOtS,QAAQiC,QAGlD,KAAK7F,GACH,OAAO,2BACFjF,GADL,IAEEsP,IAAK6L,EAAOtS,QACZ4B,WAAYzK,EAAMyK,YACZzK,EAAMsP,IAAU,EAAItP,EAAMsP,IAAIxE,MAAlB,GACd,EAAIqQ,EAAOtS,QAAQiC,QAG3B,KAAK5F,GACH,OAAO,2BACFlF,GADL,IAEEiT,gBAAgB,aAAKjT,EAAMsR,2BAG/B,KAAKnM,GACH,OAAO,2BACFnF,GADL,IAEEsR,wBAAwB,aAAKtR,EAAMiT,mBAGvC,KAAK7N,GACH,MAAsC+V,EAAOtS,QAArC6J,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YAChB0I,EAAgB,aAAOrb,EAAMsR,yBAEnC,OADA+J,EAAiBC,OAAjB,MAAAD,EAAgB,CAAQ1I,EAAa,GAArB,oBAA2B0I,EAAiBC,OAAO5I,EAAc,MAC1E,2BACF1S,GADL,IAEEsR,wBAAyB+J,IAG7B,KAAKhW,GACH,OAAO,2BACFrF,GADL,IAEEsR,wBAAwB,aAAK8I,GAAU9I,2BAG3C,KAAKhM,GACH,OAAO,eACF8U,IAGP,QACE,OAAOpa,IQ1EXsD,OPmBa,WAAkE,IAA3CtD,EAA0C,uDAAlCoa,GAAWe,EAAuB,uCAC9E,OAAQA,EAAO7Z,MACb,KAAKuE,GACH,OAAO,2BACF7F,GADL,IAEEmT,cAAc,IAGlB,KAAKrN,GACH,OAAO,2BACF9F,GADL,IAEEmT,cAAc,EACdhG,oBAAoB,EACpB9J,oBAAqB8X,EAAOtS,UAGhC,KAAK9C,GACH,OAAO,2BACF/F,GADL,IAEEmT,cAAc,IAGlB,KAAKnN,GACH,OAAO,2BACFhG,GADL,IAEEmN,mBAAoBiN,GAAUjN,mBAC9B9J,oBAAqB+W,GAAU/W,sBAGnC,KAAK4C,GACH,OAAO,2BACFjG,GADL,IAEEoN,kBAAkB,EAClBvI,kBAAmBsW,EAAOtS,UAG9B,KAAK3C,GACH,OAAO,2BACFlG,GADL,IAEEoN,iBAAkBgN,GAAUhN,iBAC5BvI,kBAAmBuV,GAAUvV,oBAGjC,KAAKsB,GACH,OAAO,2BACFnG,GADL,IAEEqN,oBAAoB,EACpBR,oBAAqBsO,EAAOtS,UAGhC,KAAKzC,GACH,OAAO,2BACFpG,GADL,IAEEqN,mBAAoB+M,GAAU/M,mBAC9BR,oBAAqBuN,GAAUvN,sBAGnC,QACE,OAAO7M,IO5EX4L,QNwBa,WAAqE,IAA7C5L,EAA4C,uDAApCoa,GAAWe,EAAyB,uCACjF,OAAQA,EAAO7Z,MACb,KAAK+E,GACH,OAAO,2BACFrG,GADL,IAEEnB,YAAasc,EAAOtS,UAGxB,KAAKvC,GACH,OAAO,2BACFtG,GADL,IAEE+N,KAAMoN,EAAOtS,UAGjB,KAAKtC,GACH,OAAO,2BACFvG,GADL,IAEE+N,KAAMqM,GAAUrM,KAChBlP,YAAaub,GAAUvb,cAG3B,KAAK2H,GACH,OAAO,2BACFxG,GADL,IAEEiO,gBAAgB,EAChBqM,eAAe,IAGnB,KAAK7T,GACH,OAAO,2BACFzG,GADL,IAEEiO,gBAAgB,EAChBF,KAAMoN,EAAOtS,UAGjB,KAAKnC,GACH,OAAO,2BACF1G,GADL,IAEEiO,gBAAgB,EAChBqM,eAAe,IAGnB,KAAK3T,GACH,OAAO,2BACF3G,GADL,IAEEqO,iBAAiB,EACjBkM,gBAAgB,IAGpB,KAAK3T,GACH,OAAO,2BACF5G,GADL,IAEEqO,iBAAiB,EACjBN,KAAMoN,EAAOtS,UAGjB,KAAKhC,GACH,OAAO,2BACF7G,GADL,IAEEqO,iBAAiB,EACjBkM,gBAAgB,IAGpB,KAAKzT,GACH,OAAO,2BACF9G,GADL,IAEEyO,eAAe,EACf+L,cAAc,IAGlB,KAAKzT,GACH,OAAO,2BACF/G,GADL,IAEEyO,eAAe,IAGnB,KAAKzH,GACH,OAAO,2BACFhH,GADL,IAEEyO,eAAe,EACf+L,cAAc,IAGlB,QACE,OAAOxa,IM3GXqW,SLCa,WAAuE,IAA9CrW,EAA6C,uDAArCoa,GAAWe,EAA0B,uCACnF,OAAQA,EAAO7Z,MACb,KAAK8F,GACH,OAAO,2BACFpH,GADL,IAEEmW,iBAAiB,EACjBsE,gBAAgB,IAGpB,KAAKpT,GACH,OAAO,2BACFrH,GADL,IAEEmW,iBAAiB,IAGrB,KAAK7O,GACH,OAAO,2BACFtH,GADL,IAEEmW,iBAAiB,EACjBsE,gBAAgB,IAGpB,QACE,OAAOza,IKvBX2V,MJAa,WAAiE,IAA3C3V,EAA0C,uDAAlCoa,GAAWe,EAAuB,uCAC7E,OAAQA,EAAO7Z,MACb,KAAK2F,GACH,OAAO,2BACFjH,GADL,IAEEyV,cAAc,EACdiF,aAAa,IAGjB,KAAKxT,GACH,OAAO,2BACFlH,GADL,IAEEyV,cAAc,IAGlB,KAAKtO,GACH,OAAO,2BACFnH,GADL,IAEEyV,cAAc,EACdiF,aAAa,IAGjB,QACE,OAAO1a,IItBX0W,eHDa,WAAmF,IAApD1W,EAAmD,uDAA3Coa,GAAWe,EAAgC,uCAC/F,OAAQA,EAAO7Z,MACb,KAAKiG,GACH,OAAO,2BACFvH,GADL,IAEEwW,uBAAuB,EACvBmE,sBAAsB,EACtBY,uBAAuB,IAG3B,KAAK/T,GACH,OAAO,2BACFxH,GADL,IAEEwW,uBAAuB,IAG3B,KAAK/O,GACH,OAAO,2BACFzH,GADL,IAEEwW,uBAAuB,EACvBmE,sBAAsB,IAG1B,QACE,OAAO3a,IGtBX4W,cFFa,WAAiF,IAAnD5W,EAAkD,uDAA1Coa,GAAWe,EAA+B,uCAC7F,OAAQA,EAAO7Z,MACb,KAAKoG,GACH,OAAO,2BACF1H,GADL,IAEE6W,sBAAsB,EACtB+D,qBAAqB,IAGzB,KAAKjT,GACH,OAAO,2BACF3H,GADL,IAEE6W,sBAAsB,IAG1B,KAAKjP,GACH,OAAO,2BACF5H,GADL,IAEE6W,sBAAsB,EACtB+D,qBAAqB,IAGzB,QACE,OAAO5a,IEpBX2L,GDsBa,WAAqE,IAAlD3L,EAAiD,uDAAzCoa,GAAWe,EAA8B,uCACjF,OAAQA,EAAO7Z,MACb,KAAKuG,GAwCL,KAAKM,GACH,OAAO,2BACFnI,GADL,IAEE6a,WAAW,IArCf,KAAK/S,GACH,OAAO,2BACF9H,GADL,IAEE8a,iBAAiB,IAGrB,KAAK/S,GACH,OAAO,2BACF/H,GADL,IAEE8a,iBAAiB,EACjBU,UAAW,OAGf,KAAKxT,GACH,OAAO,2BACFhI,GADL,IAEE6a,WAAW,EACXW,UAAWL,EAAOtS,UAGtB,KAAKZ,GACH,OAAO,2BACFjI,GADL,IAEE8a,iBAAiB,EACjBU,UAAW,OAGf,KAAKtT,GACH,OAAO,2BACFlI,GADL,IAEE6a,WAAW,EACX/O,KAAMqP,EAAOtS,UASjB,KAAKT,GACH,OAAO,2BACFpI,GADL,IAEE+a,uBAAuB,IAG3B,KAAK1S,GACH,OAAO,2BACFrI,GADL,IAEE+a,uBAAuB,EACvBU,gBAAiB,OAGrB,KAAKnT,GACH,OAAO,2BACFtI,GADL,IAEE6a,WAAW,EACXY,gBAAiBN,EAAOtS,UAG5B,KAAKN,GACH,OAAO,2BACFvI,GADL,IAEE+a,uBAAuB,EACvBU,gBAAiB,OAGrB,KAAKjT,GACH,OAAO,2BACFxI,GADL,IAEE6a,WAAW,EACX7O,WAAYmP,EAAOtS,UAGvB,KAAKJ,GACH,OAAO,2BACFzI,GADL,IAEEga,aAAa,EACbgB,YAAY,IAGhB,KAAKtS,GACH,OAAO,2BACF1I,GADL,IAEEga,aAAa,EACblO,KAAMqP,EAAOtS,UAGjB,KAAKF,GACH,OAAO,2BACF3I,GADL,IAEEga,aAAa,EACbgB,YAAY,IAGhB,QACE,OAAOhb,ME3IA0b,GAAmB,SAACC,EAAeC,EACDC,GADf,OACgD,SAC9E3I,GAEA,IAAI4I,EAA2B,KAE/B,OAAO,SAACC,GAAD,OAAU,SAACZ,GAChB,IAAQlS,EAAuBiK,EAAvBjK,SAAUoC,EAAa6H,EAAb7H,SACV/J,EAAS6Z,EAAT7Z,KAEN0a,EACEJ,EADFI,OAAQC,EACNL,EADMK,OAAQC,EACdN,EADcM,OAAQC,EACtBP,EADsBO,QAASC,EAC/BR,EAD+BQ,QAASC,EACxCT,EADwCS,UAE5C,EAAiChR,IAAzBO,EAAR,EAAQA,QAAS5H,EAAjB,EAAiBA,YAEb1C,IAAS0a,GAAUpQ,EAAQ/M,cAC7Bid,EAAS,IAAIQ,UAAJ,UAAiBX,GAAjB,OAAyBE,EAAO,iBAAajQ,EAAQ/M,aAAgB,MAG5Eid,IACExa,IAAS2a,GACXH,EAAOS,MAAM,IAAM,2GAGrBT,EAAOU,OAAS,kBAAMvT,EAAS,CAAE3H,KAAM4a,KACvCJ,EAAOW,QAAU,SAAC3X,GAChBmE,EAAS,CAAE3H,KAAM8a,EAASvT,QAAS/D,IACnCmE,EAASL,GAAqB,IAAItK,MAAMwG,EAAMxD,SAEhDwa,EAAOY,QAAU,kBAAMzT,EAAS,CAAE3H,KAAM6a,KACxCL,EAAOa,UAAY,SAACC,GAClB,IAAMtd,EAAO1B,KAAKif,MAAMD,EAAMtd,MAC9B,IAAKA,EAAKwN,QAMR,OALA7D,EAAS,CACP3H,KAAM8a,EACNvT,QAAS,IAAIiU,MAAMxd,EAAKf,gBAE1B0K,EAASL,GAAqB,IAAItK,MAAMgB,EAAKf,WAG/C0K,EAAS,CACP3H,KAAM+a,EACNxT,QAAQ,2BACHvJ,GADE,IAELiM,OAAQ,aAAIjM,EAAKiM,QAAQC,KAAI,SAACjB,GAAD,OAAWD,GAAYC,EAAMvG,EAAYA,sBAK9E+X,EAAKZ,OCTH4B,GAAwC,CAC5Cf,OAAQnU,GACRoU,OAAQnU,GACRoU,OAAQnU,GACRoU,QAASlU,GACTmU,QAASpU,GACTqU,UAAWnU,IAYP8U,GAAoD,CACxDhB,OAAQ7T,GACR8T,OAAQ7T,GACR8T,OAAQ7T,GACR8T,QAAS5T,GACT6T,QAAS9T,GACT+T,UAAW7T,IAIPyU,IAD0BhN,OAAOiN,sCAAwCC,MAE7EC,aACEC,KACA3B,GnEvCuB,6CmEuCOqB,IAAmB,GACjDrB,GnEvC4B,yCmEuCOsB,IAAyB,KAInD9J,GAAQoK,aAAYrC,GAAagC,ICzE9Cla,IAASnD,OACP,cAAC,IAAM2d,WAAP,UACE,cAAC,IAAD,CAAUrK,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINtQ,SAASO,eAAe,SAG1BxH,K,mBCnBAF,EAAOC,QAAU,CAAC,UAAY,sCAAsC,OAAS,mCAAmC,OAAS,mCAAmC,KAAO,iCAAiC,WAAa,uCAAuC,oBAAoB,8CAA8C,mBAAmB,6CAA6C,kBAAkB,4CAA4C,OAAS,mCAAmC,cAAc,0C,mBCAlfD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,kBAAoB,8CAA8C,mBAAqB,+CAA+C,aAAa,uCAAuC,kBAAkB,4CAA4C,iBAAiB,2CAA2C,MAAQ,kCAAkC,kBAAkB,8C,mBCAxbD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,MAAQ,kCAAkC,UAAY,sCAAsC,UAAY,wC,mBCApKD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,cAAc,gCAAgC,cAAc,gCAAgC,YAAc,gCAAgC,MAAQ,0BAA0B,cAAc,kC,mBCA5QD,EAAOC,QAAU,CAAC,WAAa,2CAA2C,wBAAwB,sDAAsD,6BAA6B,2DAA2D,mBAAmB,iDAAiD,wBAAwB,sDAAsD,cAAc,8C,mBCAhZD,EAAOC,QAAU,CAAC,UAAY,oCAAoC,MAAQ,gCAAgC,KAAO,+BAA+B,IAAM,8BAA8B,KAAO,iC,mBCA3LD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,QAAU,sBAAsB,cAAc,4B,mBCAhID,EAAOC,QAAU,CAAC,OAAS,2BAA2B,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,2B,mBCAvID,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,KAAO,yBAAyB,QAAU,4BAA4B,eAAiB,qC,mBCA7MD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,uB,mBCAtFD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,IAAM,gCAAgC,QAAU,sC,mBCApHD,EAAOC,QAAU,CAAC,YAAY,4CAA4C,qBAAqB,qDAAqD,KAAO,yC,mBCA3JD,EAAOC,QAAU,CAAC,OAAS,8BAA8B,YAAc,qC,mBCAvED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAW,gCAAgC,MAAQ,+B,mBCArED,EAAOC,QAAU,CAAC,KAAO,qC,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,8B,mBCA5DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,2B","file":"static/js/main.52dcfc24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__31U88\",\"lds-ripple\":\"loader_lds-ripple__1KA0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__AKixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error-popup_error__268w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"info-tooltip_title__MiCz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"success-popup_success__2JF0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"bun-constructor-element_list-item__3KM-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"orders_list__1LzVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__Rmuvy\",\"nav\":\"profile_nav__1tnk2\",\"list\":\"profile_list__22khu\",\"link\":\"profile_link__1-_Is\",\"link_active\":\"profile_link_active__1VPR0\",\"caption\":\"profile_caption__3N0hV\",\"orders\":\"profile_orders__ix_KB\",\"centering-block\":\"profile_centering-block__3aPtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"orders-status_numbers__1HQ4Q\",\"column\":\"orders-status_column__397_5\",\"list\":\"orders-status_list__22Wrq\",\"list-item\":\"orders-status_list-item__3Da5j\",\"list-item_done\":\"orders-status_list-item_done__1N-sc\",\"total\":\"orders-status_total__1XIbL\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const NORMA_API_URL = 'https://norma.nomoreparties.space/api';\nexport const INGREDIENTS_URL = '/ingredients';\nexport const ORDERS_URL = '/orders';\nexport const FEED_URL = '/orders/all';\nexport const FORGOT_PASSWORD_URL = '/password-reset';\nexport const PASSWORD_RESET_URL = '/password-reset/reset';\nexport const REGISTER_URL = '/auth/register';\nexport const LOGIN_URL = '/auth/login';\nexport const LOGOUT_URL = '/auth/logout';\nexport const REFRESH_TOKEN_URL = '/auth/token';\nexport const USER_URL = '/auth/user';\n\nexport const MAIN_PATH = '/react-burger';\nexport const FEED_PATH = `${MAIN_PATH}/feed`;\nexport const FEED_ID_PATH = `${MAIN_PATH}/feed/:id`;\nexport const PROFILE_PATH = `${MAIN_PATH}/profile`;\nexport const PROFILE_ORDERS_PATH = `${MAIN_PATH}/profile/orders`;\nexport const PROFILE_ORDERS_ID_PATH = `${MAIN_PATH}/profile/orders/:id`;\nexport const LOGIN_PATH = `${MAIN_PATH}/login`;\nexport const REGISTER_PATH = `${MAIN_PATH}/register`;\nexport const FORGOT_PASSWORD_PATH = `${MAIN_PATH}/forgot-password`;\nexport const RESET_PASSWORD_PATH = `${MAIN_PATH}/reset-password`;\nexport const INGREDIENTS_PATH = `${MAIN_PATH}/ingredients`;\nexport const INGREDIENTS_ID_PATH = `${MAIN_PATH}/ingredients/:id`;\n\nexport const DEFAULT_ERR_MSG = 'Ошибка сервера';\nexport const DEFAULT_SUCCESS_MSG = 'Данные успешно отправлены';\nexport const DEFAULT_REQUEST_ERR_MSG = 'Ошибка запроса! Данные не получены';\nexport const BUN_REQUIRED_ERR_MSG = 'Перед добавлением ингредиентов, сначала нужно выбрать булку для будущего бургера';\nexport const TOKEN_ERR_MSG = 'Ошибка получения токена, неоходимо повторно пройти авторизацию';\n\nexport const HEADER_CONSTRUCTOR_BUTTON_TEXT = 'Конструктор';\nexport const HEADER_ORDERS_BUTTON_TEXT = 'Лента заказов';\nexport const HEADER_PROFILE_BUTTON_TEXT = 'Личный кабинет';\nexport const CONSTRUCTOR_DEFAULT_TEXT = 'Пожалуйста, выберете булку бургера для создания заказа';\nexport const CONSTRUCTOR_BUTTON_TEXT = 'Оформить заказ';\nexport const CONSTRUCTOR_LOADING_BUTTON_TEXT = 'Оформляем...';\n\nexport const WS_FEED_URL = 'wss://norma.nomoreparties.space/orders/all';\nexport const WS_MY_ORDERS_URL = 'wss://norma.nomoreparties.space/orders';\nexport const MAX_INGREDIETNS_IN_CARD = 6;\n","import {\n  NORMA_API_URL,\n  INGREDIENTS_URL,\n  ORDERS_URL,\n  FEED_URL,\n  FORGOT_PASSWORD_URL,\n  PASSWORD_RESET_URL,\n  REGISTER_URL,\n  LOGIN_URL,\n  LOGOUT_URL,\n  REFRESH_TOKEN_URL,\n  USER_URL,\n} from '../utils/constants';\nimport {\n  TRegisterForm,\n  TLoginForm,\n  TForgotPasswordForm,\n  TResetPasswordForm,\n  TProfileForm,\n  TToken,\n  TRefreshToken,\n  TIngredientsId,\n} from './types';\n\ntype TRequestSettings = {\n  method: 'GET' | 'POST' | 'PATCH';\n  body?: { [name: string]: string | number }\n  | { [name: string]: ReadonlyArray<string> };\n  token?: string;\n};\n\nfunction createRequest(url: string, { method, body, token }: TRequestSettings): Promise<any> {\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer ',\n  };\n  let isRequestFailed = false;\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  const defaultReqSettings: RequestInit = {\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n  };\n\n  return fetch(url, {\n    method,\n    body: JSON.stringify(body),\n    headers,\n    ...defaultReqSettings,\n  })\n    .then((res) => {\n      if (!res.ok) {\n        isRequestFailed = true;\n      }\n      return res.json();\n    })\n    .then((res) => {\n      if (isRequestFailed) {\n        throw new Error(res.message);\n      }\n      return res;\n    });\n}\n\nexport function getIngredientsRequest() {\n  return createRequest(`${NORMA_API_URL}${INGREDIENTS_URL}`, { method: 'GET' });\n}\n\nexport function sendOrderRequest(ingredientsId: TIngredientsId, token: TToken) {\n  return createRequest(`${NORMA_API_URL}${ORDERS_URL}`, { method: 'POST', body: ingredientsId, token });\n}\n\nexport function forgotPasswordRequest(form: TForgotPasswordForm) {\n  return createRequest(`${NORMA_API_URL}${FORGOT_PASSWORD_URL}`, { method: 'POST', body: form });\n}\n\nexport function resetPasswordRequest(form: TResetPasswordForm) {\n  return createRequest(`${NORMA_API_URL}${PASSWORD_RESET_URL}`, { method: 'POST', body: form });\n}\n\nexport function registerRequest(form: TRegisterForm) {\n  return createRequest(`${NORMA_API_URL}${REGISTER_URL}`, { method: 'POST', body: form });\n}\n\nexport function loginRequest(form: TLoginForm) {\n  return createRequest(`${NORMA_API_URL}${LOGIN_URL}`, { method: 'POST', body: form });\n}\n\nexport function logoutRequest(refreshToken: TRefreshToken) {\n  return createRequest(`${NORMA_API_URL}${LOGOUT_URL}`, { method: 'POST', body: refreshToken });\n}\n\nexport function refreshTokenRequest(refreshToken: TRefreshToken) {\n  return createRequest(`${NORMA_API_URL}${REFRESH_TOKEN_URL}`, { method: 'POST', body: refreshToken });\n}\n\nexport function getUserRequest(token: TToken) {\n  return createRequest(`${NORMA_API_URL}${USER_URL}`, { method: 'GET', token });\n}\n\nexport function editUserRequest(form: TProfileForm, token: TToken) {\n  return createRequest(`${NORMA_API_URL}${USER_URL}`, { method: 'PATCH', body: form, token });\n}\n\nexport function getFeedRequest() {\n  return createRequest(`${NORMA_API_URL}${FEED_URL}`, { method: 'GET' });\n}\n","import Cookies from 'js-cookie';\nimport { refreshTokenRequest } from './norma-api';\n\ntype TAddedTokens = {\n  accessToken: string;\n  refreshToken: string;\n};\n\nfunction useToken() {\n  const { accessToken, refreshToken } = Cookies.get();\n\n  const clearAllTokens = () => {\n    Cookies.remove('accessToken');\n    Cookies.remove('refreshToken');\n  };\n\n  const addTokens = ({\n    accessToken: addedAccessToken, refreshToken: addedRefreshToken,\n  }: TAddedTokens) => {\n    const token = addedAccessToken.split('Bearer ')[1];\n    Cookies.set('accessToken', token, { expires: 1 / 24 / 3 });\n    Cookies.set('refreshToken', addedRefreshToken, { expires: 7 });\n    return token;\n  };\n\n  const getToken = async () => {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    if (!refreshToken) {\n      return null;\n    }\n\n    const data = await refreshTokenRequest({ token: refreshToken });\n    if (data.accessToken) {\n      return addTokens({ accessToken: data.accessToken, refreshToken: data.refreshToken });\n    }\n\n    return null;\n  };\n\n  return {\n    getToken,\n    clearAllTokens,\n    addTokens,\n    accessToken,\n    refreshToken,\n  };\n}\n\nexport default useToken;\n","import React, { FC } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useToken from '../../services/token';\nimport { LOGIN_PATH } from '../../utils/constants';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const { refreshToken } = useToken();\n  return (\n    <Route\n      {...rest}\n      render={\n        ({ location }) => (refreshToken\n          ? (children)\n          : (<Redirect to={{ pathname: LOGIN_PATH, state: { from: location } }} />))\n      }\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ProtectedRoute;\n","import React, { FC } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useToken from '../../services/token';\nimport { MAIN_PATH } from '../../utils/constants';\n\nconst ProtectedFromAuthRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const { refreshToken } = useToken();\n  return (\n    <Route\n      {...rest}\n      render={\n        () => (!refreshToken\n          ? (children)\n          : (<Redirect to={MAIN_PATH} />))\n      }\n    />\n  );\n};\n\nProtectedFromAuthRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ProtectedFromAuthRoute;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './header-button.module.css';\n\ntype THeaderButton = {\n  path: string;\n  text: string;\n};\n\nconst HeaderButton: FC<THeaderButton> = ({ children, path, text }) => (\n  <NavLink exact to={path} className={`${styles.button} text text_type_main-default text_color_inactive pl-5 pr-5 pb-4 pt-4`} activeClassName={styles.link_active}>\n    {children}\n    <span className=\"ml-2\">{text}</span>\n  </NavLink>\n);\n\nexport default HeaderButton;\n","import {\n  TypedUseSelectorHook,\n  useSelector as selectorHook,\n  useDispatch as dispatchHook,\n} from 'react-redux';\nimport { useLocation as locationHook } from 'react-router-dom';\nimport {\n  RootState, AppDispatch, AppThunk,\n} from './store';\nimport { TLocation } from './types';\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk >();\nexport const useLocation = () => locationHook<TLocation>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n","import React from 'react';\nimport {\n  Logo, ProfileIcon, BurgerIcon, ListIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link } from 'react-router-dom';\nimport HeaderButton from '../header-button/header-button';\nimport styles from './app-header.module.css';\nimport {\n  MAIN_PATH,\n  FEED_PATH,\n  PROFILE_PATH,\n  HEADER_CONSTRUCTOR_BUTTON_TEXT,\n  HEADER_ORDERS_BUTTON_TEXT,\n  HEADER_PROFILE_BUTTON_TEXT,\n} from '../../utils/constants';\nimport { useLocation } from '../../services/hooks';\n\nconst AppHeader = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <header className={`${styles.header} pt-4 pb-4`}>\n      <div className={styles.container}>\n        <nav>\n          <ul className={styles.menu}>\n            <li className=\"mr-2\">\n              <HeaderButton path={MAIN_PATH} text={HEADER_CONSTRUCTOR_BUTTON_TEXT}><BurgerIcon type={pathname === MAIN_PATH ? 'primary' : 'secondary'} /></HeaderButton>\n            </li>\n            <li>\n              <HeaderButton path={FEED_PATH} text={HEADER_ORDERS_BUTTON_TEXT}><ListIcon type={pathname === FEED_PATH ? 'primary' : 'secondary'} /></HeaderButton>\n            </li>\n          </ul>\n        </nav>\n        <div className={styles.logo}>\n          <Link to={MAIN_PATH}>\n            <Logo />\n          </Link>\n        </div>\n\n        <HeaderButton path={PROFILE_PATH} text={HEADER_PROFILE_BUTTON_TEXT}><ProfileIcon type={pathname === PROFILE_PATH ? 'primary' : 'secondary'} /></HeaderButton>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport styles from './loader.module.css';\n\nconst Loader = () => (\n  <div className={styles.loader}>\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport styles from './main.module.css';\nimport Loader from '../loader/loader';\n\nconst Main: FC<{ isLoading: boolean }> = ({ children, isLoading }) => (\n  <main className={`${styles.main} ${isLoading && styles.main_loader} pl-5 pr-5`}>\n    {isLoading ? <Loader /> : children}\n  </main>\n);\n\nexport default Main;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { FC, MouseEvent } from 'react';\nimport styles from './modal-overlay.module.css';\n\ntype TModalOverlay = {\n  isLockApp?: boolean;\n  handleClosePopup?: () => void;\n};\n\nconst ModalOverlay: FC<TModalOverlay> = ({ children, isLockApp, handleClosePopup }) => {\n  const handleOverlayClick = (e: MouseEvent<HTMLDivElement>): void => {\n    if (e.target === e.currentTarget && !isLockApp && handleClosePopup) {\n      handleClosePopup();\n    }\n  };\n\n  return (\n    <div className={styles.overlay} onMouseDown={handleOverlayClick}>\n      {children}\n    </div>\n  );\n};\n\nModalOverlay.defaultProps = {\n  isLockApp: false,\n  handleClosePopup: () => {},\n};\n\nexport default ModalOverlay;\n","import React, { useEffect, FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './modal.module.css';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\n\ntype TModal = {\n  title?: string;\n  handleClosePopup: () => void;\n};\n\nconst Modal: FC<TModal> = ({ children, title, handleClosePopup }) => {\n  useEffect(() => {\n    const closeByEscape: (e: KeyboardEvent) => void = (e) => {\n      if (e.key === 'Escape') {\n        handleClosePopup();\n      }\n    };\n    document.addEventListener('keydown', closeByEscape);\n    return () => {\n      document.removeEventListener('keydown', closeByEscape);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(\n    <ModalOverlay handleClosePopup={handleClosePopup}>\n      <div className={`${styles.modal} pl-10 pt-10 pr-10`}>\n        <header className={`${styles.header}`}>\n          <h2 className={`${styles.title} text text_type_main-large`}>{title}</h2>\n          <CloseIcon type=\"primary\" onClick={handleClosePopup} />\n        </header>\n        {children}\n      </div>\n    </ModalOverlay>,\n    document.getElementById('react-modals')!,\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/done-animation.887b83be.gif\";","import React from 'react';\nimport styles from './order-details.module.css';\nimport donePath from '../../images/done-animation.gif';\nimport { useSelector } from '../../services/hooks';\n\nconst OrderDetails = () => {\n  const orderDetailsContent = useSelector((state) => state.popups.orderDetailsContent);\n\n  return (\n    <>\n      <p className={`${styles['order-id']} text text_type_digits-large mt-4 mb-8`}>{orderDetailsContent?.order?.number}</p>\n      <p className=\"text text_type_main-medium\">идентификатор заказа</p>\n      <img src={donePath} alt=\"Анимация успешного завершения заказа\" className={`${styles.image} mt-15 mb-15`} />\n      <p className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</p>\n      <p className=\"text text_type_main-default text_color_inactive mb-30\">Дождитесь готовности на орбитальной станции</p>\n    </>\n  );\n};\n\nexport default OrderDetails;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ingredient-details.module.css';\nimport { useSelector } from '../../services/hooks';\n\nconst IngredientDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const ingredient = useSelector((state) => (\n    state.ingredients.ingredients.find(({ _id }) => id === _id)\n  ));\n\n  const {\n    image_large,\n    name,\n    calories,\n    proteins,\n    fat,\n    carbohydrates,\n  } = ingredient || {};\n\n  return (\n    <>\n      <img src={image_large} alt={name} className={styles.image} />\n      <h3 className={`${styles.title} text text_type_main-medium mt-4 mb-8`}>{name}</h3>\n      <ul className={`${styles.nutrition} text text_type_main-default text_color_inactive mb-15`}>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Калории,ккал</span>\n          <span className=\"text text_type_digits-default\">{calories}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Белки, г</span>\n          <span className=\"text text_type_digits-default\">{proteins}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Жиры, г</span>\n          <span className=\"text text_type_digits-default\">{fat}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Углеводы, г</span>\n          <span className=\"text text_type_digits-default\">{carbohydrates}</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default IngredientDetails;\n","import React, { FC } from 'react';\nimport styles from './info-tooltip.module.css';\n\nconst InfoTooltip: FC<{ message: string }> = ({ message, children }) => (\n  <>\n    {children}\n    <h3 className={`${styles.title} text text_type_main-medium mt-10 mb-25`}>{message}</h3>\n  </>\n);\n\nexport default InfoTooltip;\n","import React from 'react';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './error-popup.module.css';\nimport { DEFAULT_ERR_MSG } from '../../utils/constants';\nimport InfoTooltip from '../info-tooltip/info-tooltip';\nimport { useSelector } from '../../services/hooks';\n\nconst ErrorPopup = () => {\n  const errorPopupContent = useSelector((state) => state.popups.errorPopupContent);\n\n  return (\n    <InfoTooltip message={errorPopupContent ? errorPopupContent.message : DEFAULT_ERR_MSG}>\n      <div className={styles.error}>\n        <CloseIcon type=\"error\" />\n      </div>\n    </InfoTooltip>\n  );\n};\n\nexport default ErrorPopup;\n","// burger-constructor\nexport const ADD_INGREDIENT_TO_CONSTRUCTOR: 'ADD_INGREDIENT_TO_CONSTRUCTOR' = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR: 'REMOVE_INGREDIENT_TO_CONSTRUCTOR' = 'REMOVE_INGREDIENT_TO_CONSTRUCTOR';\nexport const REPLACE_BUN_IN_CONSTRUCTOR: 'REPLACE_BUN_IN_CONSTRUCTOR' = 'REPLACE_BUN_IN_CONSTRUCTOR';\nexport const UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER: 'UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER' = 'UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER';\nexport const COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER: 'COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER' = 'COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER';\nexport const REPLACE_ITEMS_IN_DRAGGING_CONTAINER: 'REPLACE_ITEMS_IN_DRAGGING_CONTAINER' = 'REPLACE_ITEMS_IN_DRAGGING_CONTAINER';\nexport const RESET_DRAGGING_CONTAINER: 'RESET_DRAGGING_CONTAINER' = 'RESET_DRAGGING_CONTAINER';\nexport const RESET_CONSTRUCTOR: 'RESET_CONSTRUCTOR' = 'RESET_CONSTRUCTOR';\n\n// burger-ingredients\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\nexport const INCREASE_INGREDIENT: 'INCREASE_INGREDIENT' = 'INCREASE_INGREDIENT';\nexport const DECREASE_INGREDIENT: 'DECREASE_INGREDIENT' = 'DECREASE_INGREDIENT';\nexport const RESET_INGREDIENTS_COUNT: 'RESET_INGREDIENTS_COUNT' = 'RESET_INGREDIENTS_COUNT';\n\n// popups\nexport const GET_ORDER_DETAILS_REQUEST: 'GET_ORDER_DETAILS_REQUEST' = 'GET_ORDER_DETAILS_REQUEST';\nexport const GET_ORDER_DETAILS_SUCCESS: 'GET_ORDER_DETAILS_SUCCESS' = 'GET_ORDER_DETAILS_SUCCESS';\nexport const GET_ORDER_DETAILS_FAILED: 'GET_ORDER_DETAILS_FAILED' = 'GET_ORDER_DETAILS_FAILED';\nexport const CLOSE_ORDER_DETAILS: 'CLOSE_ORDER_DETAILS' = 'CLOSE_ORDER_DETAILS';\nexport const OPEN_ERROR_POPUP: 'OPEN_ERROR_POPUP' = 'OPEN_ERROR_POPUP';\nexport const CLOSE_ERROR_POPUP: 'CLOSE_ERROR_POPUP' = 'CLOSE_ERROR_POPUP';\nexport const OPEN_SUCCESS_POPUP: 'OPEN_SUCCESS_POPUP' = 'OPEN_SUCCESS_POPUP';\nexport const CLOSE_SUCCESS_POPUP: 'CLOSE_SUCCESS_POPUP' = 'CLOSE_SUCCESS_POPUP';\n\n// profile\nexport const UPDATE_TOKEN: 'UPDATE_TOKEN' = 'UPDATE_TOKEN';\nexport const SET_USER: 'SET_USER' = 'SET_USER';\nexport const CLEAR_USER: 'CLEAR_USER' = 'CLEAR_USER';\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\nexport const EDIT_USER_REQUEST: 'EDIT_USER_REQUEST' = 'EDIT_USER_REQUEST';\nexport const EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS' = 'EDIT_USER_SUCCESS';\nexport const EDIT_USER_FAILED: 'EDIT_USER_FAILED' = 'EDIT_USER_FAILED';\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\n\n// login\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\n\n// register\nexport const REGISTER_REQUEST: 'REGISTER_REQUEST' = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS: 'REGISTER_SUCCESS' = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILED: 'REGISTER_FAILED' = 'REGISTER_FAILED';\n\n// forgot-password\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\n\n// reset-password\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\n\n// ws-actions\nexport const WS_FEED_CONNECTION_START: 'WS_FEED_CONNECTION_START' = 'WS_FEED_CONNECTION_START';\nexport const WS_FEED_CONNECTION_STOP: 'WS_FEED_CONNECTION_STOP' = 'WS_FEED_CONNECTION_STOP';\nexport const WS_FEED_CONNECTION_SUCCESS: 'WS_FEED_CONNECTION_SUCCESS' = 'WS_FEED_CONNECTION_SUCCESS';\nexport const WS_FEED_CONNECTION_ERROR: 'WS_FEED_CONNECTION_ERROR' = 'WS_FEED_CONNECTION_ERROR';\nexport const WS_FEED_CONNECTION_CLOSED: 'WS_FEED_CONNECTION_CLOSED' = 'WS_FEED_CONNECTION_CLOSED';\nexport const WS_GET_FEED: 'WS_GET_FEED_DATA' = 'WS_GET_FEED_DATA';\nexport const WS_USER_ORDERS_CONNECTION_START: 'WS_USER_ORDERS_CONNECTION_START' = 'WS_USER_ORDERS_CONNECTION_START';\nexport const WS_USER_ORDERS_CONNECTION_STOP: 'WS_USER_ORDERS_CONNECTION_STOP' = 'WS_USER_ORDERS_CONNECTION_STOP';\nexport const WS_USER_ORDERS_CONNECTION_SUCCESS: 'WS_USER_ORDERS_CONNECTION_SUCCESS' = 'WS_USER_ORDERS_CONNECTION_SUCCESS';\nexport const WS_USER_ORDERS_CONNECTION_ERROR: 'WS_USER_ORDERS_CONNECTION_ERROR' = 'WS_USER_ORDERS_CONNECTION_ERROR';\nexport const WS_USER_ORDERS_CONNECTION_CLOSED: 'WS_USER_ORDERS_CONNECTION_CLOSED' = 'WS_USER_ORDERS_CONNECTION_CLOSED';\nexport const WS_GET_USER_ORDERS: 'WS_GET_USER_FEED' = 'WS_GET_USER_FEED';\nexport const FEED_REQUEST: 'FEED_REQUEST' = 'FEED_REQUEST';\nexport const FEED_SUCCESS: 'FEED_SUCCESS' = 'FEED_SUCCESS';\nexport const FEED_FAILED: 'FEED_FAILED' = 'FEED_FAILED';\n","import { sendOrderRequest } from '../norma-api';\nimport {\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  CLOSE_ORDER_DETAILS,\n  OPEN_ERROR_POPUP,\n  CLOSE_ERROR_POPUP,\n  OPEN_SUCCESS_POPUP,\n  CLOSE_SUCCESS_POPUP,\n} from './action-types';\nimport type { TSuccessResetPassword, TOrderDetails } from '../types/data';\nimport { TOKEN_ERR_MSG } from '../../utils/constants';\nimport useToken from '../token';\nimport type { AppThunk } from '../store';\n\nexport interface IGetOrderDetailsAction {\n  readonly type: typeof GET_ORDER_DETAILS_REQUEST;\n}\n\nexport interface IGetOrderDetailsSuccessAction {\n  readonly type: typeof GET_ORDER_DETAILS_SUCCESS;\n  readonly payload: TOrderDetails;\n}\n\nexport interface IGetOrderDetailsFailedAction {\n  readonly type: typeof GET_ORDER_DETAILS_FAILED;\n}\n\nexport interface ICloseOrderDetailsAction {\n  readonly type: typeof CLOSE_ORDER_DETAILS;\n}\n\nexport interface IOpenErrorPopupAction {\n  readonly type: typeof OPEN_ERROR_POPUP;\n  readonly payload: Error;\n}\n\nexport interface ICloseErrorPopupAction {\n  readonly type: typeof CLOSE_ERROR_POPUP;\n}\n\nexport interface IOpenSuccessPopupAction {\n  readonly type: typeof OPEN_SUCCESS_POPUP;\n  readonly payload: TSuccessResetPassword;\n}\n\nexport interface ICloseSuccessPopupAction {\n  readonly type: typeof CLOSE_SUCCESS_POPUP;\n}\n\nexport type TPopupActions =\n  | IGetOrderDetailsAction\n  | IGetOrderDetailsSuccessAction\n  | IGetOrderDetailsFailedAction\n  | ICloseOrderDetailsAction\n  | IOpenErrorPopupAction\n  | ICloseErrorPopupAction\n  | IOpenSuccessPopupAction\n  | ICloseSuccessPopupAction;\n\nexport const getOrderDetailsAction = (): IGetOrderDetailsAction => ({\n  type: GET_ORDER_DETAILS_REQUEST,\n});\n\nexport const getOrderDetailsSuccessAction = (\n  orderDetails: TOrderDetails,\n): IGetOrderDetailsSuccessAction => ({\n  type: GET_ORDER_DETAILS_SUCCESS,\n  payload: orderDetails,\n});\n\nexport const getOrderDetailsFailedAction = (): IGetOrderDetailsFailedAction => ({\n  type: GET_ORDER_DETAILS_FAILED,\n});\n\nexport const closeOrderDetailsAction = (): ICloseOrderDetailsAction => ({\n  type: CLOSE_ORDER_DETAILS,\n});\n\nexport const openErrorPopupAction = (error: Error): IOpenErrorPopupAction => ({\n  type: OPEN_ERROR_POPUP,\n  payload: error,\n});\n\nexport const closeErrorPopupAction = (): ICloseErrorPopupAction => ({\n  type: CLOSE_ERROR_POPUP,\n});\n\nexport const openSuccessPopupAction = (\n  successData: TSuccessResetPassword,\n): IOpenSuccessPopupAction => ({\n  type: OPEN_SUCCESS_POPUP,\n  payload: successData,\n});\n\nexport const closeSuccessPopupAction = (): ICloseSuccessPopupAction => ({\n  type: CLOSE_SUCCESS_POPUP,\n});\n\nexport const getOrderDetails: AppThunk = (ingredients: ReadonlyArray<string>) => (\n  dispatch,\n) => {\n  dispatch(getOrderDetailsAction());\n  const { getToken } = useToken();\n  getToken()\n    .then((token) => {\n      if (token) {\n        return sendOrderRequest({ ingredients }, token);\n      }\n      throw new Error(TOKEN_ERR_MSG);\n    })\n    .then((res) => {\n      dispatch(getOrderDetailsSuccessAction(res));\n    })\n    .catch((err) => {\n      dispatch(getOrderDetailsFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n","import {\n  TFeedIngredient, TOrderCard, TOrderUpdatedCard, TIngredient,\n} from '../services/types/data';\n\nexport const formatDate = (dateString: string) => {\n  const date = new Date(dateString);\n  const dateDay = new Date(dateString).getDate();\n  const today = new Date().getDate();\n  const dayName = dateDay === today\n    ? 'Сегодня' : dateDay === today - 1\n      ? 'Вчера' : dateDay >= today - 4\n        ? `${today - dateDay} дня назад` : date.toLocaleString('ru', { month: 'long', day: 'numeric' });\n  const time = date.toLocaleString('ru', { hour: 'numeric', minute: 'numeric' });\n  const timeOffset = -date.getTimezoneOffset() / 60;\n  return `${dayName}, ${time} i-GMT${timeOffset > 0 ? `+${timeOffset}` : timeOffset}`;\n};\n\nexport const getCardData = (card: TOrderCard, ingredients: ReadonlyArray<TIngredient>)\n: TOrderUpdatedCard => {\n  const updatedCard = { ...card, totalPrice: 0 };\n  const updatedIngredients: Array<TFeedIngredient> = [];\n\n  [...updatedCard.ingredients].forEach((ingredient) => {\n    const fullIngredientData = ingredients.find(({ _id }) => _id === ingredient);\n\n    if (fullIngredientData) {\n      updatedCard.totalPrice += fullIngredientData.type === 'bun'\n        ? fullIngredientData.price * 2 : fullIngredientData.price;\n      updatedIngredients.push({\n        _id: ingredient,\n        price: fullIngredientData.price,\n        name: fullIngredientData.name,\n        image_mobile: fullIngredientData.image_mobile,\n        type: fullIngredientData.type,\n      });\n    }\n  });\n\n  return {\n    ...updatedCard,\n    ingredients: [...updatedIngredients],\n    createdAt: formatDate(updatedCard.createdAt),\n  };\n};\n","import {\n  WS_FEED_CONNECTION_START,\n  WS_FEED_CONNECTION_STOP,\n  WS_FEED_CONNECTION_SUCCESS,\n  WS_FEED_CONNECTION_ERROR,\n  WS_FEED_CONNECTION_CLOSED,\n  WS_GET_FEED,\n  WS_USER_ORDERS_CONNECTION_START,\n  WS_USER_ORDERS_CONNECTION_STOP,\n  WS_USER_ORDERS_CONNECTION_SUCCESS,\n  WS_USER_ORDERS_CONNECTION_ERROR,\n  WS_USER_ORDERS_CONNECTION_CLOSED,\n  WS_GET_USER_ORDERS,\n  FEED_REQUEST,\n  FEED_SUCCESS,\n  FEED_FAILED,\n} from './action-types';\nimport { TOrderCard, TUpdatedFeed } from '../types/data';\nimport { AppThunk } from '../store';\nimport { getFeedRequest } from '../norma-api';\nimport { openErrorPopupAction } from './popups';\nimport { getCardData } from '../../utils/utils';\n\ninterface IWsFeedConnectionStartAction {\n  type: typeof WS_FEED_CONNECTION_START;\n}\n\ninterface IWsFeedConnectionStopAction {\n  type: typeof WS_FEED_CONNECTION_STOP;\n}\n\ninterface IWsFeedConnectionSuccessAction {\n  type: typeof WS_FEED_CONNECTION_SUCCESS;\n}\n\ninterface IWsFeedConnectionErrorAction {\n  type: typeof WS_FEED_CONNECTION_ERROR;\n  payload: Event,\n}\n\ninterface IWsFeedConnectionClosedAction {\n  type: typeof WS_FEED_CONNECTION_CLOSED;\n}\n\ninterface IWsGetFeedAction {\n  type: typeof WS_GET_FEED;\n  payload: TUpdatedFeed;\n}\n\ninterface IWsUserOrdersConnectionStartAction {\n  type: typeof WS_USER_ORDERS_CONNECTION_START;\n}\n\ninterface IWsUserOrdersConnectionStopAction {\n  type: typeof WS_USER_ORDERS_CONNECTION_STOP;\n}\n\ninterface IWsUserOrdersConnectionSuccessAction {\n  type: typeof WS_USER_ORDERS_CONNECTION_SUCCESS;\n}\n\ninterface IWsUserOrdersConnectionErrorAction {\n  type: typeof WS_USER_ORDERS_CONNECTION_ERROR;\n  payload: Event,\n}\n\ninterface IWsUserOrdersConnectionClosedAction {\n  type: typeof WS_USER_ORDERS_CONNECTION_CLOSED;\n}\n\ninterface IWsGetUserOrdersAction {\n  type: typeof WS_GET_USER_ORDERS;\n  payload: TUpdatedFeed;\n}\n\ninterface IFeedRequestAction {\n  type: typeof FEED_REQUEST;\n}\n\ninterface IFeedSuccessAction {\n  type: typeof FEED_SUCCESS;\n  payload: TUpdatedFeed;\n}\n\ninterface IFeedFailedAction {\n  type: typeof FEED_FAILED;\n}\n\nexport type TWsActions =\n  | IWsFeedConnectionStartAction\n  | IWsFeedConnectionStopAction\n  | IWsFeedConnectionSuccessAction\n  | IWsFeedConnectionErrorAction\n  | IWsFeedConnectionClosedAction\n  | IWsGetFeedAction\n  | IWsUserOrdersConnectionStartAction\n  | IWsUserOrdersConnectionStopAction\n  | IWsUserOrdersConnectionSuccessAction\n  | IWsUserOrdersConnectionErrorAction\n  | IWsUserOrdersConnectionClosedAction\n  | IWsGetUserOrdersAction\n  | IFeedRequestAction\n  | IFeedSuccessAction\n  | IFeedFailedAction;\n\nexport const wsFeedConnectionStartAction = (): IWsFeedConnectionStartAction => ({\n  type: WS_FEED_CONNECTION_START,\n});\n\nexport const wsFeedConnectionStopAction = (): IWsFeedConnectionStopAction => ({\n  type: WS_FEED_CONNECTION_STOP,\n});\n\nexport const wsFeedConnectionSuccessAction = (): IWsFeedConnectionSuccessAction => ({\n  type: WS_FEED_CONNECTION_SUCCESS,\n});\n\nexport const wsFeedConnectionErrorAction = (\n  error: Event,\n): IWsFeedConnectionErrorAction => ({\n  type: WS_FEED_CONNECTION_ERROR,\n  payload: error,\n});\n\nexport const wsFeedConnectionClosedAction = (): IWsFeedConnectionClosedAction => ({\n  type: WS_FEED_CONNECTION_CLOSED,\n});\n\nexport const wsGetFeedAction = (\n  feedData: TUpdatedFeed,\n): IWsGetFeedAction => ({\n  type: WS_GET_FEED,\n  payload: feedData,\n});\n\nexport const wsUserOrdersConnectionStartAction = (): IWsUserOrdersConnectionStartAction => ({\n  type: WS_USER_ORDERS_CONNECTION_START,\n});\n\nexport const wsUserOrdersConnectionStopAction = (): IWsUserOrdersConnectionStopAction => ({\n  type: WS_USER_ORDERS_CONNECTION_STOP,\n});\n\nexport const wsUserOrdersConnectionSuccessAction = (): IWsUserOrdersConnectionSuccessAction => ({\n  type: WS_USER_ORDERS_CONNECTION_SUCCESS,\n});\n\nexport const wsUserOrdersConnectionErrorAction = (\n  error: Event,\n): IWsUserOrdersConnectionErrorAction => ({\n  type: WS_USER_ORDERS_CONNECTION_ERROR,\n  payload: error,\n});\n\nexport const wsUserOrdersConnectionClosedAction = (): IWsUserOrdersConnectionClosedAction => ({\n  type: WS_USER_ORDERS_CONNECTION_CLOSED,\n});\n\nexport const wsUserOrdersGetMyFeedAction = (\n  feedData: TUpdatedFeed,\n): IWsGetUserOrdersAction => ({\n  type: WS_GET_USER_ORDERS,\n  payload: feedData,\n});\n\nexport const feedRequestAction = (): IFeedRequestAction => ({\n  type: FEED_REQUEST,\n});\n\nexport const feedSuccessAction = (feedData: TUpdatedFeed): IFeedSuccessAction => ({\n  type: FEED_SUCCESS,\n  payload: feedData,\n});\n\nexport const feedFailedAction = (): IFeedFailedAction => ({\n  type: FEED_FAILED,\n});\n\nexport const getFeed: AppThunk = () => (dispatch, getState) => {\n  getFeedRequest()\n    .then((data) => {\n      const { ingredients } = getState();\n      dispatch(feedSuccessAction({\n        ...data,\n        orders: data.orders.map((card: TOrderCard) => getCardData(card, ingredients.ingredients)),\n      }));\n    })\n    .catch((error) => dispatch(openErrorPopupAction(error)));\n};\n","import React, { useMemo, useEffect } from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './past-order-details.module.css';\nimport { useSelector, useDispatch } from '../../services/hooks';\nimport { TFeedIngredient } from '../../services/types/data';\nimport { FEED_ID_PATH, PROFILE_ORDERS_ID_PATH } from '../../utils/constants';\nimport { wsUserOrdersConnectionStartAction, wsUserOrdersConnectionStopAction } from '../../services/actions/ws-actions';\n\nconst PastOrderDetails = () => {\n  const { path } = useRouteMatch();\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n  const { ws, profile } = useSelector((state) => state);\n  const { accessToken } = profile;\n\n  const order = useMemo(\n    () => {\n      if (path === FEED_ID_PATH) {\n        return ws.feed?.orders.find((feedOrder) => feedOrder._id === id);\n      }\n      if (path === PROFILE_ORDERS_ID_PATH) {\n        return ws.userOrders?.orders.find((userOrder) => userOrder._id === id);\n      }\n      return null;\n    },\n    [ws, path],\n  );\n\n  useEffect(() => {\n    if (accessToken && path === PROFILE_ORDERS_ID_PATH) {\n      dispatch(wsUserOrdersConnectionStartAction());\n    } else {\n      return undefined;\n    }\n    return () => {\n      dispatch(wsUserOrdersConnectionStopAction());\n    };\n  }, [accessToken]);\n\n  const formatedIngredients = useMemo(\n    () => {\n      if (!order) {\n        return [];\n      }\n      const res: Array<TFeedIngredient & { qty: number }> = [];\n      order.ingredients.forEach((ingredient) => {\n        if (ingredient.type === 'bun' && res.length) {\n          return;\n        }\n        if (ingredient.type === 'bun') {\n          res.push({ ...ingredient, qty: 2 });\n          return;\n        }\n        const foundIngredientIndex = res\n          .findIndex((redIngredient) => (redIngredient._id === ingredient._id));\n\n        if (foundIngredientIndex !== -1) {\n          res[foundIngredientIndex].qty += 1;\n          return;\n        }\n        res.push({ ...ingredient, qty: 1 });\n      });\n      return res;\n    },\n    [order],\n  );\n\n  if (!order) {\n    return null;\n  }\n\n  const {\n    createdAt, name, number, status, totalPrice,\n  } = order;\n\n  return (\n    <div className={styles.container}>\n      <p className={`${styles.number} text text_type_digits-default`}>{`#${number}`}</p>\n      <h2 className=\"text text_type_main-medium mt-10 mb-3\">{name}</h2>\n      <p className={`${styles.status} text text_type_main-default`}>{status === 'done' ? 'Выполнен' : 'Готовится'}</p>\n      <p className=\"text text_type_main-medium mt-15 mb-6\">Состав:</p>\n      <ul className={`${styles.list} pr-6`}>\n        {formatedIngredients.map(({\n          _id, image_mobile, name: ingrName, price, qty,\n        }) => (\n          <li key={_id} className={styles.ingredient}>\n            <div className={styles['ingredient-border']}>\n              <img\n                className={styles['ingredient-image']}\n                src={image_mobile}\n                alt={ingrName}\n              />\n            </div>\n            <p className={`${styles['ingredient-name']} text text_type_main-default ml-4`}>\n              {ingrName}\n            </p>\n            <span className=\"text text_type_digits-default ml-4\">{`${qty} x ${price}`}</span>\n            <CurrencyIcon type=\"primary\" />\n          </li>\n        ))}\n      </ul>\n      <div className={`${styles.bottom} mt-10 mb-20`}>\n        <span className=\"text text_type_main-default text_color_inactive\">{createdAt}</span>\n        <span className={`${styles['total-price']} text text_type_digits-default mr-2`}>{totalPrice}</span>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n    </div>\n  );\n};\n\nexport default PastOrderDetails;\n","import React from 'react';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './success-popup.module.css';\nimport { DEFAULT_SUCCESS_MSG } from '../../utils/constants';\nimport InfoTooltip from '../info-tooltip/info-tooltip';\nimport { useSelector } from '../../services/hooks';\n\nconst SuccessPopup = () => {\n  const successPopupContent = useSelector((state) => state.popups.successPopupContent);\n\n  return (\n    <InfoTooltip message={successPopupContent ? successPopupContent.message : DEFAULT_SUCCESS_MSG}>\n      <div className={styles.success}>\n        <CheckMarkIcon type=\"success\" />\n      </div>\n    </InfoTooltip>\n  );\n};\n\nexport default SuccessPopup;\n","import React, { useCallback, useMemo } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport Modal from '../modal/modal';\nimport OrderDetails from '../order-details/order-details';\nimport IngredientDetails from '../ingredient-details/ingredient-details';\nimport ErrorPopup from '../error-popup/error-popup';\nimport PastOrderDetails from '../past-order-details/past-order-details';\nimport {\n  closeOrderDetailsAction, closeErrorPopupAction, closeSuccessPopupAction,\n} from '../../services/actions/popups';\nimport SuccessPopup from '../success-popup/success-popup';\nimport { useDispatch, useSelector, useLocation } from '../../services/hooks';\nimport { FEED_ID_PATH, INGREDIENTS_ID_PATH, PROFILE_ORDERS_ID_PATH } from '../../utils/constants';\n\nconst Popups = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const background = location.state ? location.state.background : null;\n  const {\n    isOrderDetailsOpen, isErrorPopupOpen, isSuccessPopupOpen,\n  } = useSelector((state) => state.popups);\n\n  const handleCloseRoutePopup = useCallback(\n    () => {\n      history.replace({ ...background, state: null });\n    },\n    [history, background],\n  );\n\n  const handleClosePopup = useCallback(\n    () => {\n      dispatch(closeOrderDetailsAction());\n      dispatch(closeErrorPopupAction());\n      dispatch(closeSuccessPopupAction());\n    },\n    [],\n  );\n\n  const isPopupOpen = useMemo(\n    () => isOrderDetailsOpen || isErrorPopupOpen || isSuccessPopupOpen,\n    [isOrderDetailsOpen, isErrorPopupOpen, isSuccessPopupOpen],\n  );\n\n  if (background) {\n    return (\n      <>\n        <Route path={INGREDIENTS_ID_PATH}>\n          <Modal title=\"Детали ингредиента\" handleClosePopup={handleCloseRoutePopup}>\n            <IngredientDetails />\n          </Modal>\n        </Route>\n        <Route path={FEED_ID_PATH} exact>\n          <Modal handleClosePopup={handleCloseRoutePopup}>\n            <PastOrderDetails />\n          </Modal>\n        </Route>\n        <Route path={PROFILE_ORDERS_ID_PATH} exact>\n          <Modal handleClosePopup={handleCloseRoutePopup}>\n            <PastOrderDetails />\n          </Modal>\n        </Route>\n      </>\n    );\n  }\n\n  return isPopupOpen\n    ? (\n      <Modal handleClosePopup={handleClosePopup}>\n        {isOrderDetailsOpen && <OrderDetails />}\n        {isErrorPopupOpen && <ErrorPopup />}\n        {isSuccessPopupOpen && <SuccessPopup />}\n      </Modal>\n    )\n    : null;\n};\n\nexport default Popups;\n","import { getIngredientsRequest } from '../norma-api';\nimport { openErrorPopupAction } from './popups';\nimport {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  INCREASE_INGREDIENT,\n  DECREASE_INGREDIENT,\n  RESET_INGREDIENTS_COUNT,\n} from './action-types';\nimport { TIngredient, TIngredientId } from '../types/data';\nimport { AppThunk } from '../store';\n\nexport interface IGetIngredientsAction {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccessAction {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly payload: ReadonlyArray<TIngredient>;\n}\n\nexport interface IGetIngredientsFailedAction {\n  readonly type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport interface IIncreaseIngredientAction {\n  readonly type: typeof INCREASE_INGREDIENT;\n  readonly payload: TIngredientId;\n}\n\nexport interface IDecreaseIngredientAction {\n  readonly type: typeof DECREASE_INGREDIENT;\n  readonly payload: TIngredientId;\n}\n\nexport interface IResetIngredientCountAction {\n  readonly type: typeof RESET_INGREDIENTS_COUNT;\n}\n\nexport type TIngredientsActions =\n  | IGetIngredientsAction\n  | IGetIngredientsSuccessAction\n  | IGetIngredientsFailedAction\n  | IIncreaseIngredientAction\n  | IDecreaseIngredientAction\n  | IResetIngredientCountAction;\n\nexport const getIngredientsAction = (): IGetIngredientsAction => ({\n  type: GET_INGREDIENTS_REQUEST,\n});\n\nexport const getIngredientsSuccessAction = (\n  ingredients: ReadonlyArray<TIngredient>,\n): IGetIngredientsSuccessAction => ({\n  type: GET_INGREDIENTS_SUCCESS,\n  payload: ingredients,\n});\n\nexport const getIngredientsFailedAction = (): IGetIngredientsFailedAction => ({\n  type: GET_INGREDIENTS_FAILED,\n});\n\nexport const increaseIngredientAction = (ingredient: TIngredientId): IIncreaseIngredientAction => ({\n  type: INCREASE_INGREDIENT,\n  payload: ingredient,\n});\n\nexport const decreaseIngredientAction = (ingredient: TIngredientId): IDecreaseIngredientAction => ({\n  type: DECREASE_INGREDIENT,\n  payload: ingredient,\n});\n\nexport const resetIngredientCountAction = (): IResetIngredientCountAction => ({\n  type: RESET_INGREDIENTS_COUNT,\n});\n\nexport const getIngredients: AppThunk = () => (dispatch) => {\n  dispatch(getIngredientsAction());\n  getIngredientsRequest()\n    .then((res) => {\n      dispatch(getIngredientsSuccessAction(res.data));\n    })\n    .catch((err) => {\n      dispatch(getIngredientsFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n","import { getUserRequest, editUserRequest, logoutRequest } from '../norma-api';\nimport { openErrorPopupAction } from './popups';\nimport { TOKEN_ERR_MSG } from '../../utils/constants';\nimport {\n  UPDATE_TOKEN,\n  SET_USER,\n  CLEAR_USER,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  EDIT_USER_REQUEST,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAILED,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { TUser } from '../types/data';\nimport { AppThunk } from '../store';\nimport { TProfileForm, TCallback, TToken } from '../types';\n\nexport interface IUpdateTokenAction {\n  readonly type: typeof UPDATE_TOKEN;\n  readonly payload: TToken;\n}\n\nexport interface ISetUserAction {\n  readonly type: typeof SET_USER;\n  readonly payload: TUser;\n}\n\nexport interface IClearUserAction {\n  readonly type: typeof CLEAR_USER;\n}\n\nexport interface IGetUserAction {\n  readonly type: typeof GET_USER_REQUEST;\n}\n\nexport interface IGetUserSuccessAction {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly payload: TUser;\n}\n\nexport interface IGetUserFailedAction {\n  readonly type: typeof GET_USER_FAILED;\n}\n\nexport interface IEditUserAction {\n  readonly type: typeof EDIT_USER_REQUEST;\n}\n\nexport interface IEditUserSuccessAction {\n  readonly type: typeof EDIT_USER_SUCCESS;\n  readonly payload: TUser;\n}\n\nexport interface IEditUserFailedAction {\n  readonly type: typeof EDIT_USER_FAILED;\n}\n\nexport interface ILogoutAction {\n  readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutSuccessAction {\n  readonly type: typeof LOGOUT_SUCCESS;\n}\n\nexport interface ILogoutFailedAction {\n  readonly type: typeof LOGOUT_FAILED;\n}\n\nexport type TProfileActions =\n  | IUpdateTokenAction\n  | ISetUserAction\n  | IClearUserAction\n  | IGetUserAction\n  | IGetUserSuccessAction\n  | IGetUserFailedAction\n  | IEditUserAction\n  | IEditUserSuccessAction\n  | IEditUserFailedAction\n  | ILogoutAction\n  | ILogoutSuccessAction\n  | ILogoutFailedAction;\n\nexport const updateTokenAction = (token: TToken): IUpdateTokenAction => ({\n  type: UPDATE_TOKEN,\n  payload: token,\n});\n\nexport const setUserAction = (user: TUser): ISetUserAction => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const clearUserAction = (): IClearUserAction => ({\n  type: CLEAR_USER,\n});\n\nexport const getUserAction = (): IGetUserAction => ({\n  type: GET_USER_REQUEST,\n});\n\nexport const getUserSuccessAction = (user: TUser): IGetUserSuccessAction => ({\n  type: GET_USER_SUCCESS,\n  payload: user,\n});\n\nexport const getUserFailedAction = (): IGetUserFailedAction => ({\n  type: GET_USER_FAILED,\n});\n\nexport const editUserAction = (): IEditUserAction => ({\n  type: EDIT_USER_REQUEST,\n});\n\nexport const editUserSuccessAction = (user: TUser): IEditUserSuccessAction => ({\n  type: EDIT_USER_SUCCESS,\n  payload: user,\n});\n\nexport const editUserFailedAction = (): IEditUserFailedAction => ({\n  type: EDIT_USER_FAILED,\n});\n\nexport const logoutAction = (): ILogoutAction => ({\n  type: LOGOUT_REQUEST,\n});\n\nexport const logoutSuccessAction = (): ILogoutSuccessAction => ({\n  type: LOGOUT_SUCCESS,\n});\n\nexport const logoutFailedAction = (): ILogoutFailedAction => ({\n  type: LOGOUT_FAILED,\n});\n\nexport const getUser: AppThunk = () => (dispatch) => {\n  dispatch(getUserAction());\n  const { getToken } = useToken();\n  return getToken()\n    .then((token) => {\n      if (token) {\n        dispatch(updateTokenAction(token));\n        return getUserRequest(token);\n      }\n      throw new Error(TOKEN_ERR_MSG);\n    })\n    .then(({ user }) => {\n      dispatch(getUserSuccessAction(user));\n      return user;\n    })\n    .catch((err) => {\n      dispatch(getUserFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n\nexport const editUser: AppThunk = (form: TProfileForm) => (dispatch) => {\n  dispatch(editUserAction());\n  const { getToken } = useToken();\n  getToken()\n    .then((token) => {\n      if (token) {\n        return editUserRequest(form, token);\n      }\n      throw new Error(TOKEN_ERR_MSG);\n    })\n    .then(({ user }) => {\n      dispatch(editUserSuccessAction(user));\n    })\n    .catch((err) => {\n      dispatch(editUserFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n\nexport const signOut: AppThunk = (cb: TCallback) => (dispatch) => {\n  dispatch(logoutAction());\n  const { refreshToken, clearAllTokens } = useToken();\n  logoutRequest({ token: refreshToken })\n    .then(() => {\n      clearAllTokens();\n      dispatch(clearUserAction());\n      dispatch(logoutSuccessAction());\n      cb();\n    })\n    .catch((err) => {\n      dispatch(logoutFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDrag } from 'react-dnd';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './ingredient.module.css';\nimport { TIngredient } from '../../services/types/data';\nimport { useLocation } from '../../services/hooks';\nimport { INGREDIENTS_PATH } from '../../utils/constants';\n\nconst Ingredient: FC<{ card: TIngredient }> = ({ card }) => {\n  const location = useLocation();\n  const [, dragRef] = useDrag({\n    type: 'ingredients',\n    item: card,\n  });\n\n  return (\n    <li ref={dragRef}>\n      <Link className={styles.card} to={{ pathname: `${INGREDIENTS_PATH}/${card._id}`, state: { background: location, id: card._id } }}>\n        <img src={card.image} alt={card.name} className={styles.image} />\n        <p className={`${styles.price} text text_type_digits-default mt-2 mb-2`}>\n          <span className=\"mr-2\">{card.price}</span>\n          <CurrencyIcon type=\"primary\" />\n        </p>\n        <p className={`${styles.name} text text_type_main-default`}>{card.name}</p>\n        {\n          card.qty\n            ? (\n              <div className=\"styles.counter styles.counter_active\">\n                <Counter count={card.qty} size=\"default\" />\n              </div>\n            )\n            : null\n        }\n      </Link>\n    </li>\n  );\n};\n\nexport default Ingredient;\n","import React, { forwardRef } from 'react';\nimport Ingredient from '../ingredient/ingredient';\nimport styles from './ingredients-category.module.css';\nimport { TIngredient } from '../../services/types/data';\n\ntype TIngredientsCategory = {\n  cards: ReadonlyArray<TIngredient>;\n  title: string;\n};\n\nconst IngredientsCategory = forwardRef<HTMLDivElement, TIngredientsCategory>(\n  ({ cards, title }, ref) => (\n    <div className={styles.container}>\n      <h2 className=\"text text_type_main-medium\" ref={ref}>{title}</h2>\n      {\n        cards && (\n          <ul className={`${styles.list} mt-6 mb-10 ml-4 mr-4`}>\n            {cards.map((card) => <Ingredient key={card._id} card={card} />)}\n          </ul>\n        )\n      }\n    </div>\n  ),\n);\n\nexport default IngredientsCategory;\n","import React, {\n  useState, useRef, useEffect, useMemo,\n} from 'react';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './burger-ingredients.module.css';\nimport IngredientsCategory from '../ingredients-category/ingredients-category';\nimport { useSelector } from '../../services/hooks';\nimport { TIngredient } from '../../services/types/data';\n\nconst BurgerIngredients = () => {\n  const { ingredients } = useSelector((state) => state.ingredients);\n\n  function filterIngredients(data: ReadonlyArray<TIngredient>) {\n    const res: { [name: string]: TIngredient[] } = {};\n    data.forEach((item) => {\n      if (res[item.type]) {\n        res[item.type].push(item);\n      } else {\n        res[item.type] = [item];\n      }\n    });\n    return res;\n  }\n\n  const { bun, sauce, main } = useMemo(\n    () => filterIngredients(ingredients),\n    [ingredients],\n  );\n  const [current, setCurrent] = useState('bun');\n\n  const bunRef = useRef<HTMLDivElement>(null);\n  const sauceRef = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const handleScroll = () => {\n    window.requestAnimationFrame(() => {\n      const boundingRectY = [\n        {\n          type: 'bun',\n          top: bunRef.current?.getBoundingClientRect().top,\n        },\n        {\n          type: 'sauce',\n          top: sauceRef.current?.getBoundingClientRect().top,\n        },\n        {\n          type: 'main',\n          top: mainRef.current?.getBoundingClientRect().top,\n        },\n      ];\n\n      const closestCategory = boundingRectY.find((category, index, array) => (\n        Number(category.top) >= 0 || index === array.length - 1\n      ));\n      if (closestCategory) setCurrent(closestCategory.type);\n    });\n  };\n\n  useEffect(() => {\n    contentRef.current?.addEventListener('scroll', handleScroll);\n    return () => contentRef.current?.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleTabClick = (value: string) => {\n    let currentCategory = null;\n    setCurrent(value);\n    switch (value) {\n      case 'bun':\n        currentCategory = bunRef.current;\n        break;\n      case 'sauce':\n        currentCategory = sauceRef.current;\n        break;\n      case 'main':\n        currentCategory = mainRef.current;\n        break;\n      default:\n        currentCategory = null;\n    }\n\n    return currentCategory && currentCategory.scrollIntoView();\n  };\n\n  return (\n    <section className={`${styles.container} pt-10`}>\n      <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\n      <div className={`${styles.tab} mt-5 mb-10`}>\n        <Tab value=\"bun\" active={current === 'bun'} onClick={handleTabClick}>\n          Булки\n        </Tab>\n        <Tab value=\"sauce\" active={current === 'sauce'} onClick={handleTabClick}>\n          Соусы\n        </Tab>\n        <Tab value=\"main\" active={current === 'main'} onClick={handleTabClick}>\n          Начинки\n        </Tab>\n      </div>\n      <div className={styles.content} ref={contentRef}>\n        <IngredientsCategory title=\"Булки\" cards={bun || []} ref={bunRef} />\n        <IngredientsCategory title=\"Соусы\" cards={sauce || []} ref={sauceRef} />\n        <IngredientsCategory title=\"Начинки\" cards={main || []} ref={mainRef} />\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerIngredients;\n","import React, { FC } from 'react';\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './bun-constructor-element.module.css';\nimport { TConstructorElement } from '../../services/types/ui-components';\n\ntype TBunConstructorElement = Omit<TConstructorElement, 'isLocked' | 'handleClose'> & { className?: string | null };\n\nconst BunConstructorElement: FC<TBunConstructorElement> = ({\n  className,\n  type,\n  text,\n  price,\n  thumbnail,\n}) => (\n  <li className={`${className} ${styles['list-item']}`}>\n    <ConstructorElement\n      type={type}\n      isLocked\n      text={text + (type === 'top' ? ' (верх)' : ' (низ)')}\n      price={price}\n      thumbnail={thumbnail}\n    />\n  </li>\n);\n\nBunConstructorElement.defaultProps = {\n  className: null,\n};\n\nexport default BunConstructorElement;\n","/* eslint-disable no-unused-vars */\nimport React, { useRef, FC } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './main-constructor-element.module.css';\nimport {\n  removeIngredientAction,\n  updateConstructorFromDraggingContainerAction,\n  copyConstructorToDraggingContainerAction,\n  replaceItemsInDraggingContainerAction,\n  resetDraggingContainerAction,\n} from '../../services/actions/burger-constructor';\nimport { decreaseIngredientAction } from '../../services/actions/burger-ingredients';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { TConstructorElement } from '../../services/types/ui-components';\nimport { TMainIngredient } from '../../services/types/data';\n\ntype TMainConstructorElement = Pick<TConstructorElement, 'text' | 'price' | 'thumbnail'>\n& Pick<TMainIngredient, '_cartId' | '_id'>;\n\nconst MainConstructorElement: FC<TMainConstructorElement> = ({\n  text, price, thumbnail, _cartId, _id,\n}) => {\n  const { draggingMainIngredients } = useSelector((state) => state.burgerConstructor);\n  const ref = useRef<HTMLLIElement>(null);\n  const dispatch = useDispatch();\n\n  const [{ isDragging }, drag] = useDrag({\n    type: 'constructor',\n    item: () => {\n      dispatch(copyConstructorToDraggingContainerAction());\n      return { _cartId };\n    },\n    collect: (monitor) => ({ isDragging: monitor.isDragging() }),\n    end(item, monitor) {\n      const didDrop = monitor.didDrop();\n      if (didDrop) {\n        dispatch(updateConstructorFromDraggingContainerAction());\n      }\n      dispatch(resetDraggingContainerAction());\n    },\n  });\n\n  const [, drop] = useDrop({\n    accept: 'constructor',\n    hover(item: { _cartId: string }, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      if (_cartId === item._cartId) {\n        return;\n      }\n\n      const index = draggingMainIngredients.findIndex((ingred) => ingred._cartId === item._cartId);\n      const hoverIndex = draggingMainIngredients.findIndex((ingred) => ingred._cartId === _cartId);\n\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const hoverBottomBound = (hoverBoundingRect.bottom - hoverBoundingRect.top) * 0.2;\n      const hoverTopBound = (hoverBoundingRect.bottom - hoverBoundingRect.top) * 0.8;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset ? clientOffset.y - hoverBoundingRect.top : 0;\n\n      if (\n        (index < hoverIndex && hoverClientY >= hoverBottomBound)\n        || (index > hoverIndex && hoverClientY <= hoverTopBound)\n      ) {\n        dispatch(replaceItemsInDraggingContainerAction({\n          initialIndex: index,\n          targetIndex: hoverIndex,\n        }));\n      }\n    },\n  });\n\n  const handleDeleteElement = () => {\n    dispatch(removeIngredientAction({ _cartId, price }));\n    dispatch(decreaseIngredientAction({ _id }));\n  };\n  drag(drop(ref));\n\n  return (\n    <li className={`${styles['list-item']} ${isDragging && styles['list-item_dragging']} pl-8`} ref={ref}>\n      <span className={`${styles.icon} mr-2`}><DragIcon type=\"primary\" /></span>\n      <ConstructorElement\n        isLocked={false}\n        text={text}\n        price={price}\n        thumbnail={thumbnail}\n        handleClose={handleDeleteElement}\n      />\n    </li>\n  );\n};\n\nexport default MainConstructorElement;\n","import uniqid from 'uniqid';\nimport {\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  REPLACE_BUN_IN_CONSTRUCTOR,\n  UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n  COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n  REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  RESET_DRAGGING_CONTAINER,\n  RESET_CONSTRUCTOR,\n} from './action-types';\nimport {\n  TIngredient, TMainIngredient, TRemovedIngredient, TReplacingItems,\n} from '../types/data';\n\nexport interface IAddIngredientAction {\n  readonly type: typeof ADD_INGREDIENT_TO_CONSTRUCTOR;\n  readonly payload: TMainIngredient;\n}\n\nexport interface IRemoveIngredientAction {\n  readonly type: typeof REMOVE_INGREDIENT_FROM_CONSTRUCTOR;\n  readonly payload: TRemovedIngredient;\n}\n\nexport interface IReplaceBunAction {\n  readonly type: typeof REPLACE_BUN_IN_CONSTRUCTOR;\n  readonly payload: TIngredient;\n}\n\nexport interface IUpdateConstructorFromDraggingContainerAction {\n  readonly type: typeof UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER;\n}\n\nexport interface ICopyConstructorToDraggingContainerAction {\n  readonly type: typeof COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER;\n}\n\nexport interface IReplaceItemsInDraggingContainerAction {\n  readonly type: typeof REPLACE_ITEMS_IN_DRAGGING_CONTAINER;\n  readonly payload: TReplacingItems;\n}\n\nexport interface IResetDraggingContainerAction {\n  readonly type: typeof RESET_DRAGGING_CONTAINER;\n}\n\nexport interface IResetConstructorAction {\n  readonly type: typeof RESET_CONSTRUCTOR;\n}\n\nexport type TConstructorActions =\n  | IAddIngredientAction\n  | IRemoveIngredientAction\n  | IReplaceBunAction\n  | IUpdateConstructorFromDraggingContainerAction\n  | ICopyConstructorToDraggingContainerAction\n  | IReplaceItemsInDraggingContainerAction\n  | IResetDraggingContainerAction\n  | IResetConstructorAction;\n\nexport const addIngredientAction = (\n  ingredient: TIngredient,\n): IAddIngredientAction => ({\n  type: ADD_INGREDIENT_TO_CONSTRUCTOR,\n  payload: { ...ingredient, _cartId: uniqid() },\n});\n\nexport const removeIngredientAction = (\n  ingredient: TRemovedIngredient,\n): IRemoveIngredientAction => ({\n  type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  payload: ingredient,\n});\n\nexport const replaceBunAction = (bun: TIngredient): IReplaceBunAction => ({\n  type: REPLACE_BUN_IN_CONSTRUCTOR,\n  payload: bun,\n});\n\nexport const updateConstructorFromDraggingContainerAction = ():\nIUpdateConstructorFromDraggingContainerAction => ({\n  type: UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n});\n\nexport const copyConstructorToDraggingContainerAction = ():\nICopyConstructorToDraggingContainerAction => ({\n  type: COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n});\n\nexport const replaceItemsInDraggingContainerAction = (\n  replacingItems: TReplacingItems,\n): IReplaceItemsInDraggingContainerAction => ({\n  type: REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  payload: replacingItems,\n});\n\nexport const resetDraggingContainerAction = (): IResetDraggingContainerAction => ({\n  type: RESET_DRAGGING_CONTAINER,\n});\n\nexport const resetConstructorAction = (): IResetConstructorAction => ({\n  type: RESET_CONSTRUCTOR,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport Loader from '../loader/loader';\n\nconst ModalLoader = () => ReactDOM.createPortal(\n  <ModalOverlay isLockApp>\n    <Loader />\n  </ModalOverlay>,\n  document.getElementById('react-modals')!,\n);\n\nexport default ModalLoader;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDrop } from 'react-dnd';\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport BunConstructorElement from '../bun-constructor-element/bun-constructor-element';\nimport MainConstructorElement from '../main-constructor-element/main-constructor-element';\nimport styles from './burger-constructor.module.css';\nimport {\n  addIngredientAction, replaceBunAction, resetConstructorAction,\n} from '../../services/actions/burger-constructor';\nimport { increaseIngredientAction, decreaseIngredientAction, resetIngredientCountAction } from '../../services/actions/burger-ingredients';\nimport { getOrderDetails, openErrorPopupAction } from '../../services/actions/popups';\nimport {\n  BUN_REQUIRED_ERR_MSG,\n  CONSTRUCTOR_DEFAULT_TEXT,\n  CONSTRUCTOR_BUTTON_TEXT,\n  CONSTRUCTOR_LOADING_BUTTON_TEXT,\n  LOGIN_PATH,\n} from '../../utils/constants';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport useToken from '../../services/token';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { TIngredient } from '../../services/types/data';\n\nconst BurgerConstructor = () => {\n  const { refreshToken } = useToken();\n  const history = useHistory();\n  const {\n    mainIngredients, draggingMainIngredients, bun, totalPrice,\n  } = useSelector((state) => state.burgerConstructor);\n  const { orderRequest, orderDetailsContent } = useSelector((store) => store.popups);\n  const dispatch = useDispatch();\n  const [{ isOver }, dropTarget] = useDrop({\n    accept: 'ingredients',\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    drop(card: TIngredient) {\n      if (card.type === 'bun') {\n        onDropBunHandler(card);\n      } else {\n        onDropMainHandler(card);\n      }\n    },\n  });\n\n  const onDropBunHandler = (item: TIngredient) => {\n    if (bun && item._id === bun._id) {\n      return null;\n    }\n    if (bun) {\n      dispatch(decreaseIngredientAction(bun));\n    }\n    dispatch(replaceBunAction(item));\n    dispatch(increaseIngredientAction({ _id: item._id }));\n    return item;\n  };\n\n  const onDropMainHandler = (item: TIngredient) => {\n    if (!bun) {\n      dispatch(openErrorPopupAction(new Error(BUN_REQUIRED_ERR_MSG)));\n      return null;\n    }\n    dispatch(increaseIngredientAction({ _id: item._id }));\n    dispatch(addIngredientAction(item));\n    return item;\n  };\n\n  useEffect(() => {\n    if (!orderDetailsContent) {\n      return;\n    }\n    dispatch(resetConstructorAction());\n    dispatch(resetIngredientCountAction());\n  }, [orderDetailsContent]);\n\n  const clickOrderBtn = () => {\n    if (refreshToken && bun) {\n      return dispatch(getOrderDetails([bun, ...mainIngredients].map((ingr) => ingr._id)));\n    }\n    return history.push(LOGIN_PATH);\n  };\n\n  const targetList = draggingMainIngredients.length ? draggingMainIngredients : mainIngredients;\n\n  return (\n    <section\n      className={\n        `${styles.constructor}\n        ${isOver && styles.constructor_active}\n        ${!bun && styles.constructor_epmty}\n        mt-10 pt-15 pb-15 pl-4 pr-4`\n      }\n      ref={dropTarget}\n    >\n      {\n        bun\n          ? (\n            <>\n              <ul className={`${styles['order-list']}`}>\n                <BunConstructorElement\n                  className=\"pl-8\"\n                  type=\"top\"\n                  text={bun.name}\n                  price={bun.price}\n                  thumbnail={bun.image_mobile}\n                />\n                {\n                  mainIngredients.length ? (\n                    <ul className={`${styles['order-list']} ${styles['order-list-main']} pr-2`}>\n                      {targetList.map((card) => (\n                        <MainConstructorElement\n                          key={card._cartId}\n                          _id={card._id}\n                          _cartId={card._cartId}\n                          text={card.name}\n                          price={card.price}\n                          thumbnail={card.image_mobile}\n                        />\n                      ))}\n                    </ul>\n                  ) : null\n                }\n                <BunConstructorElement\n                  className=\"pl-8\"\n                  type=\"bottom\"\n                  text={bun.name}\n                  price={bun.price}\n                  thumbnail={bun.image_mobile}\n                />\n              </ul>\n              <div className={`${styles['info-container']} mt-10 mr-4`}>\n                <p className={`${styles.price} text text_type_digits-medium mr-10`}>\n                  <span className=\"mr-2\">{totalPrice}</span>\n                  <CurrencyIcon type=\"primary\" />\n                </p>\n                <Button type=\"primary\" size=\"large\" onClick={clickOrderBtn}>\n                  {orderRequest ? CONSTRUCTOR_LOADING_BUTTON_TEXT : CONSTRUCTOR_BUTTON_TEXT}\n                </Button>\n              </div>\n              {orderRequest && <ModalLoader />}\n            </>\n          )\n          : (\n            <p className={`${styles['background-text']} text text_type_main-medium`}>{CONSTRUCTOR_DEFAULT_TEXT}</p>\n          )\n      }\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","import React from 'react';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\n\nconst Home = () => (\n  <>\n    <BurgerIngredients />\n    <BurgerConstructor />\n  </>\n);\n\nexport default Home;\n","import React, {\n  useState, useRef, useEffect, FC,\n} from 'react';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TInput, TIcons } from '../../services/types/ui-components';\n\nconst PasswordPlaceholderInput: FC<TInput> = ({\n  type, placeholder, value, name, size, onChange,\n}) => {\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [passwordIcon, setPasswordIcon] = useState<TIcons>('ShowIcon');\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    if (passwordRef && passwordRef.current) {\n      passwordRef.current.minLength = 6;\n    }\n  }, [passwordRef]);\n\n  function onIconClick() {\n    const icon = passwordIcon === 'ShowIcon' ? 'HideIcon' : 'ShowIcon';\n    setPasswordIcon(icon);\n    if (passwordRef && passwordRef.current) {\n      passwordRef.current.type = passwordIcon === 'ShowIcon' ? 'text' : 'password';\n      passwordRef.current.focus();\n    }\n  }\n\n  return (\n    <Input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      name={name}\n      error={!isValid}\n      icon={passwordIcon}\n      size={size}\n      onChange={(e) => {\n        onChange(e);\n        setIsValid(e.currentTarget.validity.valid);\n      }}\n      onIconClick={() => onIconClick()}\n      ref={passwordRef}\n      errorText=\"Некорректный пароль\"\n    />\n  );\n};\n\nexport default PasswordPlaceholderInput;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './credentials-form.module.css';\nimport PasswordPlaceholderInput from '../password-placeholder-input/password-placeholder-input';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport { TCredentialsForm } from '../../services/types';\n\nconst CredentialsForm: FC<TCredentialsForm> = ({\n  title, inputs, buttonText, navs, onSubmit, isLoading,\n}) => (\n  <section className={styles.container}>\n    <h1 className={`${styles.title} text text_type_main-medium`}>{title}</h1>\n    <form className={`${styles.form} mt-6 mb-20`} onSubmit={onSubmit}>\n      {inputs.map(({\n        type, placeholder, value, name, icon, size, onChange, onIconClick, ref,\n      }) => (name === 'password'\n        ? (\n          <PasswordPlaceholderInput\n            key={name}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            size={size}\n            onChange={onChange}\n          />\n        )\n        : (\n          <Input\n            key={name}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            icon={icon}\n            size={size}\n            onChange={onChange}\n            onIconClick={onIconClick}\n            ref={ref}\n          />\n        )))}\n      <Button type=\"primary\" size=\"medium\">{buttonText}</Button>\n    </form>\n    {navs.map(({ captionText, linkTo, linkText }) => (\n      <p key={linkText} className={`${styles.nav} text text_type_main-default text_color_inactive`}>\n        <span>{captionText}</span>\n        <Link className={`${styles.link} ml-2`} to={linkTo}>{linkText}</Link>\n      </p>\n    ))}\n    {isLoading && <ModalLoader />}\n  </section>\n);\n\nexport default CredentialsForm;\n","import { loginRequest } from '../norma-api';\nimport { openErrorPopupAction } from './popups';\nimport { setUserAction, updateTokenAction } from './profile';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { AppThunk } from '../store';\nimport { TLoginForm, TCallback } from '../types';\n\nexport interface ILoginAction {\n  readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginSuccessAction {\n  readonly type: typeof LOGIN_SUCCESS;\n}\n\nexport interface ILoginFailedAction {\n  readonly type: typeof LOGIN_FAILED;\n}\n\nexport type TLoginActions =\n  | ILoginAction\n  | ILoginSuccessAction\n  | ILoginFailedAction;\n\nexport const loginAction = (): ILoginAction => ({\n  type: LOGIN_REQUEST,\n});\n\nexport const loginSuccessAction = (): ILoginSuccessAction => ({\n  type: LOGIN_SUCCESS,\n});\n\nexport const loginFailedAction = (): ILoginFailedAction => ({\n  type: LOGIN_FAILED,\n});\n\nexport const signIn: AppThunk = (form: TLoginForm, cb: TCallback) => (dispatch) => {\n  dispatch(loginAction());\n  const { addTokens } = useToken();\n  loginRequest(form)\n    .then((data) => {\n      const { user, accessToken, refreshToken } = data;\n      addTokens({ accessToken, refreshToken });\n      dispatch(setUserAction(user));\n      dispatch(updateTokenAction(accessToken.split('Bearer ')[1]));\n      dispatch(loginSuccessAction());\n      cb();\n    })\n    .catch((err) => {\n      dispatch(loginFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { signIn } from '../services/actions/login';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\nimport { FORGOT_PASSWORD_PATH, MAIN_PATH, REGISTER_PATH } from '../utils/constants';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { loginRequest } = useSelector((state) => state.login);\n  const history = useHistory();\n  const { state } = useLocation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(signIn({ email, password }, () => history.replace(state?.from || MAIN_PATH)));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Вход',\n    inputs: [\n      {\n        type: 'email',\n        placeholder: 'Email',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n      {\n        type: 'password',\n        placeholder: 'Пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n    ],\n    buttonText: 'Войти',\n    navs: [\n      { captionText: 'Вы — новый пользователь?', linkTo: REGISTER_PATH, linkText: 'Зарегистрироваться' },\n      { captionText: 'Забыли пароль?', linkTo: FORGOT_PASSWORD_PATH, linkText: 'Восстановить пароль' },\n    ],\n    onSubmit,\n    isLoading: loginRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default Login;\n","import { registerRequest } from '../norma-api';\nimport { openErrorPopupAction } from './popups';\nimport { setUserAction, updateTokenAction } from './profile';\nimport {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { AppThunk } from '../store';\nimport { TRegisterForm, TCallback } from '../types';\n\nexport interface IRegisterAction {\n  readonly type: typeof REGISTER_REQUEST;\n}\n\nexport interface IRegisterSuccessAction {\n  readonly type: typeof REGISTER_SUCCESS;\n}\n\nexport interface IRegisterFailedAction {\n  readonly type: typeof REGISTER_FAILED;\n}\n\nexport type TRegisterActions =\n  | IRegisterAction\n  | IRegisterSuccessAction\n  | IRegisterFailedAction;\n\nexport const registerAction = (): IRegisterAction => ({\n  type: REGISTER_REQUEST,\n});\n\nexport const registerSuccessAction = (): IRegisterSuccessAction => ({\n  type: REGISTER_SUCCESS,\n});\n\nexport const registerFailedAction = (): IRegisterFailedAction => ({\n  type: REGISTER_FAILED,\n});\n\nexport const signUp: AppThunk = (form: TRegisterForm, cb: TCallback) => (dispatch) => {\n  dispatch(registerAction());\n  const { addTokens } = useToken();\n  registerRequest(form)\n    .then((data) => {\n      const { user, accessToken, refreshToken } = data;\n      addTokens({ accessToken, refreshToken });\n      dispatch(setUserAction(user));\n      dispatch(updateTokenAction(accessToken.split('Bearer ')[1]));\n      dispatch(registerSuccessAction());\n      cb();\n    })\n    .catch((err) => {\n      dispatch(registerFailedAction());\n      dispatch(openErrorPopupAction(err));\n    });\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { signUp } from '../services/actions/register';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\nimport { LOGIN_PATH, MAIN_PATH } from '../utils/constants';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { registerRequest } = useSelector((state) => state.register);\n  const history = useHistory();\n  const { state } = useLocation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(signUp({ name, email, password }, () => history.replace(state?.from || MAIN_PATH)));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Регистрация',\n    inputs: [\n      {\n        type: 'text',\n        placeholder: 'Имя',\n        value: name,\n        name: 'name',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setName(e.target.value),\n      },\n      {\n        type: 'email',\n        placeholder: 'Email',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n      {\n        type: 'password',\n        placeholder: 'Пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n    ],\n    buttonText: 'Зарегистрироваться',\n    navs: [\n      { captionText: 'Уже зарегистрированы?', linkTo: LOGIN_PATH, linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: registerRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default Register;\n","import Cookies from 'js-cookie';\nimport { forgotPasswordRequest } from '../norma-api';\nimport { openErrorPopupAction, openSuccessPopupAction } from './popups';\nimport {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILED,\n} from './action-types';\nimport { AppThunk } from '../store';\nimport { TForgotPasswordForm, TCallback } from '../types';\n\nexport interface IForgotPasswordAction {\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\nexport interface IForgotPasswordSuccessAction {\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\n\nexport interface IForgotPasswordFailedAction {\n  readonly type: typeof FORGOT_PASSWORD_FAILED;\n}\n\nexport type TForgotPasswordActions =\n  | IForgotPasswordAction\n  | IForgotPasswordSuccessAction\n  | IForgotPasswordFailedAction;\n\nexport const forgotPasswordAction = (): IForgotPasswordAction => ({\n  type: FORGOT_PASSWORD_REQUEST,\n});\n\nexport const forgotPasswordSuccessAction = (): IForgotPasswordSuccessAction => ({\n  type: FORGOT_PASSWORD_SUCCESS,\n});\n\nexport const forgotPasswordFailedAction = (): IForgotPasswordFailedAction => ({\n  type: FORGOT_PASSWORD_FAILED,\n});\n\nexport const sendResetEmail: AppThunk = (\n  (form: TForgotPasswordForm, cb: TCallback) => (dispatch) => {\n    dispatch(forgotPasswordAction());\n\n    return forgotPasswordRequest(form)\n      .then((data) => {\n        dispatch(forgotPasswordSuccessAction());\n        dispatch(openSuccessPopupAction(data));\n        Cookies.set('passwordResetAccess', 'true', { expires: 1 / 24 / 12 });\n        cb();\n      })\n      .catch((err) => {\n        dispatch(forgotPasswordFailedAction());\n        dispatch(openErrorPopupAction(err));\n      });\n  });\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { sendResetEmail } from '../services/actions/forgot-password';\nimport { useSelector, useDispatch } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\nimport { LOGIN_PATH, RESET_PASSWORD_PATH } from '../utils/constants';\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n  const { forgotPasswordRequest } = useSelector((state) => state.forgotPassword);\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n\n  function onSubmit(evt: TSubmitEvent) {\n    evt.preventDefault();\n    dispatch(sendResetEmail(\n      { email },\n      () => history.push({ pathname: RESET_PASSWORD_PATH, state: { from: history.location } }),\n    ));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Восстановление пароля',\n    inputs: [\n      {\n        type: 'email',\n        placeholder: 'Укажите e-mail',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n    ],\n    buttonText: 'Восстановить',\n    navs: [\n      { captionText: 'Вспомнили пароль?', linkTo: LOGIN_PATH, linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: forgotPasswordRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default ForgotPassword;\n","import { resetPasswordRequest } from '../norma-api';\nimport { openErrorPopupAction, openSuccessPopupAction } from './popups';\nimport {\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED,\n} from './action-types';\nimport { AppThunk } from '../store';\nimport { TCallback, TResetPasswordForm } from '../types';\n\nexport interface IResetPasswordAction {\n  readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\nexport interface IResetPasswordSuccessAction {\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\n\nexport interface IResetPasswordFailedAction {\n  readonly type: typeof RESET_PASSWORD_FAILED;\n}\n\nexport type TResetPasswordActions =\n  | IResetPasswordAction\n  | IResetPasswordSuccessAction\n  | IResetPasswordFailedAction;\n\nexport const resetPasswordAction = (): IResetPasswordAction => ({\n  type: RESET_PASSWORD_REQUEST,\n});\n\nexport const resetPasswordSuccessAction = (): IResetPasswordSuccessAction => ({\n  type: RESET_PASSWORD_SUCCESS,\n});\n\nexport const resetPasswordFailedAction = (): IResetPasswordFailedAction => ({\n  type: RESET_PASSWORD_FAILED,\n});\n\nexport const resetPassword: AppThunk = (\n  (form: TResetPasswordForm, cb: TCallback) => (dispatch) => {\n    dispatch(resetPasswordAction());\n    resetPasswordRequest(form)\n      .then((data) => {\n        dispatch(resetPasswordSuccessAction());\n        dispatch(openSuccessPopupAction(data));\n        cb();\n      })\n      .catch((err) => {\n        dispatch(resetPasswordFailedAction());\n        dispatch(openErrorPopupAction(err));\n      });\n  });\n","import React, { useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { resetPassword } from '../services/actions/reset-password';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\nimport { FORGOT_PASSWORD_PATH, LOGIN_PATH } from '../utils/constants';\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const { resetPasswordRequest } = useSelector((state) => state.resetPassword);\n  const history = useHistory();\n  const location = useLocation();\n  const passwordResetAccess = location.state?.from?.pathname === FORGOT_PASSWORD_PATH;\n\n  const [token, setToken] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(resetPassword({ token, password }, () => history.replace(LOGIN_PATH)));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Восстановление пароля',\n    inputs: [\n      {\n        type: 'password',\n        placeholder: 'Введите новый пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n      {\n        type: 'text',\n        placeholder: 'Введите код из письма',\n        value: token,\n        name: 'token',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setToken(e.target.value),\n      },\n    ],\n    buttonText: 'Сохранить',\n    navs: [\n      { captionText: 'Вспомнили пароль?', linkTo: LOGIN_PATH, linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: resetPasswordRequest,\n  };\n\n  return passwordResetAccess\n    ? (<CredentialsForm {...formConfig} />)\n    : (<Redirect to={FORGOT_PASSWORD_PATH} />);\n};\n\nexport default ResetPassword;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './edit-user.module.css';\nimport { editUser } from '../../services/actions/profile';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport { useSelector, useDispatch } from '../../services/hooks';\nimport { TUser } from '../../services/types/data';\n\ntype TStateIsFieldsEdit = {\n  [name: string]: boolean;\n};\n\ntype TStateFormValues = {\n  [name: string]: string;\n};\n\nconst EditUser = () => {\n  const dispatch = useDispatch();\n  const { user, editUserRequest, logoutRequest } = useSelector((state) => state.profile);\n  const [isFieldsEdit, setIsFieldsEdit] = useState<TStateIsFieldsEdit>({});\n  const [formValues, setFormValues] = useState<TStateFormValues>({\n    name: '',\n    email: '',\n    password: '******',\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFormValues({ ...formValues, ...user });\n    }\n  }, [user]);\n\n  const onIconClick = useCallback(\n    (evt) => {\n      const target = evt.currentTarget.previousElementSibling;\n      const { name }: { name: keyof TUser } = target;\n      const value = !isFieldsEdit[name];\n      if (user) {\n        setFormValues({\n          ...formValues,\n          [name]: user[name],\n        });\n        setIsFieldsEdit({\n          ...isFieldsEdit,\n          [name]: value,\n        });\n      }\n    },\n    [isFieldsEdit, formValues, user],\n  );\n\n  const cancelEditingForm = useCallback(\n    () => {\n      setIsFieldsEdit({});\n      setFormValues({ ...formValues, ...user });\n    },\n    [formValues, user],\n  );\n\n  const handleEscPress = useCallback(\n    (evt) => evt.key === 'Escape' && cancelEditingForm(),\n    [cancelEditingForm],\n  );\n\n  const onChange = useCallback(\n    (evt) => {\n      const { name, value } = evt.target;\n      setFormValues({\n        ...formValues,\n        [name]: value,\n      });\n    },\n    [formValues],\n  );\n\n  const onSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      const editedInputs: { [name: string]: string } = {};\n      Object.keys(isFieldsEdit)\n        .forEach((key) => {\n          if (isFieldsEdit[key]) editedInputs[key] = formValues[key];\n        });\n      dispatch(editUser(editedInputs));\n      setIsFieldsEdit({});\n    },\n    [isFieldsEdit, formValues],\n  );\n\n  useEffect(() => {\n    if (Object.values(isFieldsEdit).includes(true)) {\n      document.addEventListener('keydown', handleEscPress);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleEscPress);\n    };\n  }, [isFieldsEdit, handleEscPress]);\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Имя\"\n          value={formValues.name}\n          name=\"name\"\n          icon={!isFieldsEdit.name ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.name}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Логин\"\n          value={formValues.email}\n          name=\"email\"\n          icon={!isFieldsEdit.email ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.email}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Пароль\"\n          value={formValues.password}\n          name=\"password\"\n          icon={!isFieldsEdit.password ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.password}\n        />\n        {Object.values(isFieldsEdit).includes(true) ? (\n          <div className={styles.controls}>\n            <Button type=\"primary\" size=\"medium\">Сохранить</Button>\n            <Button type=\"secondary\" size=\"medium\" onClick={cancelEditingForm}>Отмена</Button>\n          </div>\n        ) : null}\n      </form>\n      {(editUserRequest || logoutRequest) && <ModalLoader />}\n    </>\n  );\n};\n\nexport default EditUser;\n","import React, { FC, useMemo } from 'react';\nimport styles from './order-card-ingredients.module.css';\nimport { TFeedIngredient } from '../../services/types/data';\nimport { MAX_INGREDIETNS_IN_CARD } from '../../utils/constants';\n\ntype TOrderCardIngredients = {\n  ingredient: TFeedIngredient;\n  i: number;\n  arr: Array<TFeedIngredient>;\n};\n\nconst OrderCardIngredients: FC<TOrderCardIngredients> = ({ ingredient, i, arr }) => {\n  const isLast = useMemo(\n    () => (i === (MAX_INGREDIETNS_IN_CARD - 1)) && (arr.length > MAX_INGREDIETNS_IN_CARD),\n    [i, arr],\n  );\n\n  return (\n    i >= 6 ? null : (\n      <div className={styles.ingredient} style={{ zIndex: MAX_INGREDIETNS_IN_CARD + 1 - i }}>\n        <div className={`${styles['ingredient-background']} ${isLast ? styles['ingredient-background_last'] : ''}`}>\n          <img\n            className={`${styles['ingredient-image']} ${isLast ? styles['ingredient-image_last'] : ''}`}\n            src={ingredient.image_mobile}\n            alt={ingredient.name}\n          />\n        </div>\n        {isLast\n          ? (\n            <span className={`${styles['image-count']} text text_type_main-default`}>\n              {`+${arr.length - MAX_INGREDIETNS_IN_CARD}`}\n            </span>\n          )\n          : null}\n      </div>\n    ));\n};\n\nexport default OrderCardIngredients;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './order-card.module.css';\nimport OrderCardIngredients from '../order-card-ingredients/order-card-ingredients';\nimport { TOrderUpdatedCard } from '../../services/types/data';\nimport { useLocation } from '../../services/hooks';\n\ntype TOrderCard = {\n  card: TOrderUpdatedCard\n};\n\nconst OrderCard: FC<TOrderCard> = ({ card }) => {\n  const location = useLocation();\n\n  return (\n    <li className={styles.card}>\n      <Link className={styles.link} to={{ pathname: `${location.pathname}/${card._id}`, state: { background: location } }}>\n        <div className={styles['card-header']}>\n          <span className=\"text text_type_digits-default\">\n            {`#${card.number}`}\n          </span>\n          <span className=\"text text_type_main-default text_color_inactive\">\n            {card.createdAt}\n          </span>\n        </div>\n        <h2 className=\"mt-6 mb-6\">{card.name}</h2>\n        <div className={styles['card-bottom']}>\n          <div className={styles.ingredients}>\n            {card.ingredients.map((ingredient, i, arr) => (\n              <OrderCardIngredients key={`${ingredient._id}${i * 2}`} ingredient={ingredient} i={i} arr={arr} />\n            ))}\n          </div>\n          <div className={`${styles.price} text text_type_digits-default`}>\n            <span className={styles['price-value']}>{card.totalPrice}</span>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default OrderCard;\n","import React, { FC } from 'react';\nimport styles from './orders.module.css';\nimport OrderCard from '../order-card/order-card';\nimport {\n  TOrderUpdatedCard,\n} from '../../services/types/data';\n\ntype TOrders = {\n  ordersData: ReadonlyArray<TOrderUpdatedCard>\n};\n\nconst Orders: FC<TOrders> = ({ ordersData }) => (\n  <ul className={styles.list}>\n    {ordersData.map((card) => (\n      <OrderCard key={card._id} card={card} />\n    ))}\n  </ul>\n);\n\nexport default Orders;\n","/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useCallback, useEffect } from 'react';\nimport { NavLink, useHistory, Route } from 'react-router-dom';\nimport styles from './profile.module.css';\nimport { signOut } from '../services/actions/profile';\nimport EditUser from '../components/edit-user/edit-user';\nimport Orders from '../components/orders/orders';\nimport ModalLoader from '../components/modal-loader/modal-loader';\nimport { useSelector, useDispatch } from '../services/hooks';\nimport { wsUserOrdersConnectionStartAction, wsUserOrdersConnectionStopAction } from '../services/actions/ws-actions';\nimport { LOGIN_PATH, PROFILE_ORDERS_PATH, PROFILE_PATH } from '../utils/constants';\n\nconst Profile = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { ws, profile } = useSelector((state) => state);\n  const { userOrders } = ws;\n  const { accessToken } = profile;\n\n  const onLogoutBtnClick = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      dispatch(signOut(() => history.replace(LOGIN_PATH)));\n    },\n    [history],\n  );\n\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(wsUserOrdersConnectionStartAction());\n    }\n    return () => {\n      dispatch(wsUserOrdersConnectionStopAction());\n    };\n  }, []);\n\n  return (\n    <section className={styles.section}>\n      <nav className={styles.nav}>\n        <ul className={styles.list}>\n          <li>\n            <NavLink\n              to={PROFILE_PATH}\n              exact\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n            >\n              Профиль\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={PROFILE_ORDERS_PATH}\n              exact\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n            >\n              История заказов\n            </NavLink>\n\n          </li>\n          <li>\n            <NavLink\n              to={LOGIN_PATH}\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n              onClick={onLogoutBtnClick}\n            >\n              Выход\n            </NavLink>\n          </li>\n        </ul>\n        <p className={`${styles.caption} text text_type_main-default text_color_inactive mt-20`}>\n          В этом разделе вы можете\n          изменить свои персональные данные\n        </p>\n      </nav>\n      <Route path={PROFILE_PATH} exact>\n        <EditUser />\n        <div className={styles['centering-block']} />\n      </Route>\n      <Route path={PROFILE_ORDERS_PATH} exact>\n        <div className={styles.orders}>\n          <Orders ordersData={userOrders ? [...userOrders.orders].reverse() : []} />\n        </div>\n      </Route>\n      {!userOrders ? <ModalLoader /> : null}\n    </section>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\n\nconst Ingredients = () => (\n  <section className=\"mt-30\">\n    <IngredientDetails />\n  </section>\n);\n\nexport default Ingredients;\n","import React, { useMemo } from 'react';\nimport styles from './orders-status.module.css';\nimport { useSelector } from '../../services/hooks';\n\nconst OrdersStatus = () => {\n  const { feed } = useSelector((state) => state.ws);\n\n  const filteredOrders = useMemo(\n    () => {\n      if (!feed) {\n        return { done: [], pending: [] };\n      }\n\n      const done: Array<number> = [];\n      const pending: Array<number> = [];\n      feed.orders.forEach((order) => {\n        if (order.status === 'done' && done.length < 10) {\n          done.push(order.number);\n        } else if (order.status === 'pending' && pending.length < 10) {\n          pending.push(order.number);\n        }\n      });\n      return { done, pending };\n    },\n    [feed],\n  );\n\n  return (\n    <>\n      <div className={styles.numbers}>\n        <div className={`${styles.column} mr-9`}>\n          <p className=\"text text_type_main-medium mb-6\">Готовы:</p>\n          <ul className={`${styles.list} ${styles['done-list']}`}>\n            {filteredOrders.done.map((orderNumber) => (\n              <li\n                key={orderNumber}\n                className={`\n                  ${styles['list-item']}\n                  ${styles['list-item_done']}\n                  text text_type_digits-default`}\n              >\n                {orderNumber}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.column}>\n          <p className=\"text text_type_main-medium mb-6\">В работе:</p>\n          <ul className={styles.list}>\n            {filteredOrders.pending.map((orderNumber) => (\n              <li\n                key={orderNumber}\n                className={`${styles['list-item']} text text_type_digits-default`}\n              >\n                {orderNumber}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"mt-15\">\n        <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\n        <p className={`${styles.total} text text_type_digits-large`}>{feed ? feed.total : 0}</p>\n      </div>\n      <div className=\"mt-15\">\n        <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\n        <p className={`${styles.total} text text_type_digits-large`}>{feed ? feed.totalToday : 0}</p>\n      </div>\n    </>\n  );\n};\n\nexport default OrdersStatus;\n","import React, { useEffect } from 'react';\nimport Orders from '../components/orders/orders';\nimport OrdersStatus from '../components/orders-status/orders-status';\nimport styles from './feed.module.css';\nimport ModalLoader from '../components/modal-loader/modal-loader';\nimport { wsFeedConnectionStartAction, wsFeedConnectionStopAction } from '../services/actions/ws-actions';\nimport { useSelector, useDispatch } from '../services/hooks';\n\nconst Feed = () => {\n  const dispatch = useDispatch();\n  const { ws, profile } = useSelector((state) => state);\n  const { feed } = ws;\n  const { accessToken } = profile;\n\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(wsFeedConnectionStartAction());\n    }\n    return () => {\n      dispatch(wsFeedConnectionStopAction());\n    };\n  }, [accessToken]);\n\n  return (\n    <section className={`${styles.container} mt-10`}>\n      <h1 className={`${styles.title} text text_type_main-large mb-5`}>Лента заказов</h1>\n      <div className={styles.content}>\n        <div className={`${styles['orders-list']} mr-15`}>\n          <Orders ordersData={feed ? feed.orders : []} />\n        </div>\n        <div className={styles['orders-status']}>\n          <OrdersStatus />\n        </div>\n      </div>\n      {!feed ? <ModalLoader /> : null}\n    </section>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './not-found.module.css';\n\nconst NotFound = () => {\n  const { goBack } = useHistory();\n\n  return (\n    <section className={styles.container}>\n      <p className={`${styles.code} text text_type_digits-large`}>404</p>\n      <p className=\"text text_type_main-medium mt-4 mb-4\">\n        Похоже, что такой страницы не существует... Уточните адрес ссылки и попробуйте снова.\n      </p>\n      <Button type=\"secondary\" size=\"large\" onClick={() => goBack()}>Назад</Button>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PastOrderDetails from '../components/past-order-details/past-order-details';\n\nconst OrderPage = () => (\n  <section className=\"mt-30\">\n    <PastOrderDetails />\n  </section>\n);\n\nexport default OrderPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport ProtectedRoute from '../protected-route/protected-route';\nimport ProtectedFromAuthRoute from '../protected-from-auth-route/protected-from-auth-route';\nimport AppHeader from '../app-header/app-header';\nimport Main from '../main/main';\nimport Popups from '../popups/popups';\nimport { getIngredients } from '../../services/actions/burger-ingredients';\nimport { getUser } from '../../services/actions/profile';\nimport { getFeed } from '../../services/actions/ws-actions';\nimport useToken from '../../services/token';\nimport { useDispatch, useSelector, useLocation } from '../../services/hooks';\nimport {\n  MAIN_PATH,\n  FEED_PATH,\n  FEED_ID_PATH,\n  PROFILE_PATH,\n  PROFILE_ORDERS_ID_PATH,\n  LOGIN_PATH,\n  REGISTER_PATH,\n  FORGOT_PASSWORD_PATH,\n  RESET_PASSWORD_PATH,\n  INGREDIENTS_ID_PATH,\n} from '../../utils/constants';\nimport {\n  Home,\n  Login,\n  Register,\n  ForgotPassword,\n  ResetPassword,\n  Profile,\n  Ingredients,\n  Feed,\n  OrderPage,\n  NotFound,\n} from '../../pages';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { ingredients, profile, ws } = useSelector((state) => state);\n  const { ingredientsRequest } = ingredients;\n  const { user, getUserRequest } = profile;\n  const { feedRequest, feed } = ws;\n  const location = useLocation();\n  const background = location.state ? location.state.background : null;\n  useEffect(() => {\n    dispatch(getIngredients());\n  }, []);\n  useEffect(() => {\n    const { refreshToken } = useToken();\n    if (refreshToken && !user) {\n      dispatch(getUser());\n    }\n    if (!feed) {\n      dispatch(getFeed());\n    }\n  }, [user]);\n  return (\n    <>\n      <AppHeader />\n      <Main isLoading={ingredientsRequest || getUserRequest || feedRequest}>\n        <DndProvider backend={HTML5Backend}>\n          <Switch location={background || location}>\n            <Route path={MAIN_PATH} exact>\n              <Home />\n            </Route>\n            <Route path={FEED_PATH} exact>\n              <Feed />\n            </Route>\n            <ProtectedFromAuthRoute path={LOGIN_PATH}>\n              <Login />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path={REGISTER_PATH}>\n              <Register />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path={FORGOT_PASSWORD_PATH}>\n              <ForgotPassword />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path={RESET_PASSWORD_PATH}>\n              <ResetPassword />\n            </ProtectedFromAuthRoute>\n            <ProtectedRoute path={PROFILE_ORDERS_ID_PATH} exact>\n              <OrderPage />\n            </ProtectedRoute>\n            <ProtectedRoute path={PROFILE_PATH}>\n              <Profile />\n            </ProtectedRoute>\n            <Route path={INGREDIENTS_ID_PATH}>\n              <Ingredients />\n            </Route>\n            <Route path={FEED_ID_PATH}>\n              <OrderPage />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </DndProvider>\n        <Popups />\n      </Main>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  INCREASE_INGREDIENT,\n  DECREASE_INGREDIENT,\n  RESET_INGREDIENTS_COUNT,\n} from '../actions/action-types';\nimport type { TIngredientsActions } from '../actions/burger-ingredients';\nimport { TIngredient } from '../types/data';\n\nexport type TBurgerIngredientsState = {\n  ingredients: ReadonlyArray<TIngredient>,\n  ingredientsRequest: boolean,\n  ingredientsFailed: boolean,\n};\n\nconst initState: TBurgerIngredientsState = {\n  ingredients: [],\n  ingredientsRequest: false,\n  ingredientsFailed: false,\n};\n\nexport default function burgerIngredientsReducer(state = initState, action: TIngredientsActions) {\n  switch (action.type) {\n    case INCREASE_INGREDIENT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient._id === action.payload._id) {\n            ingredient.qty = !ingredient.qty ? 1 : ingredient.qty + 1;\n          }\n          return ingredient;\n        }),\n      };\n    }\n    case DECREASE_INGREDIENT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient._id === action.payload._id) {\n            ingredient.qty = !ingredient.qty ? 0 : ingredient.qty - 1;\n          }\n          return ingredient;\n        }),\n      };\n    }\n    case RESET_INGREDIENTS_COUNT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient.qty) ingredient.qty = 0;\n          return ingredient;\n        }),\n      };\n    }\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        ingredientsRequest: true,\n        ingredientsFailed: false,\n      };\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredients: action.payload,\n      };\n    }\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  REPLACE_BUN_IN_CONSTRUCTOR,\n  COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n  REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  RESET_DRAGGING_CONTAINER,\n  RESET_CONSTRUCTOR,\n} from '../actions/action-types';\nimport { TConstructorActions } from '../actions/burger-constructor';\nimport { TMainIngredient, TIngredient } from '../types/data';\n\nexport type TBurgerConstructorState = {\n  mainIngredients: ReadonlyArray<TMainIngredient>,\n  draggingMainIngredients: ReadonlyArray<TMainIngredient>,\n  bun: TIngredient | null,\n  totalPrice: number,\n};\n\nconst initState: TBurgerConstructorState = {\n  mainIngredients: [],\n  draggingMainIngredients: [],\n  bun: null,\n  totalPrice: 0,\n};\n\nexport default function burgerConstructorReducer(state = initState, action: TConstructorActions)\n  : TBurgerConstructorState {\n  switch (action.type) {\n    case ADD_INGREDIENT_TO_CONSTRUCTOR: {\n      return {\n        ...state,\n        mainIngredients: [...state.mainIngredients, action.payload],\n        totalPrice: state.totalPrice + action.payload.price,\n      };\n    }\n    case REMOVE_INGREDIENT_FROM_CONSTRUCTOR: {\n      return {\n        ...state,\n        mainIngredients: state.mainIngredients.filter((ingredient) => (\n          ingredient._cartId !== action.payload._cartId\n        )),\n        totalPrice: state.totalPrice - action.payload.price,\n      };\n    }\n    case REPLACE_BUN_IN_CONSTRUCTOR: {\n      return {\n        ...state,\n        bun: action.payload,\n        totalPrice: state.totalPrice\n          - (!state.bun ? 0 : 2 * state.bun.price)\n          + 2 * action.payload.price,\n      };\n    }\n    case UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        mainIngredients: [...state.draggingMainIngredients],\n      };\n    }\n    case COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        draggingMainIngredients: [...state.mainIngredients],\n      };\n    }\n    case REPLACE_ITEMS_IN_DRAGGING_CONTAINER: {\n      const { initialIndex, targetIndex } = action.payload;\n      const newDrraggingMain = [...state.draggingMainIngredients];\n      newDrraggingMain.splice(targetIndex, 0, ...newDrraggingMain.splice(initialIndex, 1));\n      return {\n        ...state,\n        draggingMainIngredients: newDrraggingMain,\n      };\n    }\n    case RESET_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        draggingMainIngredients: [...initState.draggingMainIngredients],\n      };\n    }\n    case RESET_CONSTRUCTOR: {\n      return {\n        ...initState,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  CLOSE_ORDER_DETAILS,\n  OPEN_ERROR_POPUP,\n  CLOSE_ERROR_POPUP,\n  OPEN_SUCCESS_POPUP,\n  CLOSE_SUCCESS_POPUP,\n} from '../actions/action-types';\nimport type { TPopupActions } from '../actions/popups';\nimport { TOrderDetails, TInfoTooltip } from '../types/data';\n\nexport type TPopupsState = {\n  orderRequest: boolean,\n  isOrderDetailsOpen: boolean,\n  orderDetailsContent: TOrderDetails | null,\n  isErrorPopupOpen: boolean,\n  errorPopupContent: TInfoTooltip | null,\n  isSuccessPopupOpen: boolean,\n  successPopupContent: TInfoTooltip | null,\n};\n\nconst initState: TPopupsState = {\n  orderRequest: false,\n  isOrderDetailsOpen: false,\n  orderDetailsContent: null,\n  isErrorPopupOpen: false,\n  errorPopupContent: null,\n  isSuccessPopupOpen: false,\n  successPopupContent: null,\n};\n\nexport default function popupsReducer(state = initState, action: TPopupActions) {\n  switch (action.type) {\n    case GET_ORDER_DETAILS_REQUEST: {\n      return {\n        ...state,\n        orderRequest: true,\n      };\n    }\n    case GET_ORDER_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        orderRequest: false,\n        isOrderDetailsOpen: true,\n        orderDetailsContent: action.payload,\n      };\n    }\n    case GET_ORDER_DETAILS_FAILED: {\n      return {\n        ...state,\n        orderRequest: false,\n      };\n    }\n    case CLOSE_ORDER_DETAILS: {\n      return {\n        ...state,\n        isOrderDetailsOpen: initState.isOrderDetailsOpen,\n        orderDetailsContent: initState.orderDetailsContent,\n      };\n    }\n    case OPEN_ERROR_POPUP: {\n      return {\n        ...state,\n        isErrorPopupOpen: true,\n        errorPopupContent: action.payload,\n      };\n    }\n    case CLOSE_ERROR_POPUP: {\n      return {\n        ...state,\n        isErrorPopupOpen: initState.isErrorPopupOpen,\n        errorPopupContent: initState.errorPopupContent,\n      };\n    }\n    case OPEN_SUCCESS_POPUP: {\n      return {\n        ...state,\n        isSuccessPopupOpen: true,\n        successPopupContent: action.payload,\n      };\n    }\n    case CLOSE_SUCCESS_POPUP: {\n      return {\n        ...state,\n        isSuccessPopupOpen: initState.isSuccessPopupOpen,\n        successPopupContent: initState.successPopupContent,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  UPDATE_TOKEN,\n  SET_USER,\n  CLEAR_USER,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  EDIT_USER_REQUEST,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAILED,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n} from '../actions/action-types';\nimport type { TProfileActions } from '../actions/profile';\nimport { TUser } from '../types/data';\n\nexport type TProfilesState = {\n  user: TUser | null,\n  accessToken: string,\n  getUserRequest: boolean,\n  getUserFailed: boolean,\n  editUserRequest: boolean,\n  editUserFailed: boolean,\n  logoutRequest: boolean,\n  logoutFailed: boolean,\n};\n\nconst initState: TProfilesState = {\n  user: null,\n  accessToken: '',\n  getUserRequest: false,\n  getUserFailed: false,\n  editUserRequest: false,\n  editUserFailed: false,\n  logoutRequest: false,\n  logoutFailed: false,\n};\n\nexport default function profileReducer(state = initState, action: TProfileActions) {\n  switch (action.type) {\n    case UPDATE_TOKEN: {\n      return {\n        ...state,\n        accessToken: action.payload,\n      };\n    }\n    case SET_USER: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n    case CLEAR_USER: {\n      return {\n        ...state,\n        user: initState.user,\n        accessToken: initState.accessToken,\n      };\n    }\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n        getUserFailed: false,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        getUserRequest: false,\n        user: action.payload,\n      };\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserFailed: true,\n      };\n    }\n    case EDIT_USER_REQUEST: {\n      return {\n        ...state,\n        editUserRequest: true,\n        editUserFailed: false,\n      };\n    }\n    case EDIT_USER_SUCCESS: {\n      return {\n        ...state,\n        editUserRequest: false,\n        user: action.payload,\n      };\n    }\n    case EDIT_USER_FAILED: {\n      return {\n        ...state,\n        editUserRequest: false,\n        editUserFailed: true,\n      };\n    }\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        logoutRequest: true,\n        logoutFailed: false,\n      };\n    }\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        logoutRequest: false,\n      };\n    }\n    case LOGOUT_FAILED: {\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n} from '../actions/action-types';\nimport type { TRegisterActions } from '../actions/register';\n\nexport type TRegisterState = {\n  registerRequest: boolean,\n  registerFailed: boolean,\n};\n\nconst initState: TRegisterState = {\n  registerRequest: false,\n  registerFailed: false,\n};\n\nexport default function registerReducer(state = initState, action: TRegisterActions) {\n  switch (action.type) {\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        registerRequest: true,\n        registerFailed: false,\n      };\n    }\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        registerRequest: false,\n      };\n    }\n    case REGISTER_FAILED: {\n      return {\n        ...state,\n        registerRequest: false,\n        registerFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n} from '../actions/action-types';\nimport type { TLoginActions } from '../actions/login';\n\nexport type TLoginState = {\n  loginRequest: boolean,\n  loginFailed: boolean,\n};\n\nconst initState: TLoginState = {\n  loginRequest: false,\n  loginFailed: false,\n};\n\nexport default function loginReducer(state = initState, action: TLoginActions) {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loginRequest: true,\n        loginFailed: false,\n      };\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loginRequest: false,\n      };\n    }\n    case LOGIN_FAILED: {\n      return {\n        ...state,\n        loginRequest: false,\n        loginFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILED,\n} from '../actions/action-types';\nimport type { TForgotPasswordActions } from '../actions/forgot-password';\n\nexport type TForgotPasswordState = {\n  forgotPasswordRequest: boolean,\n  forgotPasswordFailed: boolean,\n};\n\nconst initState: TForgotPasswordState = {\n  forgotPasswordRequest: false,\n  forgotPasswordFailed: false,\n};\n\nexport default function forgotPasswordReducer(state = initState, action: TForgotPasswordActions) {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotPasswordRequest: true,\n        forgotPasswordFailed: false,\n        forgotPasswordSuccess: false,\n      };\n    }\n    case FORGOT_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n      };\n    }\n    case FORGOT_PASSWORD_FAILED: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n        forgotPasswordFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED,\n} from '../actions/action-types';\nimport type { TResetPasswordActions } from '../actions/reset-password';\n\nexport type TResetPasswordState = {\n  resetPasswordRequest: boolean,\n  resetPasswordFailed: boolean,\n};\n\nconst initState: TResetPasswordState = {\n  resetPasswordRequest: false,\n  resetPasswordFailed: false,\n};\n\nexport default function resetPasswordReducer(state = initState, action: TResetPasswordActions) {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetPasswordRequest: true,\n        resetPasswordFailed: false,\n      };\n    }\n    case RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n      };\n    }\n    case RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  WS_FEED_CONNECTION_START,\n  WS_FEED_CONNECTION_STOP,\n  WS_FEED_CONNECTION_SUCCESS,\n  WS_FEED_CONNECTION_ERROR,\n  WS_FEED_CONNECTION_CLOSED,\n  WS_GET_FEED,\n  WS_USER_ORDERS_CONNECTION_START,\n  WS_USER_ORDERS_CONNECTION_STOP,\n  WS_USER_ORDERS_CONNECTION_SUCCESS,\n  WS_USER_ORDERS_CONNECTION_ERROR,\n  WS_USER_ORDERS_CONNECTION_CLOSED,\n  WS_GET_USER_ORDERS,\n  FEED_REQUEST,\n  FEED_SUCCESS,\n  FEED_FAILED,\n} from '../actions/action-types';\nimport type { TWsActions } from '../actions/ws-actions';\nimport { TUpdatedFeed } from '../types/data';\n\nexport type TWSState = {\n  wsRequest: boolean;\n  wsFeedConnected: boolean;\n  feedError?: Event | null;\n  feed: TUpdatedFeed | null;\n  wsUserOrdersConnected: boolean;\n  userOrdersError?: Event | null;\n  userOrders: TUpdatedFeed | null;\n  feedRequest: boolean;\n  feedFailed: boolean;\n};\n\nconst initState: TWSState = {\n  wsRequest: false,\n  wsFeedConnected: false,\n  feed: null,\n  wsUserOrdersConnected: false,\n  userOrders: null,\n  feedRequest: false,\n  feedFailed: false,\n};\n\nexport default function wsReducer(state = initState, action: TWsActions): TWSState {\n  switch (action.type) {\n    case WS_FEED_CONNECTION_START: {\n      return {\n        ...state,\n        wsRequest: true,\n      };\n    }\n    case WS_FEED_CONNECTION_STOP: {\n      return {\n        ...state,\n        wsFeedConnected: false,\n      };\n    }\n    case WS_FEED_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        wsFeedConnected: true,\n        feedError: null,\n      };\n    }\n    case WS_FEED_CONNECTION_ERROR: {\n      return {\n        ...state,\n        wsRequest: false,\n        feedError: action.payload,\n      };\n    }\n    case WS_FEED_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        wsFeedConnected: false,\n        feedError: null,\n      };\n    }\n    case WS_GET_FEED: {\n      return {\n        ...state,\n        wsRequest: false,\n        feed: action.payload,\n      };\n    }\n    case WS_USER_ORDERS_CONNECTION_START: {\n      return {\n        ...state,\n        wsRequest: true,\n      };\n    }\n    case WS_USER_ORDERS_CONNECTION_STOP: {\n      return {\n        ...state,\n        wsUserOrdersConnected: false,\n      };\n    }\n    case WS_USER_ORDERS_CONNECTION_SUCCESS: {\n      return {\n        ...state,\n        wsUserOrdersConnected: true,\n        userOrdersError: null,\n      };\n    }\n    case WS_USER_ORDERS_CONNECTION_ERROR: {\n      return {\n        ...state,\n        wsRequest: false,\n        userOrdersError: action.payload,\n      };\n    }\n    case WS_USER_ORDERS_CONNECTION_CLOSED: {\n      return {\n        ...state,\n        wsUserOrdersConnected: false,\n        userOrdersError: null,\n      };\n    }\n    case WS_GET_USER_ORDERS: {\n      return {\n        ...state,\n        wsRequest: false,\n        userOrders: action.payload,\n      };\n    }\n    case FEED_REQUEST: {\n      return {\n        ...state,\n        feedRequest: true,\n        feedFailed: false,\n      };\n    }\n    case FEED_SUCCESS: {\n      return {\n        ...state,\n        feedRequest: false,\n        feed: action.payload,\n      };\n    }\n    case FEED_FAILED: {\n      return {\n        ...state,\n        feedRequest: false,\n        feedFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport burgerIngredientsReducer from './burger-ingredients';\nimport burgerConstructorReducer from './burger-constructor';\nimport popupsReducer from './popups';\nimport profileReducer from './profile';\nimport registerReducer from './register';\nimport loginReducer from './login';\nimport forgotPasswordReducer from './forgot-password';\nimport resetPasswordReducer from './reset-password';\nimport wsReducer from './ws-reducer';\n\nexport const rootReducer = combineReducers({\n  ingredients: burgerIngredientsReducer,\n  burgerConstructor: burgerConstructorReducer,\n  popups: popupsReducer,\n  profile: profileReducer,\n  register: registerReducer,\n  login: loginReducer,\n  forgotPassword: forgotPasswordReducer,\n  resetPassword: resetPasswordReducer,\n  ws: wsReducer,\n});\n","import type { Middleware, MiddlewareAPI } from 'redux';\nimport type {\n  TApplicationActions, AppDispatch, RootState, TWsFeedActionNames, TWsUserOrdersActionNames,\n} from '../store';\nimport { openErrorPopupAction } from '../actions/popups';\nimport { getCardData } from '../../utils/utils';\n\nexport const socketMiddleware = (wsUrl: string, wsActions:\nTWsFeedActionNames | TWsUserOrdersActionNames, isToken: boolean): Middleware => (\n  store: MiddlewareAPI<AppDispatch, RootState>,\n) => {\n  let socket: WebSocket | null = null;\n\n  return (next) => (action: TApplicationActions) => {\n    const { dispatch, getState } = store;\n    const { type } = action;\n    const {\n      wsInit, wsStop, onOpen, onClose, onError, onMessage,\n    } = wsActions;\n    const { profile, ingredients } = getState();\n\n    if (type === wsInit && profile.accessToken) {\n      socket = new WebSocket(`${wsUrl}${isToken ? `?token=${profile.accessToken}` : ''}`);\n    }\n\n    if (socket) {\n      if (type === wsStop) {\n        socket.close(1000, 'Выход пользователя');\n      }\n\n      socket.onopen = () => dispatch({ type: onOpen });\n      socket.onerror = (error: Event) => {\n        dispatch({ type: onError, payload: error });\n        dispatch(openErrorPopupAction(new Error(error.type)));\n      };\n      socket.onclose = () => dispatch({ type: onClose });\n      socket.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (!data.success) {\n          dispatch({\n            type: onError,\n            payload: new Event(data.message),\n          });\n          dispatch(openErrorPopupAction(new Error(data.message)));\n          return;\n        }\n        dispatch({\n          type: onMessage,\n          payload: {\n            ...data,\n            orders: [...data.orders].map((card) => (getCardData(card, ingredients.ingredients))),\n          },\n        });\n      };\n    }\n    next(action);\n  };\n};\n","import {\n  applyMiddleware, createStore, compose, Action, ActionCreator,\n} from 'redux';\nimport thunk, { ThunkAction } from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport type { TConstructorActions } from './actions/burger-constructor';\nimport type { TIngredientsActions } from './actions/burger-ingredients';\nimport type { TForgotPasswordActions } from './actions/forgot-password';\nimport type { TLoginActions } from './actions/login';\nimport type { TPopupActions } from './actions/popups';\nimport type { TProfileActions } from './actions/profile';\nimport type { TRegisterActions } from './actions/register';\nimport type { TResetPasswordActions } from './actions/reset-password';\nimport type { TWsActions } from './actions/ws-actions';\nimport {\n  WS_FEED_CONNECTION_START,\n  WS_FEED_CONNECTION_SUCCESS,\n  WS_FEED_CONNECTION_ERROR,\n  WS_FEED_CONNECTION_CLOSED,\n  WS_GET_FEED,\n  WS_USER_ORDERS_CONNECTION_START,\n  WS_USER_ORDERS_CONNECTION_SUCCESS,\n  WS_USER_ORDERS_CONNECTION_ERROR,\n  WS_USER_ORDERS_CONNECTION_CLOSED,\n  WS_GET_USER_ORDERS,\n  WS_FEED_CONNECTION_STOP,\n  WS_USER_ORDERS_CONNECTION_STOP,\n} from './actions/action-types';\nimport { socketMiddleware } from './middleware/socket-middleware';\nimport { WS_FEED_URL, WS_MY_ORDERS_URL } from '../utils/constants';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nexport type TWsFeedActionNames = {\n  wsInit: typeof WS_FEED_CONNECTION_START;\n  wsStop: typeof WS_FEED_CONNECTION_STOP;\n  onOpen: typeof WS_FEED_CONNECTION_SUCCESS;\n  onClose: typeof WS_FEED_CONNECTION_CLOSED;\n  onError: typeof WS_FEED_CONNECTION_ERROR;\n  onMessage: typeof WS_GET_FEED;\n};\n\nconst wsFeedActionNames: TWsFeedActionNames = {\n  wsInit: WS_FEED_CONNECTION_START,\n  wsStop: WS_FEED_CONNECTION_STOP,\n  onOpen: WS_FEED_CONNECTION_SUCCESS,\n  onClose: WS_FEED_CONNECTION_CLOSED,\n  onError: WS_FEED_CONNECTION_ERROR,\n  onMessage: WS_GET_FEED,\n};\n\nexport type TWsUserOrdersActionNames = {\n  wsInit: typeof WS_USER_ORDERS_CONNECTION_START;\n  wsStop: typeof WS_USER_ORDERS_CONNECTION_STOP;\n  onOpen: typeof WS_USER_ORDERS_CONNECTION_SUCCESS;\n  onClose: typeof WS_USER_ORDERS_CONNECTION_CLOSED;\n  onError: typeof WS_USER_ORDERS_CONNECTION_ERROR;\n  onMessage: typeof WS_GET_USER_ORDERS;\n};\n\nconst wsUserOrdersActionNames: TWsUserOrdersActionNames = {\n  wsInit: WS_USER_ORDERS_CONNECTION_START,\n  wsStop: WS_USER_ORDERS_CONNECTION_STOP,\n  onOpen: WS_USER_ORDERS_CONNECTION_SUCCESS,\n  onClose: WS_USER_ORDERS_CONNECTION_CLOSED,\n  onError: WS_USER_ORDERS_CONNECTION_ERROR,\n  onMessage: WS_GET_USER_ORDERS,\n};\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enchancer = composeEnhancers(\n  applyMiddleware(\n    thunk,\n    socketMiddleware(WS_FEED_URL, wsFeedActionNames, false),\n    socketMiddleware(WS_MY_ORDERS_URL, wsUserOrdersActionNames, true),\n  ),\n);\n\nexport const store = createStore(rootReducer, enchancer);\nexport type TApplicationActions =\n  | TConstructorActions\n  | TIngredientsActions\n  | TForgotPasswordActions\n  | TLoginActions\n  | TPopupActions\n  | TProfileActions\n  | TRegisterActions\n  | TResetPasswordActions\n  | TWsActions;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<TReturn = void> = ActionCreator<\nThunkAction<TReturn, RootState, Action, TApplicationActions>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/app/app';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"past-order-details_container__Kgbh2\",\"number\":\"past-order-details_number__1CYmu\",\"status\":\"past-order-details_status__3rXgc\",\"list\":\"past-order-details_list__1MO6x\",\"ingredient\":\"past-order-details_ingredient__3xlii\",\"ingredient-border\":\"past-order-details_ingredient-border__1wA0H\",\"ingredient-image\":\"past-order-details_ingredient-image___EKtQ\",\"ingredient-name\":\"past-order-details_ingredient-name__39b2u\",\"bottom\":\"past-order-details_bottom__1Q0VD\",\"total-price\":\"past-order-details_total-price__5BwCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__2Wifa\",\"constructor_epmty\":\"burger-constructor_constructor_epmty__1M0uO\",\"constructor_active\":\"burger-constructor_constructor_active__1EzoO\",\"order-list\":\"burger-constructor_order-list__9WNNq\",\"order-list-main\":\"burger-constructor_order-list-main__1fMlX\",\"info-container\":\"burger-constructor_info-container__UXoJA\",\"price\":\"burger-constructor_price__Q5cGy\",\"background-text\":\"burger-constructor_background-text__1yfQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ingredient-details_image__H2-xP\",\"title\":\"ingredient-details_title__2_5MB\",\"nutrition\":\"ingredient-details_nutrition__2ax8v\",\"component\":\"ingredient-details_component__39Tnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-card_card__38Dy5\",\"link\":\"order-card_link__FwObm\",\"card-header\":\"order-card_card-header__2aj91\",\"card-bottom\":\"order-card_card-bottom__12HjB\",\"ingredients\":\"order-card_ingredients__20T5_\",\"price\":\"order-card_price__2hTab\",\"price-value\":\"order-card_price-value__LLLlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"order-card-ingredients_ingredient__1NtUx\",\"ingredient-background\":\"order-card-ingredients_ingredient-background__2xv7E\",\"ingredient-background_last\":\"order-card-ingredients_ingredient-background_last__36SFH\",\"ingredient-image\":\"order-card-ingredients_ingredient-image__3K_qi\",\"ingredient-image_last\":\"order-card-ingredients_ingredient-image_last__arYs0\",\"image-count\":\"order-card-ingredients_image-count__37fBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"credentials-form_container__j3UyF\",\"title\":\"credentials-form_title__3cULh\",\"form\":\"credentials-form_form__28Z2W\",\"nav\":\"credentials-form_nav__2VqWC\",\"link\":\"credentials-form_link__1etUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__2cuf2\",\"title\":\"feed_title__IPF6K\",\"content\":\"feed_content__3dS9Z\",\"orders-list\":\"feed_orders-list__ZjZHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"container\":\"app-header_container__2ER_-\",\"menu\":\"app-header_menu__3SLom\",\"logo\":\"app-header_logo__zVEfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient_card__1j458\",\"image\":\"ingredient_image__3WGGy\",\"price\":\"ingredient_price__2xF1Q\",\"name\":\"ingredient_name__HmI8K\",\"counter\":\"ingredient_counter__3L2pW\",\"counter_active\":\"ingredient_counter_active__9Os02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\",\"title\":\"modal_title__1efUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-ingredients_container__EME_h\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"content\":\"burger-ingredients_content__1rMpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"main-constructor-element_list-item__3nNoN\",\"list-item_dragging\":\"main-constructor-element_list-item_dragging__2j6Oh\",\"icon\":\"main-constructor-element_icon__167nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"header-button_button__Oq4u3\",\"link_active\":\"header-button_link_active__3Fx1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2W-l3\",\"main_loader\":\"main_main_loader__27zuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-id\":\"order-details_order-id__22QIi\",\"image\":\"order-details_image__lnOoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ingredients-category_list__1iaz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"edit-user_form__1bkl8\",\"controls\":\"edit-user_controls__sjAs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__heFy6\",\"code\":\"not-found_code__acw3J\"};"],"sourceRoot":""}