{"version":3,"sources":["components/loader/loader.module.css","components/modal-overlay/modal-overlay.module.css","components/error-popup/error-popup.module.css","components/info-tooltip/info-tooltip.module.css","components/success-popup/success-popup.module.css","components/bun-constructor-element/bun-constructor-element.module.css","pages/profile.module.css","components/burger-constructor/burger-constructor.module.css","reportWebVitals.ts","utils/constants.ts","services/norma-api.ts","services/token.ts","components/protected-route/protected-route.tsx","components/protected-from-auth-route/protected-from-auth-route.tsx","components/header-button/header-button.tsx","services/hooks.ts","components/app-header/app-header.tsx","components/loader/loader.tsx","components/main/main.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done-animation.gif","components/order-details/order-details.tsx","components/ingredient-details/ingredient-details.tsx","components/info-tooltip/info-tooltip.tsx","components/error-popup/error-popup.tsx","services/actions/action-types.ts","services/actions/popups.ts","components/success-popup/success-popup.tsx","components/popups/popups.tsx","components/ingredient/ingredient.tsx","components/ingredients-category/ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","components/bun-constructor-element/bun-constructor-element.tsx","services/actions/burger-ingredients.ts","components/main-constructor-element/main-constructor-element.tsx","services/actions/burger-constructor.ts","components/modal-loader/modal-loader.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","components/password-placeholder-input/password-placeholder-input.tsx","components/credentials-form/credentials-form.tsx","services/actions/profile.ts","services/actions/login.ts","pages/login.tsx","services/actions/register.ts","pages/register.tsx","services/actions/forgot-password.ts","pages/forgot-password.tsx","services/actions/reset-password.ts","pages/reset-password.tsx","components/edit-user/edit-user.tsx","pages/profile.tsx","pages/ingredients.tsx","pages/not-found.tsx","components/app/app.tsx","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/popups.ts","services/reducers/profile.ts","services/reducers/register.ts","services/reducers/login.ts","services/reducers/forgot-password.ts","services/reducers/reset-password.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/ingredient-details/ingredient-details.module.css","components/credentials-form/credentials-form.module.css","components/app-header/app-header.module.css","components/ingredient/ingredient.module.css","components/modal/modal.module.css","components/burger-ingredients/burger-ingredients.module.css","components/main-constructor-element/main-constructor-element.module.css","components/header-button/header-button.module.css","components/main/main.module.css","components/order-details/order-details.module.css","components/ingredients-category/ingredients-category.module.css","components/edit-user/edit-user.module.css","pages/not-found.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NORMA_API_URL","USER_URL","TOKEN_ERR_MSG","createRequest","url","method","body","token","headers","Authorization","isRequestFailed","fetch","JSON","stringify","mode","cache","credentials","redirect","referrerPolicy","res","ok","json","Error","message","refreshTokenRequest","refreshToken","useToken","Cookies","get","accessToken","addTokens","addedAccessToken","addedRefreshToken","split","set","expires","getToken","a","data","clearAllTokens","remove","ProtectedRoute","children","rest","render","location","to","pathname","state","from","ProtectedFromAuthRoute","HeaderButton","path","text","exact","className","styles","button","activeClassName","link_active","useDispatch","dispatchHook","useLocation","locationHook","useSelector","selectorHook","AppHeader","header","container","menu","type","logo","Loader","loader","Main","isLoading","main","main_loader","ModalOverlay","isLockApp","handleClosePopup","overlay","onMouseDown","e","target","currentTarget","defaultProps","Modal","title","useEffect","closeByEscape","key","document","addEventListener","removeEventListener","ReactDOM","createPortal","modal","onClick","getElementById","OrderDetails","orderDetailsContent","popups","order","number","src","donePath","alt","image","IngredientDetails","id","useParams","ingredients","find","_id","image_large","name","calories","proteins","fat","carbohydrates","nutrition","component","InfoTooltip","ErrorPopup","errorPopupContent","error","ADD_INGREDIENT_TO_CONSTRUCTOR","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","REPLACE_BUN_IN_CONSTRUCTOR","UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER","COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER","REPLACE_ITEMS_IN_DRAGGING_CONTAINER","RESET_DRAGGING_CONTAINER","RESET_CONSTRUCTOR","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","INCREASE_INGREDIENT","DECREASE_INGREDIENT","RESET_INGREDIENTS_COUNT","GET_ORDER_DETAILS_REQUEST","GET_ORDER_DETAILS_SUCCESS","GET_ORDER_DETAILS_FAILED","CLOSE_ORDER_DETAILS","OPEN_ERROR_POPUP","CLOSE_ERROR_POPUP","OPEN_SUCCESS_POPUP","CLOSE_SUCCESS_POPUP","SET_USER","CLEAR_USER","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","openErrorPopup","payload","openSuccessPopup","successData","getOrderDetails","dispatch","ingredientsId","catch","err","SuccessPopup","successPopupContent","success","Popups","history","useHistory","background","isOrderDetailsOpen","isErrorPopupOpen","isSuccessPopupOpen","handleCloseRoutePopup","useCallback","replace","isPopupOpen","useMemo","Ingredient","card","useDrag","item","dragRef","ref","price","qty","count","size","IngredientsCategory","forwardRef","cards","list","map","BurgerIngredients","forEach","push","filterIngredients","bun","sauce","useState","current","setCurrent","bunRef","useRef","sauceRef","mainRef","contentRef","handleScroll","window","requestAnimationFrame","closestCategory","top","getBoundingClientRect","category","index","array","Number","length","handleTabClick","value","currentCategory","scrollIntoView","tab","active","content","BunConstructorElement","thumbnail","isLocked","increaseIngredient","ingredient","decreaseIngredient","getIngredients","MainConstructorElement","_cartId","draggingMainIngredients","burgerConstructor","collect","monitor","isDragging","end","didDrop","drag","useDrop","accept","hover","findIndex","ingred","hoverIndex","hoverBoundingRect","hoverBottomBound","bottom","hoverTopBound","clientOffset","getClientOffset","hoverClientY","y","initialIndex","targetIndex","drop","icon","handleClose","ModalLoader","BurgerConstructor","mainIngredients","totalPrice","store","orderRequest","isOver","onDropHandler","dropTarget","replaceBunInConstructor","uniqid","targetList","constructor","constructor_active","constructor_epmty","image_mobile","ingr","Home","ingredientsRequest","PasswordPlaceholderInput","placeholder","onChange","passwordRef","passwordIcon","setPasswordIcon","isValid","setIsValid","minLength","validity","valid","onIconClick","focus","errorText","CredentialsForm","inputs","buttonText","navs","onSubmit","form","captionText","linkTo","linkText","nav","link","setUser","user","getUser","getUserRequest","editUser","editUserRequest","signOut","cb","logoutRequest","signIn","loginRequest","Login","login","email","setEmail","password","setPassword","formConfig","preventDefault","signUp","registerRequest","Register","register","setName","sendResetEmail","forgotPasswordRequest","ForgotPassword","forgotPassword","evt","resetPassword","resetPasswordRequest","ResetPassword","passwordResetAccess","setToken","EditUser","profile","isFieldsEdit","setIsFieldsEdit","formValues","setFormValues","previousElementSibling","cancelEditingForm","handleEscPress","editedInputs","Object","keys","values","includes","disabled","controls","Profile","onLogoutBtnClick","section","caption","Ingredients","NotFound","goBack","code","App","DndProvider","backend","HTML5Backend","initialState","ingredientsFailed","getUserFailed","editUserFailed","logoutFailed","registerFailed","loginFailed","forgotPasswordFailed","resetPasswordFailed","rootReducer","combineReducers","action","filter","newDrraggingMain","splice","forgotPasswordSuccess","enchancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.476d6e44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__31U88\",\"lds-ripple\":\"loader_lds-ripple__1KA0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__AKixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error-popup_error__268w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"info-tooltip_title__MiCz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"success-popup_success__2JF0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"bun-constructor-element_list-item__3KM-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__Rmuvy\",\"nav\":\"profile_nav__1tnk2\",\"list\":\"profile_list__22khu\",\"link\":\"profile_link__1-_Is\",\"link_active\":\"profile_link_active__1VPR0\",\"caption\":\"profile_caption__3N0hV\",\"centering-block\":\"profile_centering-block__3aPtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__2Wifa\",\"constructor_epmty\":\"burger-constructor_constructor_epmty__1M0uO\",\"constructor_active\":\"burger-constructor_constructor_active__1EzoO\",\"order-list\":\"burger-constructor_order-list__9WNNq\",\"order-list-main\":\"burger-constructor_order-list-main__1fMlX\",\"info-container\":\"burger-constructor_info-container__UXoJA\",\"price\":\"burger-constructor_price__Q5cGy\",\"background-text\":\"burger-constructor_background-text__1yfQD\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const NORMA_API_URL = 'https://norma.nomoreparties.space/api';\nexport const INGREDIENTS_URL = '/ingredients';\nexport const ORDERS_URL = '/orders';\nexport const FORGOT_PASSWORD_URL = '/password-reset';\nexport const PASSWORD_RESET_URL = '/password-reset/reset';\nexport const REGISTER_URL = '/auth/register';\nexport const LOGIN_URL = '/auth/login';\nexport const LOGOUT_URL = '/auth/logout';\nexport const REFRESH_TOKEN_URL = '/auth/token';\nexport const USER_URL = '/auth/user';\n\nexport const DEFAULT_ERR_MSG = 'Ошибка сервера';\nexport const DEFAULT_SUCCESS_MSG = 'Данные успешно отправлены';\nexport const DEFAULT_REQUEST_ERR_MSG = 'Ошибка запроса! Данные не получены';\nexport const BUN_REQUIRED_ERR_MSG = 'Перед добавлением ингредиентов, сначала нужно выбрать булку для будущего бургера';\nexport const TOKEN_ERR_MSG = 'Ошибка получения токена, неоходимо повторно пройти авторизацию';\n\nexport const HEADER_CONSTRUCTOR_BUTTON_TEXT = 'Конструктор';\nexport const HEADER_ORDERS_BUTTON_TEXT = 'Лента заказов';\nexport const HEADER_PROFILE_BUTTON_TEXT = 'Личный кабинет';\nexport const CONSTRUCTOR_DEFAULT_TEXT = 'Пожалуйста, выберете булку бургера для создания заказа';\nexport const CONSTRUCTOR_BUTTON_TEXT = 'Оформить заказ';\nexport const CONSTRUCTOR_LOADING_BUTTON_TEXT = 'Оформляем...';\n","import {\n  NORMA_API_URL,\n  INGREDIENTS_URL,\n  ORDERS_URL,\n  FORGOT_PASSWORD_URL,\n  PASSWORD_RESET_URL,\n  REGISTER_URL,\n  LOGIN_URL,\n  LOGOUT_URL,\n  REFRESH_TOKEN_URL,\n  USER_URL,\n} from '../utils/constants';\nimport {\n  TRegisterForm,\n  TLoginForm,\n  TForgotPasswordForm,\n  TResetPasswordForm,\n  TProfileForm,\n  TToken,\n  TRefreshToken,\n  TIngredientsId,\n} from './types';\n\ntype TRequestSettings = {\n  method: 'GET' | 'POST' | 'PATCH';\n  body?: { [name: string]: string | number }\n  | { [name: string]: ReadonlyArray<string> };\n  token?: string;\n};\n\nfunction createRequest(url: string, { method, body, token }: TRequestSettings): Promise<any> {\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer ',\n  };\n  let isRequestFailed = false;\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  const defaultReqSettings: RequestInit = {\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n  };\n\n  return fetch(url, {\n    method,\n    body: JSON.stringify(body),\n    headers,\n    ...defaultReqSettings,\n  })\n    .then((res) => {\n      if (!res.ok) {\n        isRequestFailed = true;\n      }\n      return res.json();\n    })\n    .then((res) => {\n      if (isRequestFailed) {\n        throw new Error(res.message);\n      }\n      return res;\n    });\n}\n\nexport function getIngredientsRequest() {\n  return createRequest(`${NORMA_API_URL}${INGREDIENTS_URL}`, { method: 'GET' });\n}\n\nexport function sendOrderRequest(ingredientsId: TIngredientsId) {\n  return createRequest(`${NORMA_API_URL}${ORDERS_URL}`, { method: 'POST', body: ingredientsId });\n}\n\nexport function forgotPasswordRequest(form: TForgotPasswordForm) {\n  return createRequest(`${NORMA_API_URL}${FORGOT_PASSWORD_URL}`, { method: 'POST', body: form });\n}\n\nexport function resetPasswordRequest(form: TResetPasswordForm) {\n  return createRequest(`${NORMA_API_URL}${PASSWORD_RESET_URL}`, { method: 'POST', body: form });\n}\n\nexport function registerRequest(form: TRegisterForm) {\n  return createRequest(`${NORMA_API_URL}${REGISTER_URL}`, { method: 'POST', body: form });\n}\n\nexport function loginRequest(form: TLoginForm) {\n  return createRequest(`${NORMA_API_URL}${LOGIN_URL}`, { method: 'POST', body: form });\n}\n\nexport function logoutRequest(refreshToken: TRefreshToken) {\n  return createRequest(`${NORMA_API_URL}${LOGOUT_URL}`, { method: 'POST', body: refreshToken });\n}\n\nexport function refreshTokenRequest(refreshToken: TRefreshToken) {\n  return createRequest(`${NORMA_API_URL}${REFRESH_TOKEN_URL}`, { method: 'POST', body: refreshToken });\n}\n\nexport function getUserRequest(token: TToken) {\n  return createRequest(`${NORMA_API_URL}${USER_URL}`, { method: 'GET', token });\n}\n\nexport function editUserRequest(form: TProfileForm, token: TToken) {\n  return createRequest(`${NORMA_API_URL}${USER_URL}`, { method: 'PATCH', body: form, token });\n}\n","import Cookies from 'js-cookie';\nimport { refreshTokenRequest } from './norma-api';\n\ntype TAddedTokens = {\n  accessToken: string;\n  refreshToken: string;\n};\n\nfunction useToken() {\n  const { accessToken, refreshToken } = Cookies.get();\n\n  const clearAllTokens = () => {\n    Cookies.remove('accessToken');\n    Cookies.remove('refreshToken');\n  };\n\n  const addTokens = ({\n    accessToken: addedAccessToken, refreshToken: addedRefreshToken,\n  }: TAddedTokens) => {\n    const token = addedAccessToken.split('Bearer ')[1];\n    Cookies.set('accessToken', token, { expires: 1 / 24 / 3 });\n    Cookies.set('refreshToken', addedRefreshToken, { expires: 7 });\n    return token;\n  };\n\n  const getToken = async () => {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    if (!refreshToken) {\n      return null;\n    }\n\n    const data = await refreshTokenRequest({ token: refreshToken });\n    if (data.accessToken) {\n      return addTokens({ accessToken: data.accessToken, refreshToken: data.refreshToken });\n    }\n\n    return null;\n  };\n\n  return {\n    getToken,\n    clearAllTokens,\n    addTokens,\n    accessToken,\n    refreshToken,\n  };\n}\n\nexport default useToken;\n","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useToken from '../../services/token';\n\nconst ProtectedRoute: FC<{ [name: string]: any }> = ({ children, ...rest }) => {\n  const { refreshToken } = useToken();\n  return (\n    <Route\n      {...rest}\n      render={\n        ({ location }) => (refreshToken\n          ? (children)\n          : (<Redirect to={{ pathname: '/login', state: { from: location } }} />))\n      }\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ProtectedRoute;\n","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useToken from '../../services/token';\n\nconst ProtectedFromAuthRoute: FC<{ [name: string]: any }> = ({ children, ...rest }) => {\n  const { refreshToken } = useToken();\n  return (\n    <Route\n      {...rest}\n      render={\n        () => (!refreshToken\n          ? (children)\n          : (<Redirect to=\"/\" />))\n      }\n    />\n  );\n};\n\nProtectedFromAuthRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ProtectedFromAuthRoute;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './header-button.module.css';\n\ntype THeaderButton = {\n  path: string;\n  text: string;\n};\n\nconst HeaderButton: FC<THeaderButton> = ({ children, path, text }) => (\n  <NavLink exact to={path} className={`${styles.button} text text_type_main-default text_color_inactive pl-5 pr-5 pb-4 pt-4`} activeClassName={styles.link_active}>\n    {children}\n    <span className=\"ml-2\">{text}</span>\n  </NavLink>\n);\n\nexport default HeaderButton;\n","import {\n  TypedUseSelectorHook,\n  useSelector as selectorHook,\n  useDispatch as dispatchHook,\n} from 'react-redux';\nimport { useLocation as locationHook } from 'react-router-dom';\nimport { RootState, AppDispatch } from './store';\nimport { TLocation } from './types';\n\nexport const useDispatch = () => dispatchHook<AppDispatch>();\nexport const useLocation = () => locationHook<TLocation>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n","import React from 'react';\nimport {\n  Logo, ProfileIcon, BurgerIcon, ListIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport HeaderButton from '../header-button/header-button';\nimport styles from './app-header.module.css';\nimport {\n  HEADER_CONSTRUCTOR_BUTTON_TEXT,\n  HEADER_ORDERS_BUTTON_TEXT,\n  HEADER_PROFILE_BUTTON_TEXT,\n} from '../../utils/constants';\nimport { useLocation } from '../../services/hooks';\n\nconst AppHeader = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <header className={`${styles.header} pt-4 pb-4`}>\n      <div className={styles.container}>\n        <nav>\n          <ul className={styles.menu}>\n            <li className=\"mr-2\">\n              <HeaderButton path=\"/\" text={HEADER_CONSTRUCTOR_BUTTON_TEXT}><BurgerIcon type={pathname === '/' ? 'primary' : 'secondary'} /></HeaderButton>\n            </li>\n            <li>\n              <HeaderButton path=\"/orders\" text={HEADER_ORDERS_BUTTON_TEXT}><ListIcon type={pathname === '/orders' ? 'primary' : 'secondary'} /></HeaderButton>\n            </li>\n          </ul>\n        </nav>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n\n        <HeaderButton path=\"/profile\" text={HEADER_PROFILE_BUTTON_TEXT}><ProfileIcon type={pathname === '/profile' ? 'primary' : 'secondary'} /></HeaderButton>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport styles from './loader.module.css';\n\nconst Loader = () => (\n  <div className={styles.loader}>\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport styles from './main.module.css';\nimport Loader from '../loader/loader';\n\nconst Main: FC<{ isLoading: boolean }> = ({ children, isLoading }) => (\n  <main className={`${styles.main} ${isLoading && styles.main_loader} pl-5 pr-5`}>\n    {isLoading ? <Loader /> : children}\n  </main>\n);\n\nexport default Main;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { FC, MouseEvent } from 'react';\nimport styles from './modal-overlay.module.css';\n\ntype TModalOverlay = {\n  isLockApp?: boolean;\n  handleClosePopup?: () => void;\n};\n\nconst ModalOverlay: FC<TModalOverlay> = ({ children, isLockApp, handleClosePopup }) => {\n  const handleOverlayClick = (e: MouseEvent<HTMLDivElement>): void => {\n    if (e.target === e.currentTarget && !isLockApp && handleClosePopup) {\n      handleClosePopup();\n    }\n  };\n\n  return (\n    <div className={styles.overlay} onMouseDown={handleOverlayClick}>\n      {children}\n    </div>\n  );\n};\n\nModalOverlay.defaultProps = {\n  isLockApp: false,\n  handleClosePopup: () => {},\n};\n\nexport default ModalOverlay;\n","import React, { useEffect, FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './modal.module.css';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\n\ntype TModal = {\n  title?: string;\n  handleClosePopup: () => void;\n};\n\nconst Modal: FC<TModal> = ({ children, title, handleClosePopup }) => {\n  useEffect(() => {\n    const closeByEscape: (e: any) => void = (e) => {\n      if (e.key === 'Escape') {\n        handleClosePopup();\n      }\n    };\n    document.addEventListener('keydown', closeByEscape);\n    return () => {\n      document.removeEventListener('keydown', closeByEscape);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(\n    <ModalOverlay handleClosePopup={handleClosePopup}>\n      <div className={`${styles.modal} pl-10 pt-10 pr-10`}>\n        <header className={`${styles.header}`}>\n          <h2 className={`${styles.title} text text_type_main-large`}>{title}</h2>\n          <CloseIcon type=\"primary\" onClick={handleClosePopup} />\n        </header>\n        {children}\n      </div>\n    </ModalOverlay>,\n    document.getElementById('react-modals')!,\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/done-animation.887b83be.gif\";","import React from 'react';\nimport styles from './order-details.module.css';\nimport donePath from '../../images/done-animation.gif';\nimport { useSelector } from '../../services/hooks';\n\nconst OrderDetails = () => {\n  const orderDetailsContent = useSelector((state) => state.popups.orderDetailsContent);\n\n  return (\n    <>\n      <p className={`${styles['order-id']} text text_type_digits-large mt-4 mb-8`}>{orderDetailsContent?.order?.number}</p>\n      <p className=\"text text_type_main-medium\">идентификатор заказа</p>\n      <img src={donePath} alt=\"Анимация успешного завершения заказа\" className={`${styles.image} mt-15 mb-15`} />\n      <p className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</p>\n      <p className=\"text text_type_main-default text_color_inactive mb-30\">Дождитесь готовности на орбитальной станции</p>\n    </>\n  );\n};\n\nexport default OrderDetails;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ingredient-details.module.css';\nimport { useSelector } from '../../services/hooks';\n\nconst IngredientDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const ingredient = useSelector((state) => (\n    state.ingredients.ingredients.find(({ _id }) => id === _id)\n  ));\n\n  const {\n    image_large,\n    name,\n    calories,\n    proteins,\n    fat,\n    carbohydrates,\n  } = ingredient || {};\n\n  return (\n    <>\n      <img src={image_large} alt={name} className={styles.image} />\n      <h3 className={`${styles.title} text text_type_main-medium mt-4 mb-8`}>{name}</h3>\n      <ul className={`${styles.nutrition} text text_type_main-default text_color_inactive mb-15`}>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Калории,ккал</span>\n          <span className=\"text text_type_digits-default\">{calories}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Белки, г</span>\n          <span className=\"text text_type_digits-default\">{proteins}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Жиры, г</span>\n          <span className=\"text text_type_digits-default\">{fat}</span>\n        </li>\n        <li className={styles.component}>\n          <span className=\"mb-2\">Углеводы, г</span>\n          <span className=\"text text_type_digits-default\">{carbohydrates}</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default IngredientDetails;\n","import React, { FC } from 'react';\nimport styles from './info-tooltip.module.css';\n\nconst InfoTooltip: FC<{ message: string }> = ({ message, children }) => (\n  <>\n    {children}\n    <h3 className={`${styles.title} text text_type_main-medium mt-10 mb-25`}>{message}</h3>\n  </>\n);\n\nexport default InfoTooltip;\n","import React from 'react';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './error-popup.module.css';\nimport { DEFAULT_ERR_MSG } from '../../utils/constants';\nimport InfoTooltip from '../info-tooltip/info-tooltip';\nimport { useSelector } from '../../services/hooks';\n\nconst ErrorPopup = () => {\n  const errorPopupContent = useSelector((state) => state.popups.errorPopupContent);\n\n  return (\n    <InfoTooltip message={errorPopupContent ? errorPopupContent.message : DEFAULT_ERR_MSG}>\n      <div className={styles.error}>\n        <CloseIcon type=\"error\" />\n      </div>\n    </InfoTooltip>\n  );\n};\n\nexport default ErrorPopup;\n","// burger-constructor\nexport const ADD_INGREDIENT_TO_CONSTRUCTOR = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR = 'REMOVE_INGREDIENT_TO_CONSTRUCTOR';\nexport const REPLACE_BUN_IN_CONSTRUCTOR = 'REPLACE_BUN_IN_CONSTRUCTOR';\nexport const UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER = 'UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER';\nexport const COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER = 'COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER';\nexport const REPLACE_ITEMS_IN_DRAGGING_CONTAINER = 'REPLACE_ITEMS_IN_DRAGGING_CONTAINER';\nexport const RESET_DRAGGING_CONTAINER = 'RESET_DRAGGING_CONTAINER';\nexport const RESET_CONSTRUCTOR = 'RESET_CONSTRUCTOR';\n\n// burger-ingredients\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\nexport const INCREASE_INGREDIENT = 'INCREASE_INGREDIENT';\nexport const DECREASE_INGREDIENT = 'DECREASE_INGREDIENT';\nexport const RESET_INGREDIENTS_COUNT = 'RESET_INGREDIENTS_COUNT';\n\n// popups\nexport const GET_ORDER_DETAILS_REQUEST = 'GET_ORDER_DETAILS_REQUEST';\nexport const GET_ORDER_DETAILS_SUCCESS = 'GET_ORDER_DETAILS_SUCCESS';\nexport const GET_ORDER_DETAILS_FAILED = 'GET_ORDER_DETAILS_FAILED';\nexport const CLOSE_ORDER_DETAILS = 'CLOSE_ORDER_DETAILS';\nexport const OPEN_ERROR_POPUP = 'OPEN_ERROR_POPUP';\nexport const CLOSE_ERROR_POPUP = 'CLOSE_ERROR_POPUP';\nexport const OPEN_SUCCESS_POPUP = 'OPEN_SUCCESS_POPUP';\nexport const CLOSE_SUCCESS_POPUP = 'CLOSE_SUCCESS_POPUP';\n\n// profile\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED = 'GET_USER_FAILED';\nexport const EDIT_USER_REQUEST = 'EDIT_USER_REQUEST';\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS';\nexport const EDIT_USER_FAILED = 'EDIT_USER_FAILED';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED';\n\n// login\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\n// register\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\n\n// forgot-password\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAILED = 'FORGOT_PASSWORD_FAILED';\n\n// reset-password\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAILED = 'RESET_PASSWORD_FAILED';\n","import { sendOrderRequest } from '../norma-api';\nimport {\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  CLOSE_ORDER_DETAILS,\n  OPEN_ERROR_POPUP,\n  CLOSE_ERROR_POPUP,\n  OPEN_SUCCESS_POPUP,\n  CLOSE_SUCCESS_POPUP,\n} from './action-types';\nimport { TSuccessResetPassword } from '../types/data';\nimport { AppDispatch } from '../store';\n\nexport const closeOrderDetails = () => ({\n  type: CLOSE_ORDER_DETAILS,\n});\n\nexport const openErrorPopup = (error: { message?: string }) => ({\n  type: OPEN_ERROR_POPUP,\n  payload: { message: error.message },\n});\n\nexport const closeErrorPopup = () => ({\n  type: CLOSE_ERROR_POPUP,\n});\n\nexport const openSuccessPopup = (successData: TSuccessResetPassword) => ({\n  type: OPEN_SUCCESS_POPUP,\n  payload: { message: successData.message },\n});\n\nexport const closeSuccessPopup = () => ({\n  type: CLOSE_SUCCESS_POPUP,\n});\n\nexport const getOrderDetails = (ingredients: ReadonlyArray<string>) => (\n  dispatch: AppDispatch,\n) => {\n  dispatch({ type: GET_ORDER_DETAILS_REQUEST });\n  sendOrderRequest({ ingredients })\n    .then((res) => {\n      dispatch({\n        type: GET_ORDER_DETAILS_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: GET_ORDER_DETAILS_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n","import React from 'react';\nimport { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './success-popup.module.css';\nimport { DEFAULT_SUCCESS_MSG } from '../../utils/constants';\nimport InfoTooltip from '../info-tooltip/info-tooltip';\nimport { useSelector } from '../../services/hooks';\n\nconst SuccessPopup = () => {\n  const successPopupContent = useSelector((state) => state.popups.successPopupContent);\n\n  return (\n    <InfoTooltip message={successPopupContent ? successPopupContent.message : DEFAULT_SUCCESS_MSG}>\n      <div className={styles.success}>\n        <CheckMarkIcon type=\"success\" />\n      </div>\n    </InfoTooltip>\n  );\n};\n\nexport default SuccessPopup;\n","import React, { useCallback, useMemo } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport Modal from '../modal/modal';\nimport OrderDetails from '../order-details/order-details';\nimport IngredientDetails from '../ingredient-details/ingredient-details';\nimport ErrorPopup from '../error-popup/error-popup';\nimport { closeOrderDetails, closeErrorPopup, closeSuccessPopup } from '../../services/actions/popups';\nimport SuccessPopup from '../success-popup/success-popup';\nimport { useDispatch, useSelector, useLocation } from '../../services/hooks';\n\nconst Popups = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const background = location.state ? location.state.background : null;\n  const {\n    isOrderDetailsOpen, isErrorPopupOpen, isSuccessPopupOpen,\n  } = useSelector((state) => state.popups);\n\n  const handleCloseRoutePopup = useCallback(\n    () => {\n      history.replace({ ...background, state: null });\n    },\n    [history, background],\n  );\n\n  const handleClosePopup = useCallback(\n    () => {\n      dispatch(closeOrderDetails());\n      dispatch(closeErrorPopup());\n      dispatch(closeSuccessPopup());\n    },\n    [],\n  );\n\n  const isPopupOpen = useMemo(\n    () => isOrderDetailsOpen || isErrorPopupOpen || isSuccessPopupOpen,\n    [isOrderDetailsOpen, isErrorPopupOpen, isSuccessPopupOpen],\n  );\n\n  if (background) {\n    return (\n      <Route path=\"/ingredients/:id\">\n        <Modal title=\"Детали ингредиента\" handleClosePopup={handleCloseRoutePopup}>\n          <IngredientDetails />\n        </Modal>\n      </Route>\n    );\n  }\n\n  return isPopupOpen\n    ? (\n      <Modal handleClosePopup={handleClosePopup}>\n        {isOrderDetailsOpen && <OrderDetails />}\n        {isErrorPopupOpen && <ErrorPopup />}\n        {isSuccessPopupOpen && <SuccessPopup />}\n      </Modal>\n    )\n    : null;\n};\n\nexport default Popups;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDrag } from 'react-dnd';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './ingredient.module.css';\nimport { TIngredient } from '../../services/types/data';\nimport { useLocation } from '../../services/hooks';\n\nconst Ingredient: FC<{ card: TIngredient }> = ({ card }) => {\n  const location = useLocation();\n  const [, dragRef] = useDrag({\n    type: 'ingredients',\n    item: card,\n  });\n\n  return (\n    <li ref={dragRef}>\n      <Link className={styles.card} to={{ pathname: `/ingredients/${card._id}`, state: { background: location, id: card._id } }}>\n        <img src={card.image} alt={card.name} className={styles.image} />\n        <p className={`${styles.price} text text_type_digits-default mt-2 mb-2`}>\n          <span className=\"mr-2\">{card.price}</span>\n          <CurrencyIcon type=\"primary\" />\n        </p>\n        <p className={`${styles.name} text text_type_main-default`}>{card.name}</p>\n        {\n          card.qty\n            ? (\n              <div className=\"styles.counter styles.counter_active\">\n                <Counter count={card.qty} size=\"default\" />\n              </div>\n            )\n            : null\n        }\n      </Link>\n    </li>\n  );\n};\n\nexport default Ingredient;\n","import React, { forwardRef } from 'react';\nimport Ingredient from '../ingredient/ingredient';\nimport styles from './ingredients-category.module.css';\nimport { TIngredient } from '../../services/types/data';\n\ntype TIngredientsCategory = {\n  cards: ReadonlyArray<TIngredient>;\n  title: string;\n};\n\nconst IngredientsCategory = forwardRef<HTMLDivElement, TIngredientsCategory>(\n  ({ cards, title }, ref) => (\n    <div className={styles.container}>\n      <h2 className=\"text text_type_main-medium\" ref={ref}>{title}</h2>\n      {\n        cards && (\n          <ul className={`${styles.list} mt-6 mb-10 ml-4 mr-4`}>\n            {cards.map((card) => <Ingredient key={card._id} card={card} />)}\n          </ul>\n        )\n      }\n    </div>\n  ),\n);\n\nexport default IngredientsCategory;\n","import React, {\n  useState, useRef, useEffect, useMemo,\n} from 'react';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './burger-ingredients.module.css';\nimport IngredientsCategory from '../ingredients-category/ingredients-category';\nimport { useSelector } from '../../services/hooks';\nimport { TIngredient } from '../../services/types/data';\n\nconst BurgerIngredients = () => {\n  const { ingredients } = useSelector((state) => state.ingredients);\n\n  function filterIngredients(data: ReadonlyArray<TIngredient>) {\n    const res: { [name: string]: TIngredient[] } = {};\n    data.forEach((item) => {\n      if (res[item.type]) {\n        res[item.type].push(item);\n      } else {\n        res[item.type] = [item];\n      }\n    });\n    return res;\n  }\n\n  const { bun, sauce, main } = useMemo(\n    () => filterIngredients(ingredients),\n    [ingredients],\n  );\n  const [current, setCurrent] = useState('bun');\n\n  const bunRef = useRef<HTMLDivElement>(null);\n  const sauceRef = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const handleScroll = () => {\n    window.requestAnimationFrame(() => {\n      const boundingRectY = [\n        {\n          type: 'bun',\n          top: bunRef.current?.getBoundingClientRect().top,\n        },\n        {\n          type: 'sauce',\n          top: sauceRef.current?.getBoundingClientRect().top,\n        },\n        {\n          type: 'main',\n          top: mainRef.current?.getBoundingClientRect().top,\n        },\n      ];\n\n      const closestCategory = boundingRectY.find((category, index, array) => (\n        Number(category.top) >= 0 || index === array.length - 1\n      ));\n      if (closestCategory) setCurrent(closestCategory.type);\n    });\n  };\n\n  useEffect(() => {\n    contentRef.current?.addEventListener('scroll', handleScroll);\n    return () => contentRef.current?.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleTabClick = (value: string) => {\n    let currentCategory = null;\n    setCurrent(value);\n    switch (value) {\n      case 'bun':\n        currentCategory = bunRef.current;\n        break;\n      case 'sauce':\n        currentCategory = sauceRef.current;\n        break;\n      case 'main':\n        currentCategory = mainRef.current;\n        break;\n      default:\n        currentCategory = null;\n    }\n\n    return currentCategory && currentCategory.scrollIntoView();\n  };\n\n  return (\n    <section className={`${styles.container} pt-10`}>\n      <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\n      <div className={`${styles.tab} mt-5 mb-10`}>\n        <Tab value=\"bun\" active={current === 'bun'} onClick={handleTabClick}>\n          Булки\n        </Tab>\n        <Tab value=\"sauce\" active={current === 'sauce'} onClick={handleTabClick}>\n          Соусы\n        </Tab>\n        <Tab value=\"main\" active={current === 'main'} onClick={handleTabClick}>\n          Начинки\n        </Tab>\n      </div>\n      <div className={styles.content} ref={contentRef}>\n        <IngredientsCategory title=\"Булки\" cards={bun || []} ref={bunRef} />\n        <IngredientsCategory title=\"Соусы\" cards={sauce || []} ref={sauceRef} />\n        <IngredientsCategory title=\"Начинки\" cards={main || []} ref={mainRef} />\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerIngredients;\n","import React, { FC } from 'react';\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './bun-constructor-element.module.css';\nimport { TConstructorElement } from '../../services/types/ui-components';\n\ntype TBunConstructorElement = Omit<TConstructorElement, 'isLocked' | 'handleClose'> & { className?: string | null };\n\nconst BunConstructorElement: FC<TBunConstructorElement> = ({\n  className,\n  type,\n  text,\n  price,\n  thumbnail,\n}) => (\n  <li className={`${className} ${styles['list-item']}`}>\n    <ConstructorElement\n      type={type}\n      isLocked\n      text={text + (type === 'top' ? ' (верх)' : ' (низ)')}\n      price={price}\n      thumbnail={thumbnail}\n    />\n  </li>\n);\n\nBunConstructorElement.defaultProps = {\n  className: null,\n};\n\nexport default BunConstructorElement;\n","import { getIngredientsRequest } from '../norma-api';\nimport { openErrorPopup } from './popups';\nimport {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  INCREASE_INGREDIENT,\n  DECREASE_INGREDIENT,\n  RESET_INGREDIENTS_COUNT,\n} from './action-types';\nimport { TIngredient } from '../types/data';\nimport { AppDispatch } from '../store';\n\nexport const increaseIngredient = (ingredient: Pick<TIngredient, '_id'>) => ({\n  type: INCREASE_INGREDIENT,\n  payload: ingredient,\n});\n\nexport const decreaseIngredient = (ingredient: Pick<TIngredient, '_id'>) => ({\n  type: DECREASE_INGREDIENT,\n  payload: ingredient,\n});\n\nexport const resetIngredientsCount = () => ({\n  type: RESET_INGREDIENTS_COUNT,\n});\n\nexport const getIngredients = () => (dispatch: AppDispatch) => {\n  dispatch({\n    type: GET_INGREDIENTS_REQUEST,\n  });\n  getIngredientsRequest()\n    .then((res) => {\n      dispatch({\n        type: GET_INGREDIENTS_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: GET_INGREDIENTS_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useRef, FC } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './main-constructor-element.module.css';\nimport {\n  updateConstructorFromDraggingContainer,\n  removeIngredientFromConstructor,\n  copyConstructorToDraggingContainer,\n  replaceItemsInDraggingContainer,\n  resetDraggingContainer,\n} from '../../services/actions/burger-constructor';\nimport { decreaseIngredient } from '../../services/actions/burger-ingredients';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { TConstructorElement } from '../../services/types/ui-components';\nimport { TMainIngredient } from '../../services/types/data';\n\ntype TMainConstructorElement = Pick<TConstructorElement, 'text' | 'price' | 'thumbnail'>\n& Pick<TMainIngredient, '_cartId' | '_id'>;\n\nconst MainConstructorElement: FC<TMainConstructorElement> = ({\n  text, price, thumbnail, _cartId, _id,\n}) => {\n  const { draggingMainIngredients } = useSelector((state) => state.burgerConstructor);\n  const ref = useRef<HTMLLIElement>(null);\n  const dispatch = useDispatch();\n\n  const [{ isDragging }, drag] = useDrag({\n    type: 'constructor',\n    item: () => {\n      dispatch(copyConstructorToDraggingContainer());\n      return { _cartId };\n    },\n    collect: (monitor) => ({ isDragging: monitor.isDragging() }),\n    end(item, monitor) {\n      const didDrop = monitor.didDrop();\n      if (didDrop) {\n        dispatch(updateConstructorFromDraggingContainer());\n      }\n      dispatch(resetDraggingContainer());\n    },\n  });\n\n  const [, drop] = useDrop({\n    accept: 'constructor',\n    hover(item: { _cartId: string }, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      if (_cartId === item._cartId) {\n        return;\n      }\n\n      const index = draggingMainIngredients.findIndex((ingred) => ingred._cartId === item._cartId);\n      const hoverIndex = draggingMainIngredients.findIndex((ingred) => ingred._cartId === _cartId);\n\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const hoverBottomBound = (hoverBoundingRect.bottom - hoverBoundingRect.top) * 0.2;\n      const hoverTopBound = (hoverBoundingRect.bottom - hoverBoundingRect.top) * 0.8;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset ? clientOffset.y - hoverBoundingRect.top : 0;\n\n      if (\n        (index < hoverIndex && hoverClientY >= hoverBottomBound)\n        || (index > hoverIndex && hoverClientY <= hoverTopBound)\n      ) {\n        dispatch(replaceItemsInDraggingContainer({\n          initialIndex: index,\n          targetIndex: hoverIndex,\n        }));\n      }\n    },\n  });\n\n  const handleDeleteElement = () => {\n    dispatch(removeIngredientFromConstructor({ _cartId, price }));\n    dispatch(decreaseIngredient({ _id }));\n  };\n  drag(drop(ref));\n\n  return (\n    <li className={`${styles['list-item']} ${isDragging && styles['list-item_dragging']} pl-8`} ref={ref}>\n      <span className={`${styles.icon} mr-2`}><DragIcon type=\"primary\" /></span>\n      <ConstructorElement\n        isLocked={false}\n        text={text}\n        price={price}\n        thumbnail={thumbnail}\n        handleClose={handleDeleteElement}\n      />\n    </li>\n  );\n};\n\nexport default MainConstructorElement;\n","import uniqid from 'uniqid';\nimport {\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  REPLACE_BUN_IN_CONSTRUCTOR,\n  UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n  COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n  REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  RESET_DRAGGING_CONTAINER,\n  RESET_CONSTRUCTOR,\n} from './action-types';\nimport { TIngredient, TMainIngredient } from '../types/data';\n\nexport const addIngredientToConstructor = (ingredient: TIngredient) => ({\n  type: ADD_INGREDIENT_TO_CONSTRUCTOR,\n  payload: { ...ingredient, _cartId: uniqid() },\n});\n\nexport const removeIngredientFromConstructor = (ingredient: Pick<TMainIngredient, '_cartId' | 'price'>) => ({\n  type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  payload: ingredient,\n});\n\nexport const replaceBunInConstructor = (bun: TIngredient) => ({\n  type: REPLACE_BUN_IN_CONSTRUCTOR,\n  payload: bun,\n});\n\nexport const updateConstructorFromDraggingContainer = () => ({\n  type: UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n});\n\nexport const copyConstructorToDraggingContainer = () => ({\n  type: COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n});\n\nexport const replaceItemsInDraggingContainer = (\n  replacingItems: { initialIndex: number, targetIndex: number },\n) => ({\n  type: REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  payload: replacingItems,\n});\n\nexport const resetDraggingContainer = () => ({\n  type: RESET_DRAGGING_CONTAINER,\n});\n\nexport const resetConstructor = () => ({\n  type: RESET_CONSTRUCTOR,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport Loader from '../loader/loader';\n\nconst ModalLoader = () => ReactDOM.createPortal(\n  <ModalOverlay isLockApp>\n    <Loader />\n  </ModalOverlay>,\n  document.getElementById('react-modals')!,\n);\n\nexport default ModalLoader;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDrop } from 'react-dnd';\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport BunConstructorElement from '../bun-constructor-element/bun-constructor-element';\nimport MainConstructorElement from '../main-constructor-element/main-constructor-element';\nimport styles from './burger-constructor.module.css';\nimport {\n  addIngredientToConstructor, replaceBunInConstructor, resetConstructor,\n} from '../../services/actions/burger-constructor';\nimport { increaseIngredient, decreaseIngredient, resetIngredientsCount } from '../../services/actions/burger-ingredients';\nimport { getOrderDetails, openErrorPopup } from '../../services/actions/popups';\nimport {\n  BUN_REQUIRED_ERR_MSG,\n  CONSTRUCTOR_DEFAULT_TEXT,\n  CONSTRUCTOR_BUTTON_TEXT,\n  CONSTRUCTOR_LOADING_BUTTON_TEXT,\n} from '../../utils/constants';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport useToken from '../../services/token';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { TIngredient } from '../../services/types/data';\n\nconst BurgerConstructor = () => {\n  const { refreshToken } = useToken();\n  const history = useHistory();\n  const {\n    mainIngredients, draggingMainIngredients, bun, totalPrice,\n  } = useSelector((state) => state.burgerConstructor);\n  const { orderRequest, orderDetailsContent } = useSelector((store) => store.popups);\n  const dispatch = useDispatch();\n  const [{ isOver }, dropTarget] = useDrop({\n    accept: 'ingredients',\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    drop(card: TIngredient) {\n      onDropHandler(card);\n    },\n  });\n\n  const onDropHandler = (item: TIngredient) => {\n    if (bun && item._id === bun._id) {\n      return null;\n    }\n    if (item.type === 'bun') {\n      if (bun) {\n        dispatch(decreaseIngredient(bun));\n      }\n      dispatch(replaceBunInConstructor(item));\n      dispatch(increaseIngredient({ _id: item._id }));\n      return item;\n    }\n    if (!bun) {\n      dispatch(openErrorPopup({ message: BUN_REQUIRED_ERR_MSG }));\n      return null;\n    }\n    dispatch(increaseIngredient({ _id: item._id }));\n    dispatch(addIngredientToConstructor(item));\n    return item;\n  };\n\n  useEffect(() => {\n    if (!orderDetailsContent) {\n      return;\n    }\n    dispatch(resetConstructor());\n    dispatch(resetIngredientsCount());\n  }, [orderDetailsContent]);\n\n  const clickOrderBtn = () => {\n    if (refreshToken && bun) {\n      return dispatch(getOrderDetails([bun, ...mainIngredients].map((ingr) => ingr._id)));\n    }\n    return history.push('/login');\n  };\n\n  const targetList = draggingMainIngredients.length ? draggingMainIngredients : mainIngredients;\n\n  return (\n    <section\n      className={\n        `${styles.constructor}\n        ${isOver && styles.constructor_active}\n        ${!bun && styles.constructor_epmty}\n        mt-10 pt-15 pb-15 pl-4 pr-4`\n      }\n      ref={dropTarget}\n    >\n      {\n        bun\n          ? (\n            <>\n              <ul className={`${styles['order-list']}`}>\n                <BunConstructorElement\n                  className=\"pl-8\"\n                  type=\"top\"\n                  text={bun.name}\n                  price={bun.price}\n                  thumbnail={bun.image_mobile}\n                />\n                {\n                  mainIngredients.length ? (\n                    <ul className={`${styles['order-list']} ${styles['order-list-main']} pr-2`}>\n                      {targetList.map((card) => (\n                        <MainConstructorElement\n                          key={card._cartId}\n                          _id={card._id}\n                          _cartId={card._cartId}\n                          text={card.name}\n                          price={card.price}\n                          thumbnail={card.image_mobile}\n                        />\n                      ))}\n                    </ul>\n                  ) : null\n                }\n                <BunConstructorElement\n                  className=\"pl-8\"\n                  type=\"bottom\"\n                  text={bun.name}\n                  price={bun.price}\n                  thumbnail={bun.image_mobile}\n                />\n              </ul>\n              <div className={`${styles['info-container']} mt-10 mr-4`}>\n                <p className={`${styles.price} text text_type_digits-medium mr-10`}>\n                  <span className=\"mr-2\">{totalPrice}</span>\n                  <CurrencyIcon type=\"primary\" />\n                </p>\n                <Button type=\"primary\" size=\"large\" onClick={clickOrderBtn}>\n                  {orderRequest ? CONSTRUCTOR_LOADING_BUTTON_TEXT : CONSTRUCTOR_BUTTON_TEXT}\n                </Button>\n              </div>\n              {orderRequest && <ModalLoader />}\n            </>\n          )\n          : (\n            <p className={`${styles['background-text']} text text_type_main-medium`}>{CONSTRUCTOR_DEFAULT_TEXT}</p>\n          )\n      }\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","import React from 'react';\nimport Main from '../components/main/main';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\nimport { useSelector } from '../services/hooks';\n\nconst Home = () => {\n  const { ingredientsRequest } = useSelector((store) => store.ingredients);\n\n  return (\n    <Main isLoading={ingredientsRequest}>\n      <BurgerIngredients />\n      <BurgerConstructor />\n    </Main>\n  );\n};\n\nexport default Home;\n","import React, {\n  useState, useRef, useEffect, FC,\n} from 'react';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TInput, TIcons } from '../../services/types/ui-components';\n\nconst PasswordPlaceholderInput: FC<TInput> = ({\n  type, placeholder, value, name, size, onChange,\n}) => {\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [passwordIcon, setPasswordIcon] = useState<TIcons>('ShowIcon');\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    if (passwordRef && passwordRef.current) {\n      passwordRef.current.minLength = 6;\n    }\n  }, [passwordRef]);\n\n  function onIconClick() {\n    const icon = passwordIcon === 'ShowIcon' ? 'HideIcon' : 'ShowIcon';\n    setPasswordIcon(icon);\n    if (passwordRef && passwordRef.current) {\n      passwordRef.current.type = passwordIcon === 'ShowIcon' ? 'text' : 'password';\n      passwordRef.current.focus();\n    }\n  }\n\n  return (\n    <Input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      name={name}\n      error={!isValid}\n      icon={passwordIcon}\n      size={size}\n      onChange={(e) => {\n        onChange(e);\n        setIsValid(e.currentTarget.validity.valid);\n      }}\n      onIconClick={() => onIconClick()}\n      ref={passwordRef}\n      errorText=\"Некорректный пароль\"\n    />\n  );\n};\n\nexport default PasswordPlaceholderInput;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './credentials-form.module.css';\nimport PasswordPlaceholderInput from '../password-placeholder-input/password-placeholder-input';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport { TCredentialsForm } from '../../services/types';\n\nconst CredentialsForm: FC<TCredentialsForm> = ({\n  title, inputs, buttonText, navs, onSubmit, isLoading,\n}) => (\n  <section className={styles.container}>\n    <h1 className={`${styles.title} text text_type_main-medium`}>{title}</h1>\n    <form className={`${styles.form} mt-6 mb-20`} onSubmit={onSubmit}>\n      {inputs.map(({\n        type, placeholder, value, name, icon, size, onChange, onIconClick, ref,\n      }) => (name === 'password'\n        ? (\n          <PasswordPlaceholderInput\n            key={name}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            size={size}\n            onChange={onChange}\n          />\n        )\n        : (\n          <Input\n            key={name}\n            type={type}\n            placeholder={placeholder}\n            value={value}\n            name={name}\n            icon={icon}\n            size={size}\n            onChange={onChange}\n            onIconClick={onIconClick}\n            ref={ref}\n          />\n        )))}\n      <Button type=\"primary\" size=\"medium\">{buttonText}</Button>\n    </form>\n    {navs.map(({ captionText, linkTo, linkText }) => (\n      <p key={linkText} className={`${styles.nav} text text_type_main-default text_color_inactive`}>\n        <span>{captionText}</span>\n        <Link className={`${styles.link} ml-2`} to={linkTo}>{linkText}</Link>\n      </p>\n    ))}\n    {isLoading && <ModalLoader />}\n  </section>\n);\n\nexport default CredentialsForm;\n","import { getUserRequest, editUserRequest, logoutRequest } from '../norma-api';\nimport { openErrorPopup } from './popups';\nimport { TOKEN_ERR_MSG } from '../../utils/constants';\nimport {\n  SET_USER,\n  CLEAR_USER,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  EDIT_USER_REQUEST,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAILED,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { TUser } from '../types/data';\nimport { AppDispatch } from '../store';\nimport { TProfileForm, TCallback } from '../types';\n\nexport const setUser = (user: TUser) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const clearUser = () => ({\n  type: CLEAR_USER,\n});\n\nexport const getUser = () => (dispatch: AppDispatch) => {\n  dispatch({ type: GET_USER_REQUEST });\n  const { getToken } = useToken();\n  return getToken()\n    .then((token) => {\n      if (token) {\n        return getUserRequest(token);\n      }\n      throw new Error(TOKEN_ERR_MSG);\n    })\n    .then(({ user }) => {\n      dispatch({ type: GET_USER_SUCCESS, payload: user });\n      return user;\n    })\n    .catch((err) => {\n      dispatch({ type: GET_USER_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n\nexport const editUser = (form: TProfileForm) => (dispatch: AppDispatch) => {\n  dispatch({ type: EDIT_USER_REQUEST });\n  const { getToken } = useToken();\n  getToken()\n    .then((token) => {\n      if (token) {\n        return editUserRequest(form, token);\n      }\n      throw new Error(TOKEN_ERR_MSG);\n    })\n    .then(({ user }) => {\n      dispatch({ type: EDIT_USER_SUCCESS, payload: user });\n    })\n    .catch((err) => {\n      dispatch({ type: EDIT_USER_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n\nexport const signOut = (cb: TCallback) => (dispatch: AppDispatch) => {\n  dispatch({ type: LOGOUT_REQUEST });\n  const { refreshToken, clearAllTokens } = useToken();\n  logoutRequest({ token: refreshToken })\n    .then(() => {\n      clearAllTokens();\n      dispatch(clearUser());\n      dispatch({ type: LOGOUT_SUCCESS });\n      cb();\n    })\n    .catch((err) => {\n      dispatch({ type: LOGOUT_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n","import { loginRequest } from '../norma-api';\nimport { openErrorPopup } from './popups';\nimport { setUser } from './profile';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { AppDispatch } from '../store';\nimport { TLoginForm, TCallback } from '../types';\n\nexport const signIn = (form: TLoginForm, cb: TCallback) => (dispatch: AppDispatch) => {\n  dispatch({ type: LOGIN_REQUEST });\n  const { addTokens } = useToken();\n  loginRequest(form)\n    .then((data) => {\n      const { user, accessToken, refreshToken } = data;\n      addTokens({ accessToken, refreshToken });\n      dispatch(setUser(user));\n      dispatch({ type: LOGIN_SUCCESS });\n      cb();\n    })\n    .catch((err) => {\n      dispatch({ type: LOGIN_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { signIn } from '../services/actions/login';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { loginRequest } = useSelector((state) => state.login);\n  const history = useHistory();\n  const { state } = useLocation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(signIn({ email, password }, () => history.replace(state?.from || '/')));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Вход',\n    inputs: [\n      {\n        type: 'email',\n        placeholder: 'Email',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n      {\n        type: 'password',\n        placeholder: 'Пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n    ],\n    buttonText: 'Войти',\n    navs: [\n      { captionText: 'Вы — новый пользователь?', linkTo: '/register', linkText: 'Зарегистрироваться' },\n      { captionText: 'Забыли пароль?', linkTo: '/forgot-password', linkText: 'Восстановить пароль' },\n    ],\n    onSubmit,\n    isLoading: loginRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default Login;\n","import { registerRequest } from '../norma-api';\nimport { openErrorPopup } from './popups';\nimport { setUser } from './profile';\nimport {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n} from './action-types';\nimport useToken from '../token';\nimport { AppDispatch } from '../store';\nimport { TRegisterForm, TCallback } from '../types';\n\nexport const signUp = (form: TRegisterForm, cb: TCallback) => (dispatch: AppDispatch) => {\n  dispatch({ type: REGISTER_REQUEST });\n  const { addTokens } = useToken();\n  registerRequest(form)\n    .then((data) => {\n      const { user, accessToken, refreshToken } = data;\n      addTokens({ accessToken, refreshToken });\n      dispatch(setUser(user));\n      dispatch({ type: REGISTER_SUCCESS });\n      cb();\n    })\n    .catch((err) => {\n      dispatch({ type: REGISTER_FAILED });\n      dispatch(openErrorPopup(err));\n    });\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { signUp } from '../services/actions/register';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { registerRequest } = useSelector((state) => state.register);\n  const history = useHistory();\n  const { state } = useLocation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(signUp({ name, email, password }, () => history.replace(state?.from || '/')));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Регистрация',\n    inputs: [\n      {\n        type: 'text',\n        placeholder: 'Имя',\n        value: name,\n        name: 'name',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setName(e.target.value),\n      },\n      {\n        type: 'email',\n        placeholder: 'Email',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n      {\n        type: 'password',\n        placeholder: 'Пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n    ],\n    buttonText: 'Зарегистрироваться',\n    navs: [\n      { captionText: 'Уже зарегистрированы?', linkTo: '/login', linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: registerRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default Register;\n","import Cookies from 'js-cookie';\nimport { forgotPasswordRequest } from '../norma-api';\nimport { openErrorPopup, openSuccessPopup } from './popups';\nimport {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILED,\n} from './action-types';\nimport { AppDispatch } from '../store';\nimport { TForgotPasswordForm, TCallback } from '../types';\n\nexport const sendResetEmail = (\n  (form: TForgotPasswordForm, cb: TCallback) => (dispatch: AppDispatch) => {\n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\n\n    return forgotPasswordRequest(form)\n      .then((data) => {\n        dispatch({ type: FORGOT_PASSWORD_SUCCESS });\n        dispatch(openSuccessPopup(data));\n        Cookies.set('passwordResetAccess', 'true', { expires: 1 / 24 / 12 });\n        cb();\n      })\n      .catch((err) => {\n        dispatch({ type: FORGOT_PASSWORD_FAILED });\n        dispatch(openErrorPopup(err));\n      });\n  });\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { sendResetEmail } from '../services/actions/forgot-password';\nimport { useSelector, useDispatch } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n  const { forgotPasswordRequest } = useSelector((state) => state.forgotPassword);\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n\n  function onSubmit(evt: TSubmitEvent) {\n    evt.preventDefault();\n    dispatch(sendResetEmail(\n      { email },\n      () => history.push({ pathname: '/reset-password', state: { from: history.location } }),\n    ));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Восстановление пароля',\n    inputs: [\n      {\n        type: 'email',\n        placeholder: 'Укажите e-mail',\n        value: email,\n        name: 'email',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setEmail(e.target.value),\n      },\n    ],\n    buttonText: 'Восстановить',\n    navs: [\n      { captionText: 'Вспомнили пароль?', linkTo: '/login', linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: forgotPasswordRequest,\n  };\n\n  return (\n    <CredentialsForm {...formConfig} />\n  );\n};\n\nexport default ForgotPassword;\n","import { resetPasswordRequest } from '../norma-api';\nimport { openErrorPopup, openSuccessPopup } from './popups';\nimport {\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED,\n} from './action-types';\nimport { AppDispatch } from '../store';\nimport { TCallback, TResetPasswordForm } from '../types';\n\nexport const resetPassword = (\n  (form: TResetPasswordForm, cb: TCallback) => (dispatch: AppDispatch) => {\n    dispatch({ type: RESET_PASSWORD_REQUEST });\n    resetPasswordRequest(form)\n      .then((data) => {\n        dispatch({ type: RESET_PASSWORD_SUCCESS });\n        dispatch(openSuccessPopup(data));\n        cb();\n      })\n      .catch((err) => {\n        dispatch({ type: RESET_PASSWORD_FAILED });\n        dispatch(openErrorPopup(err));\n      });\n  });\n","import React, { useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport CredentialsForm from '../components/credentials-form/credentials-form';\nimport { resetPassword } from '../services/actions/reset-password';\nimport { useSelector, useDispatch, useLocation } from '../services/hooks';\nimport { TCredentialsForm, TSubmitEvent, TInputCnangeEvent } from '../services/types';\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const { resetPasswordRequest } = useSelector((state) => state.resetPassword);\n  const history = useHistory();\n  const location = useLocation();\n  const passwordResetAccess = location.state?.from?.pathname === '/forgot-password';\n\n  const [token, setToken] = useState('');\n  const [password, setPassword] = useState('');\n\n  function onSubmit(e: TSubmitEvent) {\n    e.preventDefault();\n    dispatch(resetPassword({ token, password }, () => history.replace('/login')));\n  }\n\n  const formConfig: TCredentialsForm = {\n    title: 'Восстановление пароля',\n    inputs: [\n      {\n        type: 'password',\n        placeholder: 'Введите новый пароль',\n        value: password,\n        name: 'password',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setPassword(e.target.value),\n      },\n      {\n        type: 'text',\n        placeholder: 'Введите код из письма',\n        value: token,\n        name: 'token',\n        size: 'default',\n        onChange: (e: TInputCnangeEvent) => setToken(e.target.value),\n      },\n    ],\n    buttonText: 'Сохранить',\n    navs: [\n      { captionText: 'Вспомнили пароль?', linkTo: '/login', linkText: 'Войти' },\n    ],\n    onSubmit,\n    isLoading: resetPasswordRequest,\n  };\n\n  return passwordResetAccess\n    ? (<CredentialsForm {...formConfig} />)\n    : (<Redirect to=\"/forgot-password\" />);\n};\n\nexport default ResetPassword;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './edit-user.module.css';\nimport { editUser } from '../../services/actions/profile';\nimport ModalLoader from '../modal-loader/modal-loader';\nimport { useSelector, useDispatch } from '../../services/hooks';\nimport { TUser } from '../../services/types/data';\n\ntype TStateIsFieldsEdit = {\n  [name: string]: boolean;\n};\n\ntype TStateFormValues = {\n  [name: string]: string;\n};\n\nconst EditUser = () => {\n  const dispatch = useDispatch();\n  const { user, editUserRequest, logoutRequest } = useSelector((state) => state.profile);\n  const [isFieldsEdit, setIsFieldsEdit] = useState<TStateIsFieldsEdit>({});\n  const [formValues, setFormValues] = useState<TStateFormValues>({\n    name: '',\n    email: '',\n    password: '******',\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFormValues({ ...formValues, ...user });\n    }\n  }, [user]);\n\n  const onIconClick = useCallback(\n    (evt) => {\n      const target = evt.currentTarget.previousElementSibling;\n      const { name }: { name: keyof TUser } = target;\n      const value = !isFieldsEdit[name];\n      if (user) {\n        setFormValues({\n          ...formValues,\n          [name]: user[name],\n        });\n        setIsFieldsEdit({\n          ...isFieldsEdit,\n          [name]: value,\n        });\n      }\n    },\n    [isFieldsEdit, formValues, user],\n  );\n\n  const cancelEditingForm = useCallback(\n    () => {\n      setIsFieldsEdit({});\n      setFormValues({ ...formValues, ...user });\n    },\n    [formValues, user],\n  );\n\n  const handleEscPress = useCallback(\n    (evt) => evt.key === 'Escape' && cancelEditingForm(),\n    [cancelEditingForm],\n  );\n\n  const onChange = useCallback(\n    (evt) => {\n      const { name, value } = evt.target;\n      setFormValues({\n        ...formValues,\n        [name]: value,\n      });\n    },\n    [formValues],\n  );\n\n  const onSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      const editedInputs: { [name: string]: string } = {};\n      Object.keys(isFieldsEdit)\n        .forEach((key) => {\n          if (isFieldsEdit[key]) editedInputs[key] = formValues[key];\n        });\n      dispatch(editUser(editedInputs));\n      setIsFieldsEdit({});\n    },\n    [isFieldsEdit, formValues],\n  );\n\n  useEffect(() => {\n    if (Object.values(isFieldsEdit).includes(true)) {\n      document.addEventListener('keydown', handleEscPress);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleEscPress);\n    };\n  }, [isFieldsEdit, handleEscPress]);\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Имя\"\n          value={formValues.name}\n          name=\"name\"\n          icon={!isFieldsEdit.name ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.name}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Логин\"\n          value={formValues.email}\n          name=\"email\"\n          icon={!isFieldsEdit.email ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.email}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Пароль\"\n          value={formValues.password}\n          name=\"password\"\n          icon={!isFieldsEdit.password ? 'EditIcon' : 'CloseIcon'}\n          size=\"default\"\n          onIconClick={(e) => onIconClick(e)}\n          onChange={(e) => onChange(e)}\n          disabled={!isFieldsEdit.password}\n        />\n        {Object.values(isFieldsEdit).includes(true) ? (\n          <div className={styles.controls}>\n            <Button type=\"primary\" size=\"medium\">Сохранить</Button>\n            <Button type=\"secondary\" size=\"medium\" onClick={cancelEditingForm}>Отмена</Button>\n          </div>\n        ) : null}\n      </form>\n      {(editUserRequest || logoutRequest) && <ModalLoader />}\n    </>\n  );\n};\n\nexport default EditUser;\n","/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useCallback } from 'react';\nimport { NavLink, useHistory, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport styles from './profile.module.css';\nimport { signOut } from '../services/actions/profile';\nimport EditUser from '../components/edit-user/edit-user';\n\nconst Profile = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onLogoutBtnClick = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      dispatch(signOut(() => history.replace('/login')));\n    },\n    [history],\n  );\n\n  return (\n    <section className={styles.section}>\n      <nav className={styles.nav}>\n        <ul className={styles.list}>\n          <li>\n            <NavLink\n              to=\"/profile\"\n              exact\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n            >\n              Профиль\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/profile/orders\"\n              exact\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n            >\n              История заказов\n            </NavLink>\n\n          </li>\n          <li>\n            <NavLink\n              to=\"/login\"\n              className={`${styles.link} text text_type_main-medium text_color_inactive`}\n              activeClassName={styles.link_active}\n              onClick={onLogoutBtnClick}\n            >\n              Выход\n            </NavLink>\n          </li>\n        </ul>\n        <p className={`${styles.caption} text text_type_main-default text_color_inactive mt-20`}>\n          В этом разделе вы можете\n          изменить свои персональные данные\n        </p>\n      </nav>\n      <Route path=\"/profile\" exact>\n        <EditUser />\n      </Route>\n      <Route path=\"/profile/orders\" exact>\n        <></>\n      </Route>\n      <div className={styles['centering-block']} />\n    </section>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\n\nconst Ingredients = () => (\n  <section className=\"mt-30\">\n    <IngredientDetails />\n  </section>\n);\n\nexport default Ingredients;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport styles from './not-found.module.css';\n\nconst NotFound = () => {\n  const { goBack } = useHistory();\n\n  return (\n    <section className={styles.container}>\n      <p className={`${styles.code} text text_type_digits-large`}>404</p>\n      <p className=\"text text_type_main-medium mt-4 mb-4\">\n        Похоже, что такой страницы не существует... Уточните адрес ссылки и попробуйте снова.\n      </p>\n      <Button type=\"secondary\" size=\"large\" onClick={() => goBack()}>Назад</Button>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport ProtectedRoute from '../protected-route/protected-route';\nimport ProtectedFromAuthRoute from '../protected-from-auth-route/protected-from-auth-route';\nimport AppHeader from '../app-header/app-header';\nimport Main from '../main/main';\nimport Popups from '../popups/popups';\nimport {\n  Home, Login, Register, ForgotPassword, ResetPassword, Profile, Ingredients, NotFound,\n} from '../../pages';\nimport { getIngredients } from '../../services/actions/burger-ingredients';\nimport { getUser } from '../../services/actions/profile';\nimport useToken from '../../services/token';\nimport { useDispatch, useSelector, useLocation } from '../../services/hooks';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { ingredients, profile } = useSelector((state) => state);\n  const { ingredientsRequest } = ingredients;\n  const { user, getUserRequest } = profile;\n  const location = useLocation();\n  const background = location.state ? location.state.background : null;\n  useEffect(() => {\n    const { refreshToken } = useToken();\n    dispatch(getIngredients());\n    if (refreshToken && !user) {\n      dispatch(getUser());\n    }\n  }, [user]);\n  return (\n    <>\n      <AppHeader />\n      <Main isLoading={ingredientsRequest || getUserRequest}>\n        <DndProvider backend={HTML5Backend}>\n          <Switch location={background || location}>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <ProtectedFromAuthRoute path=\"/login\">\n              <Login />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path=\"/register\">\n              <Register />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path=\"/forgot-password\">\n              <ForgotPassword />\n            </ProtectedFromAuthRoute>\n            <ProtectedFromAuthRoute path=\"/reset-password\">\n              <ResetPassword />\n            </ProtectedFromAuthRoute>\n            <ProtectedRoute path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n            <Route path=\"/ingredients/:id\">\n              <Ingredients />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </DndProvider>\n        <Popups />\n      </Main>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  INCREASE_INGREDIENT,\n  DECREASE_INGREDIENT,\n  RESET_INGREDIENTS_COUNT,\n} from '../actions/action-types';\nimport { TIngredient } from '../types/data';\n\nexport type TBurgerIngredientsState = {\n  ingredients: ReadonlyArray<TIngredient>,\n  ingredientsRequest: boolean,\n  ingredientsFailed: boolean,\n};\n\nconst initialState: TBurgerIngredientsState = {\n  ingredients: [],\n  ingredientsRequest: false,\n  ingredientsFailed: false,\n};\n\nexport default function burgerIngredientsReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case INCREASE_INGREDIENT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient._id === action.payload._id) {\n            ingredient.qty = !ingredient.qty ? 1 : ingredient.qty + 1;\n          }\n          return ingredient;\n        }),\n      };\n    }\n    case DECREASE_INGREDIENT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient._id === action.payload._id) {\n            ingredient.qty = !ingredient.qty ? 0 : ingredient.qty - 1;\n          }\n          return ingredient;\n        }),\n      };\n    }\n    case RESET_INGREDIENTS_COUNT: {\n      return {\n        ...state,\n        ingredients: state.ingredients.map((ingredient) => {\n          if (ingredient.qty) ingredient.qty = 0;\n          return ingredient;\n        }),\n      };\n    }\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        ingredientsRequest: true,\n        ingredientsFailed: false,\n      };\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredients: action.payload,\n      };\n    }\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER,\n  ADD_INGREDIENT_TO_CONSTRUCTOR,\n  REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n  REPLACE_BUN_IN_CONSTRUCTOR,\n  COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER,\n  REPLACE_ITEMS_IN_DRAGGING_CONTAINER,\n  RESET_DRAGGING_CONTAINER,\n  RESET_CONSTRUCTOR,\n} from '../actions/action-types';\nimport { TMainIngredient, TBun } from '../types/data';\n\nexport type TBurgerConstructorState = {\n  mainIngredients: ReadonlyArray<TMainIngredient>,\n  draggingMainIngredients: ReadonlyArray<TMainIngredient>,\n  bun: TBun | null,\n  totalPrice: number,\n};\n\nconst initialState: TBurgerConstructorState = {\n  mainIngredients: [],\n  draggingMainIngredients: [],\n  bun: null,\n  totalPrice: 0,\n};\n\nexport default function burgerConstructorReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case ADD_INGREDIENT_TO_CONSTRUCTOR: {\n      return {\n        ...state,\n        mainIngredients: [...state.mainIngredients, action.payload],\n        totalPrice: state.totalPrice + action.payload.price,\n      };\n    }\n    case REMOVE_INGREDIENT_FROM_CONSTRUCTOR: {\n      return {\n        ...state,\n        mainIngredients: state.mainIngredients.filter((ingredient) => (\n          ingredient._cartId !== action.payload._cartId\n        )),\n        totalPrice: state.totalPrice - action.payload.price,\n      };\n    }\n    case REPLACE_BUN_IN_CONSTRUCTOR: {\n      return {\n        ...state,\n        bun: action.payload,\n        totalPrice: state.totalPrice\n          - (!state.bun ? 0 : 2 * state.bun.price)\n          + 2 * action.payload.price,\n      };\n    }\n    case UPDATE_CONSTRUCTOR_FROM_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        mainIngredients: [...state.draggingMainIngredients],\n      };\n    }\n    case COPY_CONSTRUCTOR_TO_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        draggingMainIngredients: [...state.mainIngredients],\n      };\n    }\n    case REPLACE_ITEMS_IN_DRAGGING_CONTAINER: {\n      const { initialIndex, targetIndex } = action.payload;\n      const newDrraggingMain = [...state.draggingMainIngredients];\n      newDrraggingMain.splice(targetIndex, 0, ...newDrraggingMain.splice(initialIndex, 1));\n      return {\n        ...state,\n        draggingMainIngredients: newDrraggingMain,\n      };\n    }\n    case RESET_DRAGGING_CONTAINER: {\n      return {\n        ...state,\n        draggingMainIngredients: [...initialState.draggingMainIngredients],\n      };\n    }\n    case RESET_CONSTRUCTOR: {\n      return {\n        ...initialState,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  CLOSE_ORDER_DETAILS,\n  OPEN_ERROR_POPUP,\n  CLOSE_ERROR_POPUP,\n  OPEN_SUCCESS_POPUP,\n  CLOSE_SUCCESS_POPUP,\n} from '../actions/action-types';\nimport { TOrderDetails, TInfoTooltip } from '../types/data';\n\nexport type TPopupsState = {\n  orderRequest: boolean,\n  isOrderDetailsOpen: boolean,\n  orderDetailsContent: TOrderDetails | null,\n  isErrorPopupOpen: boolean,\n  errorPopupContent: TInfoTooltip | null,\n  isSuccessPopupOpen: boolean,\n  successPopupContent: TInfoTooltip | null,\n};\n\nconst initialState: TPopupsState = {\n  orderRequest: false,\n  isOrderDetailsOpen: false,\n  orderDetailsContent: null,\n  isErrorPopupOpen: false,\n  errorPopupContent: null,\n  isSuccessPopupOpen: false,\n  successPopupContent: null,\n};\n\nexport default function popupsReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case GET_ORDER_DETAILS_REQUEST: {\n      return {\n        ...state,\n        orderRequest: true,\n      };\n    }\n    case GET_ORDER_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        orderRequest: false,\n        isOrderDetailsOpen: true,\n        orderDetailsContent: action.payload,\n      };\n    }\n    case GET_ORDER_DETAILS_FAILED: {\n      return {\n        ...state,\n        orderRequest: false,\n      };\n    }\n    case CLOSE_ORDER_DETAILS: {\n      return {\n        ...state,\n        isOrderDetailsOpen: initialState.isOrderDetailsOpen,\n        orderDetailsContent: initialState.orderDetailsContent,\n      };\n    }\n    case OPEN_ERROR_POPUP: {\n      return {\n        ...state,\n        isErrorPopupOpen: true,\n        errorPopupContent: action.payload,\n      };\n    }\n    case CLOSE_ERROR_POPUP: {\n      return {\n        ...state,\n        isErrorPopupOpen: initialState.isErrorPopupOpen,\n        errorPopupContent: initialState.errorPopupContent,\n      };\n    }\n    case OPEN_SUCCESS_POPUP: {\n      return {\n        ...state,\n        isSuccessPopupOpen: true,\n        successPopupContent: action.payload,\n      };\n    }\n    case CLOSE_SUCCESS_POPUP: {\n      return {\n        ...state,\n        isSuccessPopupOpen: initialState.isSuccessPopupOpen,\n        successPopupContent: initialState.successPopupContent,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SET_USER,\n  CLEAR_USER,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  EDIT_USER_REQUEST,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAILED,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n} from '../actions/action-types';\n\nimport { TUser } from '../types/data';\n\nexport type TProfilesState = {\n  user: TUser | null,\n  getUserRequest: boolean,\n  getUserFailed: boolean,\n  editUserRequest: boolean,\n  editUserFailed: boolean,\n  logoutRequest: boolean,\n  logoutFailed: boolean,\n};\n\nconst initialState: TProfilesState = {\n  user: null,\n  getUserRequest: false,\n  getUserFailed: false,\n  editUserRequest: false,\n  editUserFailed: false,\n  logoutRequest: false,\n  logoutFailed: false,\n};\n\nexport default function profileReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case SET_USER: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n    case CLEAR_USER: {\n      return {\n        ...state,\n        user: initialState.user,\n      };\n    }\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n        getUserFailed: false,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        getUserRequest: false,\n        user: action.payload,\n      };\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserFailed: true,\n      };\n    }\n    case EDIT_USER_REQUEST: {\n      return {\n        ...state,\n        editUserRequest: true,\n        editUserFailed: false,\n      };\n    }\n    case EDIT_USER_SUCCESS: {\n      return {\n        ...state,\n        editUserRequest: false,\n        user: action.payload,\n      };\n    }\n    case EDIT_USER_FAILED: {\n      return {\n        ...state,\n        editUserRequest: false,\n        editUserFailed: true,\n      };\n    }\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        logoutRequest: true,\n        logoutFailed: false,\n      };\n    }\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        logoutRequest: false,\n      };\n    }\n    case LOGOUT_FAILED: {\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n} from '../actions/action-types';\n\nexport type TRegisterState = {\n  registerRequest: boolean,\n  registerFailed: boolean,\n};\n\nconst initialState: TRegisterState = {\n  registerRequest: false,\n  registerFailed: false,\n};\n\nexport default function registerReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        registerRequest: true,\n        registerFailed: false,\n      };\n    }\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        registerRequest: false,\n      };\n    }\n    case REGISTER_FAILED: {\n      return {\n        ...state,\n        registerRequest: false,\n        registerFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n} from '../actions/action-types';\n\nexport type TLoginState = {\n  loginRequest: boolean,\n  loginFailed: boolean,\n};\n\nconst initialState: TLoginState = {\n  loginRequest: false,\n  loginFailed: false,\n};\n\nexport default function loginReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loginRequest: true,\n        loginFailed: false,\n      };\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loginRequest: false,\n      };\n    }\n    case LOGIN_FAILED: {\n      return {\n        ...state,\n        loginRequest: false,\n        loginFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILED,\n} from '../actions/action-types';\n\nexport type TForgotPasswordState = {\n  forgotPasswordRequest: boolean,\n  forgotPasswordFailed: boolean,\n};\n\nconst initialState: TForgotPasswordState = {\n  forgotPasswordRequest: false,\n  forgotPasswordFailed: false,\n};\n\nexport default function forgotPasswordReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotPasswordRequest: true,\n        forgotPasswordFailed: false,\n        forgotPasswordSuccess: false,\n      };\n    }\n    case FORGOT_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n      };\n    }\n    case FORGOT_PASSWORD_FAILED: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n        forgotPasswordFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED,\n} from '../actions/action-types';\n\nexport type TResetPasswordState = {\n  resetPasswordRequest: boolean,\n  resetPasswordFailed: boolean,\n};\n\nconst initialState: TResetPasswordState = {\n  resetPasswordRequest: false,\n  resetPasswordFailed: false,\n};\n\nexport default function resetPasswordReducer(state = initialState, action: any = {}) {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetPasswordRequest: true,\n        resetPasswordFailed: false,\n      };\n    }\n    case RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n      };\n    }\n    case RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordFailed: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport burgerIngredientsReducer from './burger-ingredients';\nimport burgerConstructorReducer from './burger-constructor';\nimport popupsReducer from './popups';\nimport profileReducer from './profile';\nimport registerReducer from './register';\nimport loginReducer from './login';\nimport forgotPasswordReducer from './forgot-password';\nimport resetPasswordReducer from './reset-password';\n\nexport const rootReducer = combineReducers({\n  ingredients: burgerIngredientsReducer,\n  burgerConstructor: burgerConstructorReducer,\n  popups: popupsReducer,\n  profile: profileReducer,\n  register: registerReducer,\n  login: loginReducer,\n  forgotPassword: forgotPasswordReducer,\n  resetPassword: resetPasswordReducer,\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { TBurgerIngredientsState } from './reducers/burger-ingredients';\nimport { TBurgerConstructorState } from './reducers/burger-constructor';\nimport { TPopupsState } from './reducers/popups';\nimport { TProfilesState } from './reducers/profile';\nimport { TRegisterState } from './reducers/register';\nimport { TLoginState } from './reducers/login';\nimport { TForgotPasswordState } from './reducers/forgot-password';\nimport { TResetPasswordState } from './reducers/reset-password';\nimport { rootReducer } from './reducers';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enchancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enchancer);\n\nexport type RootState = {\n  ingredients: TBurgerIngredientsState,\n  burgerConstructor: TBurgerConstructorState,\n  popups: TPopupsState,\n  profile: TProfilesState,\n  register: TRegisterState,\n  login: TLoginState,\n  forgotPassword: TForgotPasswordState,\n  resetPassword: TResetPasswordState,\n};\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/app/app';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ingredient-details_image__H2-xP\",\"title\":\"ingredient-details_title__2_5MB\",\"nutrition\":\"ingredient-details_nutrition__2ax8v\",\"component\":\"ingredient-details_component__39Tnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"credentials-form_container__j3UyF\",\"title\":\"credentials-form_title__3cULh\",\"form\":\"credentials-form_form__28Z2W\",\"nav\":\"credentials-form_nav__2VqWC\",\"link\":\"credentials-form_link__1etUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"container\":\"app-header_container__2ER_-\",\"menu\":\"app-header_menu__3SLom\",\"logo\":\"app-header_logo__zVEfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient_card__1j458\",\"image\":\"ingredient_image__3WGGy\",\"price\":\"ingredient_price__2xF1Q\",\"name\":\"ingredient_name__HmI8K\",\"counter\":\"ingredient_counter__3L2pW\",\"counter_active\":\"ingredient_counter_active__9Os02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\",\"title\":\"modal_title__1efUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-ingredients_container__EME_h\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"content\":\"burger-ingredients_content__1rMpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"main-constructor-element_list-item__3nNoN\",\"list-item_dragging\":\"main-constructor-element_list-item_dragging__2j6Oh\",\"icon\":\"main-constructor-element_icon__167nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"header-button_button__Oq4u3\",\"link_active\":\"header-button_link_active__3Fx1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2W-l3\",\"main_loader\":\"main_main_loader__27zuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-id\":\"order-details_order-id__22QIi\",\"image\":\"order-details_image__lnOoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ingredients-category_list__1iaz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"edit-user_form__1bkl8\",\"controls\":\"edit-user_controls__sjAs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__heFy6\",\"code\":\"not-found_code__acw3J\"};"],"sourceRoot":""}